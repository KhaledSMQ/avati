export function setAttributes(e,t,s=!1){Object.entries(t).forEach((([t,o])=>{setAttribute(e,t,o,s)}))}export function setAttribute(e,t,s,o=!1){if("className"===t)e.className.baseVal=s;else if("style"===t&&"object"==typeof s)Object.assign(e.style,s);else if(t.startsWith("on")&&"function"==typeof s){const o=t.substring(2).toLowerCase();e.addEventListener(o,s)}else t in e?e[t]=s:o?e.setAttributeNS(null,t,s):e.setAttribute(t,s)}export function removeAttribute(e,t){if("className"===t)e.className="";else if("style"===t)e.removeAttribute("style");else if(t.startsWith("on")){const e=t.substring(2).toLowerCase();console.warn(`Cannot remove event listener for ${e}. You need to keep a reference to the handler.`)}else e.removeAttribute(t)}