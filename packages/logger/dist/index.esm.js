var e,o={d:function(e,n){for(var t in n)o.o(n,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:n[t]})},o:function(e,o){return Object.prototype.hasOwnProperty.call(e,o)}},n={};o.d(n,{C:function(){return i},$:function(){return e}}),function(e){e[e.ERROR=0]="ERROR",e[e.WARN=1]="WARN",e[e.INFO=2]="INFO",e[e.DEBUG=3]="DEBUG"}(e||(e={}));const t={level:"INFO",enableTimestamp:!0,debugMode:!1,enablePerformance:!1};class i{constructor(e={}){this.config={...t,...e},this.debugTimers=new Map,this.debugGroups=new Set}static getInstance(e){return i.instance?e&&i.instance.updateConfig(e):i.instance=new i(e),i.instance}updateConfig(e){Object.assign(this.config,e)}shouldLog(o){return e[o]<=e[this.config.level]}getPrefix(){const e=[];return this.config.enableTimestamp&&e.push(`[${(new Date).toISOString()}]`),this.config.prefix&&e.push(`[${this.config.prefix}]`),e.length?e.join(" ")+" ":""}log(e,o,...n){if(!this.shouldLog(e))return;const t=`${this.getPrefix()}${o}`;switch(e){case"ERROR":console.error(t,...n);break;case"WARN":console.warn(t,...n);break;case"INFO":console.info(t,...n);break;case"DEBUG":console.debug(t,...n)}}error(e,...o){this.log("ERROR",e,...o)}warn(e,...o){this.log("WARN",e,...o)}info(e,...o){this.log("INFO",e,...o)}debug(e,...o){this.config.debugMode&&this.log("DEBUG",e,...o)}group(e){this.config.debugMode&&(this.debugGroups.add(e),console.group(this.getPrefix()+e))}groupEnd(e){this.config.debugMode&&this.debugGroups.has(e)&&(this.debugGroups.delete(e),console.groupEnd())}time(e){this.config.debugMode&&this.config.enablePerformance&&this.debugTimers.set(e,performance.now())}timeEnd(e){if(this.config.debugMode&&this.config.enablePerformance){const o=this.debugTimers.get(e);if(o){const n=performance.now()-o;this.debug(`${e}: ${n.toFixed(2)}ms`),this.debugTimers.delete(e)}}}createChildLogger(e){return i.getInstance({...this.config,prefix:this.config.prefix?`${this.config.prefix}:${e}`:e})}clear(){console.clear()}}var s=n.C,r=n.$;export{s as ConsoleLogger,r as LogLevel};