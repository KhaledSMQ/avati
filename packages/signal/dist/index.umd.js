/*!
 * @avatijs/signal 0.1.1
 * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://avati.io/ for details.
 */

/* eslint-disable */

/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define("Avati", [], factory);
	else if(typeof exports === 'object')
		exports["Avati"] = factory();
	else
		root["Avati"] = factory();
})(typeof self !== 'undefined' ? self : this, () => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/asyncSignal.ts":
/*!****************************!*\
  !*** ./src/asyncSignal.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncSignal: () => (/* binding */ AsyncSignal),\n/* harmony export */   asyncSignal: () => (/* binding */ asyncSignal)\n/* harmony export */ });\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * A Signal subclass for managing asynchronous operations with built-in\n * loading states, caching, and retry logic\n *\n * @template T Type of data being fetched\n * @template E Type of error that can occur\n *\n * @example\n * // User authentication with error handling\n * interface User {\n *   id: string;\n *   name: string;\n *   email: string;\n * }\n *\n * interface AuthError {\n *   code: 'invalid_credentials' | 'network_error' | 'server_error';\n *   message: string;\n * }\n *\n * const authSignal = new AsyncSignal<User, AuthError>(\n *   async () => {\n *     const response = await fetch('/api/auth');\n *     if (!response.ok) {\n *       throw {\n *         code: 'invalid_credentials',\n *         message: 'Invalid username or password'\n *       };\n *     }\n *     return response.json();\n *   },\n *   {\n *     cache: { enabled: true, ttl: 30 * 60 * 1000 }, // 30min cache\n *     onError: (error) => {\n *       if (error.code === 'invalid_credentials') {\n *         showLoginForm();\n *       } else {\n *         showErrorDialog(error.message);\n *       }\n *     }\n *   }\n * );\n *\n * @example\n * // Real-time search with request cancellation\n * const searchSignal = new AsyncSignal(\n *   async (query: string) => {\n *     const response = await fetch(`/api/search?q=${query}`);\n *     return response.json();\n *   }\n * );\n *\n * searchInput.addEventListener('input', async (e) => {\n *   const results = await searchSignal.fetch(); // Auto-cancels previous\n *   updateSearchResults(results);\n * });\n *\n * @example\n * // File upload with progress tracking\n * const uploadSignal = new AsyncSignal<string>(\n *   async (file: File) => {\n *     const formData = new FormData();\n *     formData.append('file', file);\n *\n *     const response = await fetch('/api/upload', {\n *       method: 'POST',\n *       body: formData\n *     });\n *\n *     if (!response.ok) {\n *       throw new Error('Upload failed');\n *     }\n *\n *     const { url } = await response.json();\n *     return url;\n *   },\n *   {\n *     retryConfig: {\n *       attempts: 3,\n *       delay: 2000,\n *       backoffFactor: 1.5\n *     },\n *     onSuccess: (url) => {\n *       showSuccess(`File uploaded to ${url}`);\n *     }\n *   }\n * );\n *\n * @example\n * // Polling with caching\n * const pollSignal = new AsyncSignal<JobStatus>(\n *   async (jobId: string) => {\n *     const response = await fetch(`/api/jobs/${jobId}`);\n *     return response.json();\n *   },\n *   {\n *     cache: {\n *       enabled: true,\n *       ttl: 5000 // Cache for 5s between polls\n *     }\n *   }\n * );\n *\n * const pollJob = async (jobId: string) => {\n *   while (true) {\n *     const status = await pollSignal.fetch();\n *     if (status.state === 'completed') break;\n *     await new Promise(resolve => setTimeout(resolve, 5000));\n *   }\n * };\n */\nclass AsyncSignal extends _signal__WEBPACK_IMPORTED_MODULE_0__.Signal {\n    constructor(fetchFn, options = {}) {\n        super({\n            data: null,\n            loading: false,\n            error: null,\n            timestamp: 0,\n        }, options);\n        this.abortController = null;\n        this.fetchFn = fetchFn;\n        this.options = options;\n    }\n    /**\n     * Fetches data using the provided fetch function\n     * Handles loading states, caching, retries, and error handling\n     *\n     * @param force Whether to bypass cache and force a new fetch\n     * @returns The fetched data or null if fetch failed\n     *\n     * @example\n     * const signal = new AsyncSignal(fetchUser);\n     * await signal.fetch(); // Normal fetch, uses cache if valid\n     * await signal.fetch(true); // Force fetch, bypass cache\n     */\n    async fetch(force = false) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        // Check cache unless forced refresh\n        if (this.isCacheValid() && !force) {\n            return this.value.data;\n        }\n        // Cancel any in-flight request\n        if (this.abortController) {\n            this.abortController.abort();\n        }\n        this.abortController = new AbortController();\n        // Set loading state\n        this.value = {\n            ...this.value,\n            loading: true,\n            error: null,\n        };\n        // Initialize retry loop variables\n        let attempts = 0;\n        const maxAttempts = ((_a = this.options.retryConfig) === null || _a === void 0 ? void 0 : _a.attempts) || 1;\n        const delay = ((_b = this.options.retryConfig) === null || _b === void 0 ? void 0 : _b.delay) || 1000;\n        const backoffFactor = ((_c = this.options.retryConfig) === null || _c === void 0 ? void 0 : _c.backoffFactor) || 2;\n        // Retry loop\n        while (attempts < maxAttempts) {\n            try {\n                const data = await this.fetchFn();\n                // Update state on success\n                this.value = {\n                    data,\n                    loading: false,\n                    error: null,\n                    timestamp: Date.now(),\n                };\n                (_e = (_d = this.options).onSuccess) === null || _e === void 0 ? void 0 : _e.call(_d, data);\n                return data;\n            }\n            catch (error) {\n                attempts++;\n                // If out of retries, set error state\n                if (attempts === maxAttempts) {\n                    this.value = {\n                        ...this.value,\n                        loading: false,\n                        error: error,\n                    };\n                    (_g = (_f = this.options).onError) === null || _g === void 0 ? void 0 : _g.call(_f, error);\n                    return null;\n                }\n                // Wait before retrying with exponential backoff\n                await new Promise(resolve => setTimeout(resolve, delay * Math.pow(backoffFactor, attempts - 1)));\n            }\n        }\n        return null;\n    }\n    /**\n     * Forces a fresh fetch, bypassing cache\n     */\n    refresh() {\n        return this.fetch(true);\n    }\n    /**\n     * Cleans up by aborting any in-flight request\n     */\n    dispose() {\n        if (this.abortController) {\n            this.abortController.abort();\n        }\n        super.dispose();\n    }\n    /**\n     * Checks if cached data is still valid based on TTL\n     */\n    isCacheValid() {\n        var _a;\n        if (!((_a = this.options.cache) === null || _a === void 0 ? void 0 : _a.enabled))\n            return false;\n        if (!this.value.data)\n            return false;\n        const ttl = this.options.cache.ttl || 5 * 60 * 1000; // Default 5 minutes\n        return Date.now() - this.value.timestamp < ttl;\n    }\n}\n/**\n * Factory function to create AsyncSignal instances\n *\n * @example\n * // Example 1: Simple user fetch with caching\n * const userSignal = asyncSignal(\n *   async () => {\n *     const response = await fetch('/api/user');\n *     return response.json();\n *   },\n *   {\n *     cache: { enabled: true, ttl: 60000 } // Cache for 1 minute\n *   }\n * );\n *\n * @example\n * // Example 2: Weather API with retries\n * const weatherSignal = asyncSignal(\n *   async () => {\n *     const response = await fetch('https://api.weather.com/current');\n *     return response.json();\n *   },\n *   {\n *     retryConfig: {\n *       attempts: 3,\n *       delay: 1000,\n *       backoffFactor: 2\n *     }\n *   }\n * );\n *\n * @example\n * // Example 3: Todo list with error handling\n * const todoSignal = asyncSignal(\n *   async () => {\n *     const response = await fetch('/api/todos');\n *     if (!response.ok) throw new Error('Failed to fetch todos');\n *     return response.json();\n *   },\n *   {\n *     onError: (error) => console.error('Todo fetch failed:', error),\n *     onSuccess: (todos) => console.log('Fetched todos:', todos.length)\n *   }\n * );\n */\nfunction asyncSignal(fetchFn, options) {\n    return new AsyncSignal(fetchFn, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/asyncSignal.ts\n");

/***/ }),

/***/ "./src/batch.ts":
/*!**********************!*\
  !*** ./src/batch.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batch: () => (/* binding */ batch)\n/* harmony export */ });\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Batch multiple signal updates to prevent cascading updates\n */\nfunction batch(fn) {\n    const context = _signalContext__WEBPACK_IMPORTED_MODULE_0__.SignalContext.getInstance();\n    context.beginBatch();\n    try {\n        return fn();\n    }\n    finally {\n        context.endBatch();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmF0Y2gudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUc0QztBQUVoRDs7R0FFRztBQUNJLFNBQVMsS0FBSyxDQUFJLEVBQVc7SUFDaEMsTUFBTSxPQUFPLEdBQUcseURBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM1QyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDckIsSUFBSSxDQUFDO1FBQ0QsT0FBTyxFQUFFLEVBQUUsQ0FBQztJQUNoQixDQUFDO1lBQVMsQ0FBQztRQUNQLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN2QixDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F2YXRpLy4vc3JjL2JhdGNoLnRzPzYzYjAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cblxuaW1wb3J0IHsgU2lnbmFsQ29udGV4dCB9IGZyb20gJy4vc2lnbmFsQ29udGV4dCc7XG5cbi8qKlxuICogQmF0Y2ggbXVsdGlwbGUgc2lnbmFsIHVwZGF0ZXMgdG8gcHJldmVudCBjYXNjYWRpbmcgdXBkYXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gYmF0Y2g8VD4oZm46ICgpID0+IFQpOiBUIHtcbiAgICBjb25zdCBjb250ZXh0ID0gU2lnbmFsQ29udGV4dC5nZXRJbnN0YW5jZSgpO1xuICAgIGNvbnRleHQuYmVnaW5CYXRjaCgpO1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBmbigpO1xuICAgIH0gZmluYWxseSB7XG4gICAgICAgIGNvbnRleHQuZW5kQmF0Y2goKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/batch.ts\n");

/***/ }),

/***/ "./src/combine.ts":
/*!************************!*\
  !*** ./src/combine.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine)\n/* harmony export */ });\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Combines multiple signals into a single signal containing an array of their values.\n * When any of the input signals change, the combined signal updates with all current values.\n *\n * @template T - Tuple type representing the types of values from each input signal\n *\n * @param signals - An array of signals to combine. Each signal can have a different type,\n *                 represented by the corresponding type in the tuple T.\n * @param options - Optional configuration options for the resulting signal, including\n *                 custom equality comparison and naming.\n *\n * @returns A new signal containing an array of the current values from all input signals.\n *          The returned signal updates whenever any input signal changes.\n *\n * @example\n * // Combining signals of different types\n * const nameSignal = new Signal<string>('John');\n * const ageSignal = new Signal<number>(25);\n * const activeSignal = new Signal<boolean>(true);\n *\n * const combined = combine([nameSignal, ageSignal, activeSignal]);\n * console.log(combined.value); // ['John', 25, true]\n *\n * nameSignal.value = 'Jane';\n * console.log(combined.value); // ['Jane', 25, true]\n *\n * @example\n * // Using with custom equality function\n * const combined = combine([sig1, sig2], {\n *   equals: (prev, next) =>\n *     prev.length === next.length &&\n *     prev.every((val, idx) => Object.is(val, next[idx]))\n * });\n */\nfunction combine(signals, options) {\n    var _a;\n    // dependencies on all input signals through their .value accessors\n    return (0,_computed__WEBPACK_IMPORTED_MODULE_0__.computed)(() => signals.map(s => s.value), {\n        // Ensure updates are propagated by using appropriate equality check\n        equals: (_a = options === null || options === void 0 ? void 0 : options.equals) !== null && _a !== void 0 ? _a : ((prev, next) => {\n            if (!prev || !next || prev.length !== next.length)\n                return false;\n            return prev.every((val, idx) => Object.is(val, next[idx]));\n        }),\n        name: (options === null || options === void 0 ? void 0 : options.name) || `Signal(combine)[${signals.map(s => s.toString()).join(', ')}]`,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tYmluZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztJQUtJO0FBSWtDO0FBRXRDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQ0c7QUFDSSxTQUFTLE9BQU8sQ0FDbkIsT0FBeUMsRUFDekMsT0FBMEI7O0lBRTFCLG1FQUFtRTtJQUNuRSxPQUFPLG1EQUFRLENBQUMsR0FBRyxFQUFFLENBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQU8sRUFBRTtRQUNwRCxvRUFBb0U7UUFDcEUsTUFBTSxFQUFFLGFBQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxNQUFNLG1DQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDdkMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxNQUFNO2dCQUFFLE9BQU8sS0FBSyxDQUFDO1lBQ2hFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0QsQ0FBQyxDQUFDO1FBQ0YsSUFBSSxFQUFFLFFBQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxJQUFJLEtBQUksbUJBQW1CLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUc7S0FDekYsQ0FBQyxDQUFDO0FBR1AsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F2YXRpLy4vc3JjL2NvbWJpbmUudHM/NjdlZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgU2lnbmFsT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBjb21wdXRlZCB9IGZyb20gJy4vY29tcHV0ZWQnO1xuXG4vKipcbiAqIENvbWJpbmVzIG11bHRpcGxlIHNpZ25hbHMgaW50byBhIHNpbmdsZSBzaWduYWwgY29udGFpbmluZyBhbiBhcnJheSBvZiB0aGVpciB2YWx1ZXMuXG4gKiBXaGVuIGFueSBvZiB0aGUgaW5wdXQgc2lnbmFscyBjaGFuZ2UsIHRoZSBjb21iaW5lZCBzaWduYWwgdXBkYXRlcyB3aXRoIGFsbCBjdXJyZW50IHZhbHVlcy5cbiAqXG4gKiBAdGVtcGxhdGUgVCAtIFR1cGxlIHR5cGUgcmVwcmVzZW50aW5nIHRoZSB0eXBlcyBvZiB2YWx1ZXMgZnJvbSBlYWNoIGlucHV0IHNpZ25hbFxuICpcbiAqIEBwYXJhbSBzaWduYWxzIC0gQW4gYXJyYXkgb2Ygc2lnbmFscyB0byBjb21iaW5lLiBFYWNoIHNpZ25hbCBjYW4gaGF2ZSBhIGRpZmZlcmVudCB0eXBlLFxuICogICAgICAgICAgICAgICAgIHJlcHJlc2VudGVkIGJ5IHRoZSBjb3JyZXNwb25kaW5nIHR5cGUgaW4gdGhlIHR1cGxlIFQuXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIHJlc3VsdGluZyBzaWduYWwsIGluY2x1ZGluZ1xuICogICAgICAgICAgICAgICAgIGN1c3RvbSBlcXVhbGl0eSBjb21wYXJpc29uIGFuZCBuYW1pbmcuXG4gKlxuICogQHJldHVybnMgQSBuZXcgc2lnbmFsIGNvbnRhaW5pbmcgYW4gYXJyYXkgb2YgdGhlIGN1cnJlbnQgdmFsdWVzIGZyb20gYWxsIGlucHV0IHNpZ25hbHMuXG4gKiAgICAgICAgICBUaGUgcmV0dXJuZWQgc2lnbmFsIHVwZGF0ZXMgd2hlbmV2ZXIgYW55IGlucHV0IHNpZ25hbCBjaGFuZ2VzLlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDb21iaW5pbmcgc2lnbmFscyBvZiBkaWZmZXJlbnQgdHlwZXNcbiAqIGNvbnN0IG5hbWVTaWduYWwgPSBuZXcgU2lnbmFsPHN0cmluZz4oJ0pvaG4nKTtcbiAqIGNvbnN0IGFnZVNpZ25hbCA9IG5ldyBTaWduYWw8bnVtYmVyPigyNSk7XG4gKiBjb25zdCBhY3RpdmVTaWduYWwgPSBuZXcgU2lnbmFsPGJvb2xlYW4+KHRydWUpO1xuICpcbiAqIGNvbnN0IGNvbWJpbmVkID0gY29tYmluZShbbmFtZVNpZ25hbCwgYWdlU2lnbmFsLCBhY3RpdmVTaWduYWxdKTtcbiAqIGNvbnNvbGUubG9nKGNvbWJpbmVkLnZhbHVlKTsgLy8gWydKb2huJywgMjUsIHRydWVdXG4gKlxuICogbmFtZVNpZ25hbC52YWx1ZSA9ICdKYW5lJztcbiAqIGNvbnNvbGUubG9nKGNvbWJpbmVkLnZhbHVlKTsgLy8gWydKYW5lJywgMjUsIHRydWVdXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFVzaW5nIHdpdGggY3VzdG9tIGVxdWFsaXR5IGZ1bmN0aW9uXG4gKiBjb25zdCBjb21iaW5lZCA9IGNvbWJpbmUoW3NpZzEsIHNpZzJdLCB7XG4gKiAgIGVxdWFsczogKHByZXYsIG5leHQpID0+XG4gKiAgICAgcHJldi5sZW5ndGggPT09IG5leHQubGVuZ3RoICYmXG4gKiAgICAgcHJldi5ldmVyeSgodmFsLCBpZHgpID0+IE9iamVjdC5pcyh2YWwsIG5leHRbaWR4XSkpXG4gKiB9KTtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbWJpbmU8VCBleHRlbmRzIGFueVtdPihcbiAgICBzaWduYWxzOiB7IFtLIGluIGtleW9mIFRdOiBTaWduYWw8VFtLXT4gfSxcbiAgICBvcHRpb25zPzogU2lnbmFsT3B0aW9uczxUPixcbik6IFNpZ25hbDxUPiB7XG4gICAgLy8gZGVwZW5kZW5jaWVzIG9uIGFsbCBpbnB1dCBzaWduYWxzIHRocm91Z2ggdGhlaXIgLnZhbHVlIGFjY2Vzc29yc1xuICAgIHJldHVybiBjb21wdXRlZCgoKSA9PiAoc2lnbmFscy5tYXAocyA9PiBzLnZhbHVlKSBhcyBUKSwge1xuICAgICAgICAvLyBFbnN1cmUgdXBkYXRlcyBhcmUgcHJvcGFnYXRlZCBieSB1c2luZyBhcHByb3ByaWF0ZSBlcXVhbGl0eSBjaGVja1xuICAgICAgICBlcXVhbHM6IG9wdGlvbnM/LmVxdWFscyA/PyAoKHByZXYsIG5leHQpID0+IHtcbiAgICAgICAgICAgIGlmICghcHJldiB8fCAhbmV4dCB8fCBwcmV2Lmxlbmd0aCAhPT0gbmV4dC5sZW5ndGgpIHJldHVybiBmYWxzZTtcbiAgICAgICAgICAgIHJldHVybiBwcmV2LmV2ZXJ5KCh2YWwsIGlkeCkgPT4gT2JqZWN0LmlzKHZhbCwgbmV4dFtpZHhdKSk7XG4gICAgICAgIH0pLFxuICAgICAgICBuYW1lOiBvcHRpb25zPy5uYW1lIHx8IGBTaWduYWwoY29tYmluZSlbJHtzaWduYWxzLm1hcChzID0+IHMudG9TdHJpbmcoKSkuam9pbignLCAnKX1dYCxcbiAgICB9KTtcblxuXG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/combine.ts\n");

/***/ }),

/***/ "./src/computation.ts":
/*!****************************!*\
  !*** ./src/computation.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Computation: () => (/* binding */ Computation)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _updateQueue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./updateQueue */ \"./src/updateQueue.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Base class for managing reactive computations\n */\nclass Computation {\n    constructor(name) {\n        this.dirty = true;\n        this.disposed = false;\n        this.dependencies = new Set();\n        this.dependents = new Set();\n        this.depth = 0;\n        this.name = name;\n    }\n    /**\n     * Add a dependency to this computation\n     */\n    addDependency(signal) {\n        if (!this.dependencies.has(signal)) {\n            this.dependencies.add(signal);\n            if (signal instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_0__.ComputedSignal) {\n                this.updateDepth();\n            }\n        }\n    }\n    /**\n     * Remove a dependency from this computation\n     */\n    removeDependency(signal) {\n        if (this.dependencies.delete(signal)) {\n            this.updateDepth();\n        }\n    }\n    /**\n     * Clean up computation resources\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        this.clearDependencies();\n        this.dependents.clear();\n    }\n    /**\n     * Check if computation is dirty\n     */\n    isDirty() {\n        return this.dirty;\n    }\n    /**\n     * Check if computation has been disposed\n     */\n    isDisposed() {\n        return this.disposed;\n    }\n    /**\n     * Add a dependent computation, which will be recomputed when this computation updates\n     */\n    getDepth() {\n        return this.depth;\n    }\n    /**\n     * Mark computation as dirty and schedule update\n     */\n    markDirty() {\n        if (!this.disposed) {\n            this.dirty = true;\n            _updateQueue__WEBPACK_IMPORTED_MODULE_1__.UpdateQueue.getInstance().schedule(this);\n        }\n    }\n    /**\n     * Check if signal is a dependency of this computation\n     * @param signal\n     */\n    hasSignal(signal) {\n        return this.dependencies.has(signal);\n    }\n    /**\n     * Clear all dependencies and update depth\n     */\n    clearDependencies() {\n        for (const dep of this.dependencies) {\n            dep.removeDependent(this);\n        }\n        this.dependencies.clear();\n        this.updateDepth();\n    }\n    /**\n     * Update the computation's depth in the dependency graph\n     */\n    updateDepth() {\n        const oldDepth = this.depth;\n        let maxDepth = 0;\n        for (const dep of this.dependencies) {\n            if (dep instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_0__.ComputedSignal) {\n                maxDepth = Math.max(maxDepth, dep.getDepth() + 1);\n            }\n        }\n        if (oldDepth !== maxDepth) {\n            this.depth = maxDepth;\n            // Propagate depth update to dependents\n            for (const dependent of this.dependents) {\n                dependent.updateDepth();\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN0RCxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksUUFBUSxLQUFLLFFBQVEsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDO1lBQ3RCLHVDQUF1QztZQUN2QyxLQUFLLE1BQU0sU0FBUyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztnQkFDdEMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQzVCLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZhdGkvLi9zcmMvY29tcHV0YXRpb24udHM/NzJmMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgRGlzcG9zYWJsZSB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBDb21wdXRlZFNpZ25hbCB9IGZyb20gJy4vY29tcHV0ZWRTaWduYWwnO1xuaW1wb3J0IHsgVXBkYXRlUXVldWUgfSBmcm9tICcuL3VwZGF0ZVF1ZXVlJztcblxuLyoqXG4gKiBCYXNlIGNsYXNzIGZvciBtYW5hZ2luZyByZWFjdGl2ZSBjb21wdXRhdGlvbnNcbiAqL1xuZXhwb3J0IGFic3RyYWN0IGNsYXNzIENvbXB1dGF0aW9uIGltcGxlbWVudHMgRGlzcG9zYWJsZSB7XG4gICAgcHJvdGVjdGVkIGRpcnR5ID0gdHJ1ZTtcbiAgICBwcm90ZWN0ZWQgZGlzcG9zZWQgPSBmYWxzZTtcbiAgICBwcm90ZWN0ZWQgZGVwZW5kZW5jaWVzID0gbmV3IFNldDxTaWduYWw8YW55Pj4oKTtcbiAgICBwcm90ZWN0ZWQgZGVwZW5kZW50cyA9IG5ldyBTZXQ8Q29tcHV0YXRpb24+KCk7XG4gICAgcHJvdGVjdGVkIGRlcHRoID0gMDtcbiAgICBwcm90ZWN0ZWQgbmFtZT86IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKG5hbWU/OiBzdHJpbmcpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICB9XG5cbiAgICBhYnN0cmFjdCByZWNvbXB1dGUoKTogdm9pZDtcblxuXG4gICAgLyoqXG4gICAgICogQWRkIGEgZGVwZW5kZW5jeSB0byB0aGlzIGNvbXB1dGF0aW9uXG4gICAgICovXG4gICAgYWRkRGVwZW5kZW5jeShzaWduYWw6IFNpZ25hbDxhbnk+KTogdm9pZCB7XG4gICAgICAgIGlmICghdGhpcy5kZXBlbmRlbmNpZXMuaGFzKHNpZ25hbCkpIHtcbiAgICAgICAgICAgIHRoaXMuZGVwZW5kZW5jaWVzLmFkZChzaWduYWwpO1xuICAgICAgICAgICAgaWYgKHNpZ25hbCBpbnN0YW5jZW9mIENvbXB1dGVkU2lnbmFsKSB7XG4gICAgICAgICAgICAgICAgdGhpcy51cGRhdGVEZXB0aCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGEgZGVwZW5kZW5jeSBmcm9tIHRoaXMgY29tcHV0YXRpb25cbiAgICAgKi9cbiAgICByZW1vdmVEZXBlbmRlbmN5KHNpZ25hbDogU2lnbmFsPGFueT4pOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuZGVwZW5kZW5jaWVzLmRlbGV0ZShzaWduYWwpKSB7XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZURlcHRoKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDbGVhbiB1cCBjb21wdXRhdGlvbiByZXNvdXJjZXNcbiAgICAgKi9cbiAgICBkaXNwb3NlKCk6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy5kaXNwb3NlZCkgcmV0dXJuO1xuXG4gICAgICAgIHRoaXMuZGlzcG9zZWQgPSB0cnVlO1xuICAgICAgICB0aGlzLmNsZWFyRGVwZW5kZW5jaWVzKCk7XG4gICAgICAgIHRoaXMuZGVwZW5kZW50cy5jbGVhcigpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGNvbXB1dGF0aW9uIGlzIGRpcnR5XG4gICAgICovXG4gICAgaXNEaXJ0eSgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGlydHk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2sgaWYgY29tcHV0YXRpb24gaGFzIGJlZW4gZGlzcG9zZWRcbiAgICAgKi9cbiAgICBpc0Rpc3Bvc2VkKCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kaXNwb3NlZDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBBZGQgYSBkZXBlbmRlbnQgY29tcHV0YXRpb24sIHdoaWNoIHdpbGwgYmUgcmVjb21wdXRlZCB3aGVuIHRoaXMgY29tcHV0YXRpb24gdXBkYXRlc1xuICAgICAqL1xuICAgIGdldERlcHRoKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiB0aGlzLmRlcHRoO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIE1hcmsgY29tcHV0YXRpb24gYXMgZGlydHkgYW5kIHNjaGVkdWxlIHVwZGF0ZVxuICAgICAqL1xuICAgIG1hcmtEaXJ0eSgpOiB2b2lkIHtcblxuICAgICAgICBpZiAoIXRoaXMuZGlzcG9zZWQpIHtcbiAgICAgICAgICAgIHRoaXMuZGlydHkgPSB0cnVlO1xuICAgICAgICAgICAgVXBkYXRlUXVldWUuZ2V0SW5zdGFuY2UoKS5zY2hlZHVsZSh0aGlzKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIHNpZ25hbCBpcyBhIGRlcGVuZGVuY3kgb2YgdGhpcyBjb21wdXRhdGlvblxuICAgICAqIEBwYXJhbSBzaWduYWxcbiAgICAgKi9cbiAgICBoYXNTaWduYWwoc2lnbmFsOiBTaWduYWw8YW55Pik6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5kZXBlbmRlbmNpZXMuaGFzKHNpZ25hbCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2xlYXIgYWxsIGRlcGVuZGVuY2llcyBhbmQgdXBkYXRlIGRlcHRoXG4gICAgICovXG4gICAgcHJvdGVjdGVkIGNsZWFyRGVwZW5kZW5jaWVzKCk6IHZvaWQge1xuICAgICAgICBmb3IgKGNvbnN0IGRlcCBvZiB0aGlzLmRlcGVuZGVuY2llcykge1xuICAgICAgICAgICAgZGVwLnJlbW92ZURlcGVuZGVudCh0aGlzKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmRlcGVuZGVuY2llcy5jbGVhcigpO1xuICAgICAgICB0aGlzLnVwZGF0ZURlcHRoKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogVXBkYXRlIHRoZSBjb21wdXRhdGlvbidzIGRlcHRoIGluIHRoZSBkZXBlbmRlbmN5IGdyYXBoXG4gICAgICovXG4gICAgcHJvdGVjdGVkIHVwZGF0ZURlcHRoKCk6IHZvaWQge1xuICAgICAgICBjb25zdCBvbGREZXB0aCA9IHRoaXMuZGVwdGg7XG4gICAgICAgIGxldCBtYXhEZXB0aCA9IDA7XG5cbiAgICAgICAgZm9yIChjb25zdCBkZXAgb2YgdGhpcy5kZXBlbmRlbmNpZXMpIHtcbiAgICAgICAgICAgIGlmIChkZXAgaW5zdGFuY2VvZiBDb21wdXRlZFNpZ25hbCkge1xuICAgICAgICAgICAgICAgIG1heERlcHRoID0gTWF0aC5tYXgobWF4RGVwdGgsIGRlcC5nZXREZXB0aCgpICsgMSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob2xkRGVwdGggIT09IG1heERlcHRoKSB7XG4gICAgICAgICAgICB0aGlzLmRlcHRoID0gbWF4RGVwdGg7XG4gICAgICAgICAgICAvLyBQcm9wYWdhdGUgZGVwdGggdXBkYXRlIHRvIGRlcGVuZGVudHNcbiAgICAgICAgICAgIGZvciAoY29uc3QgZGVwZW5kZW50IG9mIHRoaXMuZGVwZW5kZW50cykge1xuICAgICAgICAgICAgICAgIGRlcGVuZGVudC51cGRhdGVEZXB0aCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/computation.ts\n");

/***/ }),

/***/ "./src/computed.ts":
/*!*************************!*\
  !*** ./src/computed.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computed: () => (/* binding */ computed)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Create a computed signal that derives its value from other signals\n */\nfunction computed(compute, options) {\n    return new _computedSignal__WEBPACK_IMPORTED_MODULE_0__.ComputedSignal(compute, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcHV0ZWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUc4QztBQUdsRDs7R0FFRztBQUNJLFNBQVMsUUFBUSxDQUNwQixPQUFnQixFQUNoQixPQUEwQjtJQUUxQixPQUFPLElBQUksMkRBQWMsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDaEQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F2YXRpLy4vc3JjL2NvbXB1dGVkLnRzPzhhYjkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgQ29tcHV0ZWRTaWduYWwgfSBmcm9tICcuL2NvbXB1dGVkU2lnbmFsJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcblxuLyoqXG4gKiBDcmVhdGUgYSBjb21wdXRlZCBzaWduYWwgdGhhdCBkZXJpdmVzIGl0cyB2YWx1ZSBmcm9tIG90aGVyIHNpZ25hbHNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVkPFQ+KFxuICAgIGNvbXB1dGU6ICgpID0+IFQsXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VD4sXG4pOiBTaWduYWw8VD4ge1xuICAgIHJldHVybiBuZXcgQ29tcHV0ZWRTaWduYWwoY29tcHV0ZSwgb3B0aW9ucyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/computed.ts\n");

/***/ }),

/***/ "./src/computedSignal.ts":
/*!*******************************!*\
  !*** ./src/computedSignal.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComputedSignal: () => (/* binding */ ComputedSignal)\n/* harmony export */ });\n/* harmony import */ var _computation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computation */ \"./src/computation.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n/**\n * Signal that derives its value from other signals\n *\n * @example\n * // Create base signals\n * const firstName = new Signal('John');\n * const lastName = new Signal('Doe');\n *\n * // Create a computed signal that depends on firstName and lastName\n * const fullName = new ComputedSignal(() => {\n *   return `${firstName.value} ${lastName.value}`;\n * });\n *\n * console.log(fullName.value); // Output: \"John Doe\"\n *\n * // When a dependency changes, the computed value updates automatically\n * firstName.value = 'Jane';\n * console.log(fullName.value); // Output: \"Jane Doe\"\n */\nclass ComputedSignal extends _signal__WEBPACK_IMPORTED_MODULE_0__.Signal {\n    /**\n     * Creates a new computed signal\n     * @param compute Function that derives the signal value\n     * @param options Configuration options for the signal\n     */\n    constructor(compute, options = {}) {\n        super(undefined, options);\n        this.computeFn = compute;\n        // Create an anonymous computation class instance\n        this.computation = new class extends _computation__WEBPACK_IMPORTED_MODULE_1__.Computation {\n            constructor(signal) {\n                super(signal.name);\n                this.signal = signal;\n            }\n            /**\n             * Recomputes the signal value when dependencies change\n             */\n            recompute() {\n                if (this.disposed)\n                    return;\n                const context = _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext.getInstance();\n                const prevComputation = context.getCurrentComputation();\n                context.setCurrentComputation(this);\n                // Prevent circular dependencies through effects\n                if (context.isInEffect()) {\n                    throw new _errors__WEBPACK_IMPORTED_MODULE_3__.CircularDependencyError(`Cannot create computed signal that depends on effects`);\n                }\n                try {\n                    // Check if any dependencies have been disposed\n                    for (const dep of this.dependencies) {\n                        if (dep.isDisposed()) {\n                            this.signal.dispose();\n                            throw new _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError('read from disposed dependency');\n                        }\n                    }\n                    // Compute new value and update if changed\n                    const newValue = this.signal.computeFn();\n                    if (!this.signal.equals(this.signal._value, newValue)) {\n                        this.signal._value = newValue;\n                        this.signal.notifyDependents();\n                    }\n                }\n                catch (error) {\n                    // Handle disposal errors\n                    if (error instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError) {\n                        this.signal.dispose();\n                    }\n                    throw error;\n                }\n                finally {\n                    // Restore previous computation context\n                    if (prevComputation) {\n                        context.setCurrentComputation(prevComputation);\n                    }\n                    this.dirty = false;\n                }\n            }\n        }(this);\n        // Initial computation\n        this.computation.recompute();\n    }\n    /**\n     * Gets the current value of the computed signal\n     */\n    get value() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError('read from');\n        }\n        // Verify dependencies are still valid\n        const dependencies = this.computation['dependencies'];\n        for (const dep of dependencies) {\n            if (dep.isDisposed()) {\n                this.dispose();\n                throw new _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError('read from disposed dependency');\n            }\n        }\n        // Recompute if dependencies have changed\n        if (this.computation.isDirty()) {\n            this.computation.recompute();\n        }\n        // Track this signal as a dependency for other computations\n        this.trackDependency();\n        return this._value;\n    }\n    /**\n     * Computed signals cannot be set directly\n     */\n    set value(_) {\n        throw new Error('Cannot set the value of a computed signal');\n    }\n    /**\n     * Gets the depth of this signal in the dependency graph\n     */\n    getDepth() {\n        return this.computation.getDepth();\n    }\n    /**\n     * Cleans up the signal and its dependencies\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        super.dispose();\n        this.computation.dispose();\n        // Recursively dispose dependent computed signals\n        for (const dependent of this.dependents) {\n            // @ts-ignore\n            if (dependent instanceof ComputedSignal || dependent['signal'] instanceof ComputedSignal) {\n                // @ts-ignore\n                const signal = dependent instanceof ComputedSignal ? dependent : dependent['signal'];\n                signal.dispose();\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/computedSignal.ts\n");

/***/ }),

/***/ "./src/createSignal.ts":
/*!*****************************!*\
  !*** ./src/createSignal.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSignal: () => (/* binding */ createSignal)\n/* harmony export */ });\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Create a new writable signal\n */\nfunction createSignal(initialValue, options) {\n    return new _signal__WEBPACK_IMPORTED_MODULE_0__.Signal(initialValue, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY3JlYXRlU2lnbmFsLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHOEI7QUFFbEM7O0dBRUc7QUFDSSxTQUFTLFlBQVksQ0FDeEIsWUFBZSxFQUNmLE9BQTBCO0lBRTFCLE9BQU8sSUFBSSwyQ0FBTSxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM3QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZhdGkvLi9zcmMvY3JlYXRlU2lnbmFsLnRzP2I4NDkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyB3cml0YWJsZSBzaWduYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVNpZ25hbDxUPihcbiAgICBpbml0aWFsVmFsdWU6IFQsXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VD4sXG4pOiBTaWduYWw8VD4ge1xuICAgIHJldHVybiBuZXcgU2lnbmFsKGluaXRpYWxWYWx1ZSwgb3B0aW9ucyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/createSignal.ts\n");

/***/ }),

/***/ "./src/debounced.ts":
/*!**************************!*\
  !*** ./src/debounced.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debounced: () => (/* binding */ debounced)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a debounced signal that updates its value after a specified delay\n * when the source signal changes.\n *\n * @param source Source signal to watch for changes\n * @param delay Time in milliseconds to wait before updating output\n * @param options Optional signal configuration\n *\n * @example\n * // Basic debouncing of rapid updates\n * const input = new Signal(\"\");\n * const debouncedInput = debounced(input, 300);\n *\n * input.value = \"h\";    // t=0ms\n * input.value = \"he\";   // t=100ms\n * input.value = \"hel\";  // t=200ms\n * input.value = \"hell\"; // t=250ms\n *\n * // debouncedInput.value will be \"hell\" at t=550ms\n *\n * @example\n * // Search input with debouncing\n * const searchQuery = new Signal(\"\");\n * const debouncedSearch = debounced(searchQuery, 500);\n *\n * effect(() => {\n *   // API call only happens 500ms after last keystroke\n *   fetchSearchResults(debouncedSearch.value);\n * });\n *\n * @example\n * // Form validation with debouncing\n * const formData = new Signal({ username: \"\", email: \"\" });\n * const debouncedForm = debounced(formData, 400, {\n *   equals: (a, b) => a.username === b.username && a.email === b.email\n * });\n *\n * effect(() => {\n *   // Validation runs 400ms after user stops typing\n *   validateForm(debouncedForm.value);\n * });\n */\nfunction debounced(source, delay, options) {\n    const output = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(source.value, options);\n    let timeoutId;\n    (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n        const value = source.value;\n        if (timeoutId)\n            clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n            output.value = value;\n        }, delay);\n        return () => {\n            if (timeoutId)\n                clearTimeout(timeoutId);\n        };\n    });\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVib3VuY2VkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzBDO0FBRVo7QUFFbEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBeUNHO0FBQ0ksU0FBUyxTQUFTLENBQ3JCLE1BQWlCLEVBQ2pCLEtBQWEsRUFDYixPQUEwQjtJQUUxQixNQUFNLE1BQU0sR0FBRywyREFBWSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDbkQsSUFBSSxTQUFxQyxDQUFDO0lBRTFDLCtDQUFNLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLFNBQVM7WUFBRSxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFdkMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDeEIsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDekIsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRVYsT0FBTyxHQUFHLEVBQUU7WUFDUixJQUFJLFNBQVM7Z0JBQUUsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F2YXRpLy4vc3JjL2RlYm91bmNlZC50cz81ZWM4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWxPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IGNyZWF0ZVNpZ25hbCB9IGZyb20gJy4vY3JlYXRlU2lnbmFsJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IGVmZmVjdCB9IGZyb20gJy4vZWZmZWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgZGVib3VuY2VkIHNpZ25hbCB0aGF0IHVwZGF0ZXMgaXRzIHZhbHVlIGFmdGVyIGEgc3BlY2lmaWVkIGRlbGF5XG4gKiB3aGVuIHRoZSBzb3VyY2Ugc2lnbmFsIGNoYW5nZXMuXG4gKlxuICogQHBhcmFtIHNvdXJjZSBTb3VyY2Ugc2lnbmFsIHRvIHdhdGNoIGZvciBjaGFuZ2VzXG4gKiBAcGFyYW0gZGVsYXkgVGltZSBpbiBtaWxsaXNlY29uZHMgdG8gd2FpdCBiZWZvcmUgdXBkYXRpbmcgb3V0cHV0XG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25hbCBzaWduYWwgY29uZmlndXJhdGlvblxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBCYXNpYyBkZWJvdW5jaW5nIG9mIHJhcGlkIHVwZGF0ZXNcbiAqIGNvbnN0IGlucHV0ID0gbmV3IFNpZ25hbChcIlwiKTtcbiAqIGNvbnN0IGRlYm91bmNlZElucHV0ID0gZGVib3VuY2VkKGlucHV0LCAzMDApO1xuICpcbiAqIGlucHV0LnZhbHVlID0gXCJoXCI7ICAgIC8vIHQ9MG1zXG4gKiBpbnB1dC52YWx1ZSA9IFwiaGVcIjsgICAvLyB0PTEwMG1zXG4gKiBpbnB1dC52YWx1ZSA9IFwiaGVsXCI7ICAvLyB0PTIwMG1zXG4gKiBpbnB1dC52YWx1ZSA9IFwiaGVsbFwiOyAvLyB0PTI1MG1zXG4gKlxuICogLy8gZGVib3VuY2VkSW5wdXQudmFsdWUgd2lsbCBiZSBcImhlbGxcIiBhdCB0PTU1MG1zXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFNlYXJjaCBpbnB1dCB3aXRoIGRlYm91bmNpbmdcbiAqIGNvbnN0IHNlYXJjaFF1ZXJ5ID0gbmV3IFNpZ25hbChcIlwiKTtcbiAqIGNvbnN0IGRlYm91bmNlZFNlYXJjaCA9IGRlYm91bmNlZChzZWFyY2hRdWVyeSwgNTAwKTtcbiAqXG4gKiBlZmZlY3QoKCkgPT4ge1xuICogICAvLyBBUEkgY2FsbCBvbmx5IGhhcHBlbnMgNTAwbXMgYWZ0ZXIgbGFzdCBrZXlzdHJva2VcbiAqICAgZmV0Y2hTZWFyY2hSZXN1bHRzKGRlYm91bmNlZFNlYXJjaC52YWx1ZSk7XG4gKiB9KTtcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gRm9ybSB2YWxpZGF0aW9uIHdpdGggZGVib3VuY2luZ1xuICogY29uc3QgZm9ybURhdGEgPSBuZXcgU2lnbmFsKHsgdXNlcm5hbWU6IFwiXCIsIGVtYWlsOiBcIlwiIH0pO1xuICogY29uc3QgZGVib3VuY2VkRm9ybSA9IGRlYm91bmNlZChmb3JtRGF0YSwgNDAwLCB7XG4gKiAgIGVxdWFsczogKGEsIGIpID0+IGEudXNlcm5hbWUgPT09IGIudXNlcm5hbWUgJiYgYS5lbWFpbCA9PT0gYi5lbWFpbFxuICogfSk7XG4gKlxuICogZWZmZWN0KCgpID0+IHtcbiAqICAgLy8gVmFsaWRhdGlvbiBydW5zIDQwMG1zIGFmdGVyIHVzZXIgc3RvcHMgdHlwaW5nXG4gKiAgIHZhbGlkYXRlRm9ybShkZWJvdW5jZWRGb3JtLnZhbHVlKTtcbiAqIH0pO1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVib3VuY2VkPFQ+KFxuICAgIHNvdXJjZTogU2lnbmFsPFQ+LFxuICAgIGRlbGF5OiBudW1iZXIsXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VD4sXG4pOiBTaWduYWw8VD4ge1xuICAgIGNvbnN0IG91dHB1dCA9IGNyZWF0ZVNpZ25hbChzb3VyY2UudmFsdWUsIG9wdGlvbnMpO1xuICAgIGxldCB0aW1lb3V0SWQ6IE5vZGVKUy5UaW1lb3V0IHwgdW5kZWZpbmVkO1xuXG4gICAgZWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBzb3VyY2UudmFsdWU7XG4gICAgICAgIGlmICh0aW1lb3V0SWQpIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuXG4gICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgb3V0cHV0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgIH0sIGRlbGF5KTtcblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRpbWVvdXRJZCkgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/debounced.ts\n");

/***/ }),

/***/ "./src/debug.ts":
/*!**********************!*\
  !*** ./src/debug.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debug: () => (/* binding */ debug)\n/* harmony export */ });\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Debug utility to track signal updates\n */\nfunction debug(signal, name) {\n    (0,_effect__WEBPACK_IMPORTED_MODULE_0__.effect)(() => {\n        console.log(`[Signal Debug] ${name}:`, signal.value);\n    }, `debug-${name}`);\n    return signal;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVidWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUc4QjtBQUVsQzs7R0FFRztBQUNJLFNBQVMsS0FBSyxDQUFJLE1BQWlCLEVBQUUsSUFBWTtJQUNwRCwrQ0FBTSxDQUFDLEdBQUcsRUFBRTtRQUNSLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLElBQUksR0FBRyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6RCxDQUFDLEVBQUUsU0FBUyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3BCLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy9kZWJ1Zy50cz82YjMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBlZmZlY3QgfSBmcm9tICcuL2VmZmVjdCc7XG5cbi8qKlxuICogRGVidWcgdXRpbGl0eSB0byB0cmFjayBzaWduYWwgdXBkYXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZGVidWc8VD4oc2lnbmFsOiBTaWduYWw8VD4sIG5hbWU6IHN0cmluZyk6IFNpZ25hbDxUPiB7XG4gICAgZWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc29sZS5sb2coYFtTaWduYWwgRGVidWddICR7bmFtZX06YCwgc2lnbmFsLnZhbHVlKTtcbiAgICB9LCBgZGVidWctJHtuYW1lfWApO1xuICAgIHJldHVybiBzaWduYWw7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/debug.ts\n");

/***/ }),

/***/ "./src/effect.ts":
/*!***********************!*\
  !*** ./src/effect.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EffectImpl: () => (/* binding */ EffectImpl),\n/* harmony export */   effect: () => (/* binding */ effect)\n/* harmony export */ });\n/* harmony import */ var _computation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computation */ \"./src/computation.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Implementation of reactive effects that automatically track and respond to signal changes.\n * Effects are used to perform side effects in response to reactive updates.\n *\n * @example\n * // Basic effect usage\n * const count = new Signal(0);\n * const dispose = effect(() => {\n *   console.log(`Count changed to: ${count.value}`);\n * });\n * count.value = 1; // Logs: \"Count changed to: 1\"\n * dispose(); // Cleanup effect\n *\n * @example\n * // Effect with cleanup\n * const visible = new Signal(true);\n * const dispose = effect(() => {\n *   if (visible.value) {\n *     const element = document.createElement('div');\n *     document.body.appendChild(element);\n *     // Return cleanup function\n *     return () => {\n *       document.body.removeChild(element);\n *     };\n *   }\n * });\n *\n * @example\n * // Named effect for debugging\n * const timer = new Signal(0);\n * const dispose = effect(() => {\n *   console.log(`Timer: ${timer.value}`);\n * }, 'timerLogger');\n *\n * @example\n * // Effect with multiple dependencies\n * const firstName = new Signal('John');\n * const lastName = new Signal('Doe');\n * const dispose = effect(() => {\n *   console.log(`Name changed to: ${firstName.value} ${lastName.value}`);\n * });\n *\n * @example\n * // Effect with error handling\n * const data = new Signal<string | Error>(null);\n * const dispose = effect(() => {\n *   try {\n *     if (data.value instanceof Error) {\n *       console.error('Error:', data.value);\n *     } else {\n *       console.log('Data:', data.value);\n *     }\n *   } catch (error) {\n *     console.error('Effect error:', error);\n *   }\n * });\n */\nclass EffectImpl {\n    /**\n     * Creates a new effect instance\n     *\n     * @param fn - The effect function that may return a cleanup function\n     * @param name - Optional name for debugging purposes\n     */\n    constructor(fn, name) {\n        /**\n         * Flag indicating whether the effect has been disposed\n         */\n        this.disposed = false;\n        this.computation = new class extends _computation__WEBPACK_IMPORTED_MODULE_0__.Computation {\n            // @ts-ignore\n            constructor(effect, fn) {\n                super(name);\n                this.effect = effect;\n                this.fn = fn;\n            }\n            /**\n             * Recomputes the effect when dependencies change\n             * Handles proper context management and error boundaries\n             */\n            recompute() {\n                if (this.disposed)\n                    return;\n                const context = _signalContext__WEBPACK_IMPORTED_MODULE_1__.SignalContext.getInstance();\n                context.pushComputation(this);\n                try {\n                    context.pushComputation(this);\n                    context.registerEffect(this.effect);\n                    this.effect.runEffect();\n                }\n                finally {\n                    context.unregisterEffect(this.effect);\n                    context.popComputation();\n                    this.dirty = false;\n                }\n            }\n        }(this, fn);\n        // Initial computation\n        this.computation.recompute();\n    }\n    /**\n     * Disposes of the effect, running cleanup and preventing further executions\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        if (this.cleanup) {\n            try {\n                this.cleanup();\n            }\n            catch (error) {\n                console.error('Error in effect cleanup:', error);\n            }\n        }\n        this.computation.dispose();\n    }\n    /**\n     * Executes the effect function and manages cleanup\n     * Handles error boundaries for both effect and cleanup execution\n     */\n    runEffect() {\n        if (this.disposed)\n            return;\n        // Run cleanup from previous execution\n        if (this.cleanup) {\n            try {\n                this.cleanup();\n            }\n            catch (error) {\n                console.error('Error in effect cleanup:', error);\n            }\n        }\n        try {\n            // @ts-ignore - We know this exists from the constructor\n            this.cleanup = this.computation['fn']();\n        }\n        catch (error) {\n            console.error('Error in effect:', error);\n            throw error;\n        }\n    }\n}\n/**\n * Creates a new effect that automatically tracks and responds to signal changes\n *\n * @param fn - Effect function that may return a cleanup function\n * @param name - Optional name for debugging purposes\n * @returns A disposable object to cleanup the effect\n *\n * @example\n * // DOM manipulation effect\n * const isVisible = new Signal(true);\n * const dispose = effect(() => {\n *   const element = document.querySelector('.target');\n *   element.style.display = isVisible.value ? 'block' : 'none';\n * });\n *\n * @example\n * // Effect with async operations\n * const userId = new Signal<number | null>(null);\n * const dispose = effect(() => {\n *   const id = userId.value;\n *   if (id !== null) {\n *     let cancelled = false;\n *     fetchUserData(id).then(data => {\n *       if (!cancelled) {\n *         // Handle data\n *       }\n *     });\n *     return () => {\n *       cancelled = true;\n *     };\n *   }\n * });\n */\nfunction effect(fn, name) {\n    return new EffectImpl(fn, name);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/effect.ts\n");

/***/ }),

/***/ "./src/errors.ts":
/*!***********************!*\
  !*** ./src/errors.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CircularDependencyError: () => (/* binding */ CircularDependencyError),\n/* harmony export */   SignalDisposedError: () => (/* binding */ SignalDisposedError)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Disposed signal operations\n */\nclass SignalDisposedError extends Error {\n    constructor(operation) {\n        super(`Cannot ${operation} a disposed signal`);\n        this.name = 'SignalDisposedError';\n    }\n}\n/**\n * Circular dependency detection\n */\nclass CircularDependencyError extends Error {\n    constructor(signalName) {\n        super(`Circular dependency detected${signalName ? ` in signal \"${signalName}\"` : ''}`);\n        this.name = 'CircularDependencyError';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXJyb3JzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHSjs7R0FFRztBQUNJLE1BQU0sbUJBQW9CLFNBQVEsS0FBSztJQUMxQyxZQUFZLFNBQWlCO1FBQ3pCLEtBQUssQ0FBQyxVQUFVLFNBQVMsb0JBQW9CLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsSUFBSSxHQUFHLHFCQUFxQixDQUFDO0lBQ3RDLENBQUM7Q0FDSjtBQUVEOztHQUVHO0FBQ0ksTUFBTSx1QkFBd0IsU0FBUSxLQUFLO0lBQzlDLFlBQVksVUFBbUI7UUFDM0IsS0FBSyxDQUFDLCtCQUErQixVQUFVLENBQUMsQ0FBQyxDQUFDLGVBQWUsVUFBVSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDdkYsSUFBSSxDQUFDLElBQUksR0FBRyx5QkFBeUIsQ0FBQztJQUMxQyxDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy9lcnJvcnMudHM/ODkxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuXG4vKipcbiAqIERpc3Bvc2VkIHNpZ25hbCBvcGVyYXRpb25zXG4gKi9cbmV4cG9ydCBjbGFzcyBTaWduYWxEaXNwb3NlZEVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG9wZXJhdGlvbjogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKGBDYW5ub3QgJHtvcGVyYXRpb259IGEgZGlzcG9zZWQgc2lnbmFsYCk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdTaWduYWxEaXNwb3NlZEVycm9yJztcbiAgICB9XG59XG5cbi8qKlxuICogQ2lyY3VsYXIgZGVwZW5kZW5jeSBkZXRlY3Rpb25cbiAqL1xuZXhwb3J0IGNsYXNzIENpcmN1bGFyRGVwZW5kZW5jeUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKHNpZ25hbE5hbWU/OiBzdHJpbmcpIHtcbiAgICAgICAgc3VwZXIoYENpcmN1bGFyIGRlcGVuZGVuY3kgZGV0ZWN0ZWQke3NpZ25hbE5hbWUgPyBgIGluIHNpZ25hbCBcIiR7c2lnbmFsTmFtZX1cImAgOiAnJ31gKTtcbiAgICAgICAgdGhpcy5uYW1lID0gJ0NpcmN1bGFyRGVwZW5kZW5jeUVycm9yJztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/errors.ts\n");

/***/ }),

/***/ "./src/filtered.ts":
/*!*************************!*\
  !*** ./src/filtered.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filtered: () => (/* binding */ filtered)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a filtered signal that only updates when the predicate returns true.\n * The output signal follows the source signal's values but only changes when\n * the new value satisfies the given predicate.\n *\n * @param source The input signal to filter\n * @param predicate Function that determines if a value should pass through\n * @param options Optional configuration for the output signal\n * @returns A new signal that only updates when predicate returns true\n *\n * @example\n * const numbers = new Signal(0);\n * const evenNumbers = filtered(numbers, n => n % 2 === 0);\n * numbers.value = 1; // evenNumbers remains 0\n * numbers.value = 2; // evenNumbers updates to 2\n */\nfunction filtered(source, predicate, options) {\n    const output = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(source.value, options);\n    (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n        const value = source.value;\n        if (predicate(value)) {\n            output.value = value;\n        }\n    });\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZmlsdGVyZWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHMEM7QUFFWjtBQUVsQzs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSSxTQUFTLFFBQVEsQ0FDcEIsTUFBaUIsRUFDakIsU0FBZ0MsRUFDaEMsT0FBMEI7SUFFMUIsTUFBTSxNQUFNLEdBQUcsMkRBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRW5ELCtDQUFNLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ25CLE1BQU0sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy9maWx0ZXJlZC50cz85ZDBkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWxPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IGNyZWF0ZVNpZ25hbCB9IGZyb20gJy4vY3JlYXRlU2lnbmFsJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IGVmZmVjdCB9IGZyb20gJy4vZWZmZWN0JztcblxuLyoqXG4gKiBDcmVhdGVzIGEgZmlsdGVyZWQgc2lnbmFsIHRoYXQgb25seSB1cGRhdGVzIHdoZW4gdGhlIHByZWRpY2F0ZSByZXR1cm5zIHRydWUuXG4gKiBUaGUgb3V0cHV0IHNpZ25hbCBmb2xsb3dzIHRoZSBzb3VyY2Ugc2lnbmFsJ3MgdmFsdWVzIGJ1dCBvbmx5IGNoYW5nZXMgd2hlblxuICogdGhlIG5ldyB2YWx1ZSBzYXRpc2ZpZXMgdGhlIGdpdmVuIHByZWRpY2F0ZS5cbiAqXG4gKiBAcGFyYW0gc291cmNlIFRoZSBpbnB1dCBzaWduYWwgdG8gZmlsdGVyXG4gKiBAcGFyYW0gcHJlZGljYXRlIEZ1bmN0aW9uIHRoYXQgZGV0ZXJtaW5lcyBpZiBhIHZhbHVlIHNob3VsZCBwYXNzIHRocm91Z2hcbiAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSBvdXRwdXQgc2lnbmFsXG4gKiBAcmV0dXJucyBBIG5ldyBzaWduYWwgdGhhdCBvbmx5IHVwZGF0ZXMgd2hlbiBwcmVkaWNhdGUgcmV0dXJucyB0cnVlXG4gKlxuICogQGV4YW1wbGVcbiAqIGNvbnN0IG51bWJlcnMgPSBuZXcgU2lnbmFsKDApO1xuICogY29uc3QgZXZlbk51bWJlcnMgPSBmaWx0ZXJlZChudW1iZXJzLCBuID0+IG4gJSAyID09PSAwKTtcbiAqIG51bWJlcnMudmFsdWUgPSAxOyAvLyBldmVuTnVtYmVycyByZW1haW5zIDBcbiAqIG51bWJlcnMudmFsdWUgPSAyOyAvLyBldmVuTnVtYmVycyB1cGRhdGVzIHRvIDJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZpbHRlcmVkPFQ+KFxuICAgIHNvdXJjZTogU2lnbmFsPFQ+LFxuICAgIHByZWRpY2F0ZTogKHZhbHVlOiBUKSA9PiBib29sZWFuLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFQ+LFxuKTogU2lnbmFsPFQ+IHtcbiAgICBjb25zdCBvdXRwdXQgPSBjcmVhdGVTaWduYWwoc291cmNlLnZhbHVlLCBvcHRpb25zKTtcblxuICAgIGVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gc291cmNlLnZhbHVlO1xuICAgICAgICBpZiAocHJlZGljYXRlKHZhbHVlKSkge1xuICAgICAgICAgICAgb3V0cHV0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9KTtcblxuICAgIHJldHVybiBvdXRwdXQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/filtered.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncSignal: () => (/* reexport safe */ _asyncSignal__WEBPACK_IMPORTED_MODULE_22__.AsyncSignal),\n/* harmony export */   CircularDependencyError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_20__.CircularDependencyError),\n/* harmony export */   Computation: () => (/* reexport safe */ _computation__WEBPACK_IMPORTED_MODULE_5__.Computation),\n/* harmony export */   ComputedSignal: () => (/* reexport safe */ _computedSignal__WEBPACK_IMPORTED_MODULE_6__.ComputedSignal),\n/* harmony export */   EffectImpl: () => (/* reexport safe */ _effect__WEBPACK_IMPORTED_MODULE_18__.EffectImpl),\n/* harmony export */   LocalStorageProvider: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.LocalStorageProvider),\n/* harmony export */   MemoryStorageProvider: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.MemoryStorageProvider),\n/* harmony export */   QueueSignal: () => (/* reexport safe */ _queue__WEBPACK_IMPORTED_MODULE_23__.QueueSignal),\n/* harmony export */   SessionStorageProvider: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.SessionStorageProvider),\n/* harmony export */   Signal: () => (/* reexport safe */ _signal__WEBPACK_IMPORTED_MODULE_2__.Signal),\n/* harmony export */   SignalContext: () => (/* reexport safe */ _signalContext__WEBPACK_IMPORTED_MODULE_19__.SignalContext),\n/* harmony export */   SignalDisposedError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_20__.SignalDisposedError),\n/* harmony export */   SignalMonitor: () => (/* reexport safe */ _signalMonitor__WEBPACK_IMPORTED_MODULE_3__.SignalMonitor),\n/* harmony export */   UpdateQueue: () => (/* reexport safe */ _updateQueue__WEBPACK_IMPORTED_MODULE_16__.UpdateQueue),\n/* harmony export */   asyncSignal: () => (/* reexport safe */ _asyncSignal__WEBPACK_IMPORTED_MODULE_22__.asyncSignal),\n/* harmony export */   batch: () => (/* reexport safe */ _batch__WEBPACK_IMPORTED_MODULE_0__.batch),\n/* harmony export */   combine: () => (/* reexport safe */ _combine__WEBPACK_IMPORTED_MODULE_1__.combine),\n/* harmony export */   computed: () => (/* reexport safe */ _computed__WEBPACK_IMPORTED_MODULE_8__.computed),\n/* harmony export */   createQueueSignal: () => (/* reexport safe */ _queue__WEBPACK_IMPORTED_MODULE_23__.createQueueSignal),\n/* harmony export */   createSignal: () => (/* reexport safe */ _createSignal__WEBPACK_IMPORTED_MODULE_7__.createSignal),\n/* harmony export */   debounced: () => (/* reexport safe */ _debounced__WEBPACK_IMPORTED_MODULE_10__.debounced),\n/* harmony export */   debug: () => (/* reexport safe */ _debug__WEBPACK_IMPORTED_MODULE_12__.debug),\n/* harmony export */   defaultEquals: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.defaultEquals),\n/* harmony export */   effect: () => (/* reexport safe */ _effect__WEBPACK_IMPORTED_MODULE_18__.effect),\n/* harmony export */   filtered: () => (/* reexport safe */ _filtered__WEBPACK_IMPORTED_MODULE_11__.filtered),\n/* harmony export */   getSignalDepth: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.getSignalDepth),\n/* harmony export */   hasCircularDependency: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.hasCircularDependency),\n/* harmony export */   isSignal: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.isSignal),\n/* harmony export */   map: () => (/* reexport safe */ _map__WEBPACK_IMPORTED_MODULE_9__.map),\n/* harmony export */   peek: () => (/* reexport safe */ _peek__WEBPACK_IMPORTED_MODULE_14__.peek),\n/* harmony export */   persisted: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.persisted),\n/* harmony export */   resetSignalSystem: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.resetSignalSystem),\n/* harmony export */   serializeSignal: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.serializeSignal),\n/* harmony export */   threshold: () => (/* reexport safe */ _threshold__WEBPACK_IMPORTED_MODULE_13__.threshold),\n/* harmony export */   throttled: () => (/* reexport safe */ _throttled__WEBPACK_IMPORTED_MODULE_17__.throttled),\n/* harmony export */   validated: () => (/* reexport safe */ _validated__WEBPACK_IMPORTED_MODULE_4__.validated),\n/* harmony export */   withHistory: () => (/* reexport safe */ _withHistory__WEBPACK_IMPORTED_MODULE_15__.withHistory)\n/* harmony export */ });\n/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ \"./src/batch.ts\");\n/* harmony import */ var _combine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./combine */ \"./src/combine.ts\");\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _signalMonitor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signalMonitor */ \"./src/signalMonitor.ts\");\n/* harmony import */ var _validated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validated */ \"./src/validated.ts\");\n/* harmony import */ var _computation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./computation */ \"./src/computation.ts\");\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./map */ \"./src/map.ts\");\n/* harmony import */ var _debounced__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./debounced */ \"./src/debounced.ts\");\n/* harmony import */ var _filtered__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./filtered */ \"./src/filtered.ts\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./debug */ \"./src/debug.ts\");\n/* harmony import */ var _threshold__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./threshold */ \"./src/threshold.ts\");\n/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./peek */ \"./src/peek.ts\");\n/* harmony import */ var _withHistory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./withHistory */ \"./src/withHistory.ts\");\n/* harmony import */ var _updateQueue__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./updateQueue */ \"./src/updateQueue.ts\");\n/* harmony import */ var _throttled__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./throttled */ \"./src/throttled.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/* harmony import */ var _persisted__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./persisted */ \"./src/persisted.ts\");\n/* harmony import */ var _asyncSignal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./asyncSignal */ \"./src/asyncSignal.ts\");\n/* harmony import */ var _queue__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./queue */ \"./src/queue.ts\");\n/* harmony import */ var _utility__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./utility */ \"./src/utility.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUU0QjtBQUNJO0FBQ0Y7QUFDYztBQUNSO0FBQ0k7QUFDTTtBQUNKO0FBQ1I7QUFDVjtBQUNZO0FBQ0Y7QUFDTjtBQUNRO0FBQ1Y7QUFDYztBQUNBO0FBQ0o7QUFDTTtBQUNFO0FBQ3dCO0FBT25EO0FBUVM7QUFDTjtBQUVLO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy9pbmRleC50cz9mZmI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5leHBvcnQgeyBiYXRjaCB9IGZyb20gJy4vYmF0Y2gnO1xuZXhwb3J0IHsgY29tYmluZSB9IGZyb20gJy4vY29tYmluZSc7XG5leHBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5leHBvcnQgeyBTaWduYWxNb25pdG9yIH0gZnJvbSAnLi9zaWduYWxNb25pdG9yJztcbmV4cG9ydCB7IHZhbGlkYXRlZCB9IGZyb20gJy4vdmFsaWRhdGVkJztcbmV4cG9ydCB7IENvbXB1dGF0aW9uIH0gZnJvbSAnLi9jb21wdXRhdGlvbic7XG5leHBvcnQgeyBDb21wdXRlZFNpZ25hbCB9IGZyb20gJy4vY29tcHV0ZWRTaWduYWwnO1xuZXhwb3J0IHsgY3JlYXRlU2lnbmFsIH0gZnJvbSAnLi9jcmVhdGVTaWduYWwnO1xuZXhwb3J0IHsgY29tcHV0ZWQgfSBmcm9tICcuL2NvbXB1dGVkJztcbmV4cG9ydCB7IG1hcCB9IGZyb20gJy4vbWFwJztcbmV4cG9ydCB7IGRlYm91bmNlZCB9IGZyb20gJy4vZGVib3VuY2VkJztcbmV4cG9ydCB7IGZpbHRlcmVkIH0gZnJvbSAnLi9maWx0ZXJlZCc7XG5leHBvcnQgeyBkZWJ1ZyB9IGZyb20gJy4vZGVidWcnO1xuZXhwb3J0IHsgdGhyZXNob2xkIH0gZnJvbSAnLi90aHJlc2hvbGQnO1xuZXhwb3J0IHsgcGVlayB9IGZyb20gJy4vcGVlayc7XG5leHBvcnQgeyB3aXRoSGlzdG9yeSB9IGZyb20gJy4vd2l0aEhpc3RvcnknO1xuZXhwb3J0IHsgVXBkYXRlUXVldWUgfSBmcm9tICcuL3VwZGF0ZVF1ZXVlJztcbmV4cG9ydCB7IHRocm90dGxlZCB9IGZyb20gJy4vdGhyb3R0bGVkJztcbmV4cG9ydCB7IGVmZmVjdCwgRWZmZWN0SW1wbCB9IGZyb20gJy4vZWZmZWN0JztcbmV4cG9ydCB7IFNpZ25hbENvbnRleHQgfSBmcm9tICcuL3NpZ25hbENvbnRleHQnO1xuZXhwb3J0IHsgU2lnbmFsRGlzcG9zZWRFcnJvciwgQ2lyY3VsYXJEZXBlbmRlbmN5RXJyb3IgfSBmcm9tICcuL2Vycm9ycyc7XG5leHBvcnQge1xuICAgIHBlcnNpc3RlZCxcbiAgICBMb2NhbFN0b3JhZ2VQcm92aWRlcixcbiAgICBTZXNzaW9uU3RvcmFnZVByb3ZpZGVyLFxuICAgIE1lbW9yeVN0b3JhZ2VQcm92aWRlcixcblxufSBmcm9tICcuL3BlcnNpc3RlZCc7XG5cbmV4cG9ydCB0eXBlIHtcbiAgICBTdG9yYWdlUHJvdmlkZXIsXG4gICAgUGVyc2lzdGVkU2lnbmFsU3RvcmFnZSxcbiAgICBQZXJzaXN0ZWRTaWduYWxTaWduYWxPcHRpb25zLFxufSBmcm9tICcuL3BlcnNpc3RlZCc7XG5cbmV4cG9ydCAqIGZyb20gJy4vYXN5bmNTaWduYWwnO1xuZXhwb3J0ICogZnJvbSAnLi9xdWV1ZSc7XG5cbmV4cG9ydCAqIGZyb20gJy4vaW50ZXJmYWNlcyc7XG5leHBvcnQgKiBmcm9tICcuL3V0aWxpdHknO1xuXG5cblxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/map.ts":
/*!********************!*\
  !*** ./src/map.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   map: () => (/* binding */ map)\n/* harmony export */ });\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Creates a new Signal that transforms the value of a source Signal using a mapping function.\n * The resulting Signal updates automatically when the source Signal changes.\n *\n * @param source The input Signal to transform\n * @param transform Function that converts source value type T to output type U\n * @param options Optional configuration for the resulting Signal\n * @returns A new Signal containing the transformed value\n *\n *\n * @example\n * // Basic transformation of primitive values\n * const count = new Signal(5);\n * const doubled = map(count, n => n * 2);\n * console.log(doubled.value); // 10\n * count.value = 10;\n * console.log(doubled.value); // 20\n *\n * @example\n * // Transforming arrays\n * const numbers = new Signal([1, 2, 3]);\n * const doubled = map(numbers, nums => nums.map(n => n * 2));\n * console.log(doubled.value); // [2, 4, 6]\n *\n * @example\n * // Transforming objects with custom options\n * const user = new Signal({ name: 'John', age: 30 });\n * const userSummary = map(\n *   user,\n *   u => `${u.name} is ${u.age} years old`,\n *   { name: 'userSummary' }\n * );\n * console.log(userSummary.value); // \"John is 30 years old\"\n */\nfunction map(source, transform, options) {\n    return (0,_computed__WEBPACK_IMPORTED_MODULE_0__.computed)(() => transform(source.value), options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFwLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHa0M7QUFHdEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWlDRztBQUNJLFNBQVMsR0FBRyxDQUNmLE1BQWlCLEVBQ2pCLFNBQTBCLEVBQzFCLE9BQTBCO0lBRTFCLE9BQU8sbURBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzVELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy9tYXAudHM/MjhhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgU2lnbmFsT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBjb21wdXRlZCB9IGZyb20gJy4vY29tcHV0ZWQnO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBuZXcgU2lnbmFsIHRoYXQgdHJhbnNmb3JtcyB0aGUgdmFsdWUgb2YgYSBzb3VyY2UgU2lnbmFsIHVzaW5nIGEgbWFwcGluZyBmdW5jdGlvbi5cbiAqIFRoZSByZXN1bHRpbmcgU2lnbmFsIHVwZGF0ZXMgYXV0b21hdGljYWxseSB3aGVuIHRoZSBzb3VyY2UgU2lnbmFsIGNoYW5nZXMuXG4gKlxuICogQHBhcmFtIHNvdXJjZSBUaGUgaW5wdXQgU2lnbmFsIHRvIHRyYW5zZm9ybVxuICogQHBhcmFtIHRyYW5zZm9ybSBGdW5jdGlvbiB0aGF0IGNvbnZlcnRzIHNvdXJjZSB2YWx1ZSB0eXBlIFQgdG8gb3V0cHV0IHR5cGUgVVxuICogQHBhcmFtIG9wdGlvbnMgT3B0aW9uYWwgY29uZmlndXJhdGlvbiBmb3IgdGhlIHJlc3VsdGluZyBTaWduYWxcbiAqIEByZXR1cm5zIEEgbmV3IFNpZ25hbCBjb250YWluaW5nIHRoZSB0cmFuc2Zvcm1lZCB2YWx1ZVxuICpcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQmFzaWMgdHJhbnNmb3JtYXRpb24gb2YgcHJpbWl0aXZlIHZhbHVlc1xuICogY29uc3QgY291bnQgPSBuZXcgU2lnbmFsKDUpO1xuICogY29uc3QgZG91YmxlZCA9IG1hcChjb3VudCwgbiA9PiBuICogMik7XG4gKiBjb25zb2xlLmxvZyhkb3VibGVkLnZhbHVlKTsgLy8gMTBcbiAqIGNvdW50LnZhbHVlID0gMTA7XG4gKiBjb25zb2xlLmxvZyhkb3VibGVkLnZhbHVlKTsgLy8gMjBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gVHJhbnNmb3JtaW5nIGFycmF5c1xuICogY29uc3QgbnVtYmVycyA9IG5ldyBTaWduYWwoWzEsIDIsIDNdKTtcbiAqIGNvbnN0IGRvdWJsZWQgPSBtYXAobnVtYmVycywgbnVtcyA9PiBudW1zLm1hcChuID0+IG4gKiAyKSk7XG4gKiBjb25zb2xlLmxvZyhkb3VibGVkLnZhbHVlKTsgLy8gWzIsIDQsIDZdXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRyYW5zZm9ybWluZyBvYmplY3RzIHdpdGggY3VzdG9tIG9wdGlvbnNcbiAqIGNvbnN0IHVzZXIgPSBuZXcgU2lnbmFsKHsgbmFtZTogJ0pvaG4nLCBhZ2U6IDMwIH0pO1xuICogY29uc3QgdXNlclN1bW1hcnkgPSBtYXAoXG4gKiAgIHVzZXIsXG4gKiAgIHUgPT4gYCR7dS5uYW1lfSBpcyAke3UuYWdlfSB5ZWFycyBvbGRgLFxuICogICB7IG5hbWU6ICd1c2VyU3VtbWFyeScgfVxuICogKTtcbiAqIGNvbnNvbGUubG9nKHVzZXJTdW1tYXJ5LnZhbHVlKTsgLy8gXCJKb2huIGlzIDMwIHllYXJzIG9sZFwiXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXA8VCwgVT4oXG4gICAgc291cmNlOiBTaWduYWw8VD4sXG4gICAgdHJhbnNmb3JtOiAodmFsdWU6IFQpID0+IFUsXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VT4sXG4pOiBTaWduYWw8VT4ge1xuICAgIHJldHVybiBjb21wdXRlZCgoKSA9PiB0cmFuc2Zvcm0oc291cmNlLnZhbHVlKSwgb3B0aW9ucyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/map.ts\n");

/***/ }),

/***/ "./src/peek.ts":
/*!*********************!*\
  !*** ./src/peek.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   peek: () => (/* binding */ peek)\n/* harmony export */ });\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Retrieves the current value of a signal without establishing a dependency relationship.\n * This is useful when you want to read a signal's value without having the current computation\n * track it as a dependency, effectively \"peeking\" at the value without subscribing to changes.\n *\n * @template T The type of value held by the signal\n * @param signal The signal whose value you want to peek at\n * @returns The current value of the signal\n *\n * @description\n * The function works by temporarily manipulating the computation stack:\n * 1. Stores the current computation (if any) from the context\n * 2. Pushes undefined as a temporary computation to prevent dependency tracking\n * 3. Reads the signal's value\n * 4. Restores the previous computation state\n *\n * This approach ensures that when we read the signal's value, it won't be tracked\n * as a dependency in any active computation scope.\n *\n * @example\n * const counter = new Signal(0);\n * // Reading value normally would create a dependency\n * const normalRead = counter.value;\n * // Peeking at value doesn't create a dependency\n * const peekedValue = peek(counter);\n *\n * @example\n * // Useful in computed signals when you need a value for calculation\n * // but don't want to track changes to that specific signal\n * const total = computed(() => {\n *   const current = counter.value;  // Creates dependency\n *   const threshold = peek(maxValue);  // Reads value without dependency\n *   return current > threshold ? current : threshold;\n * });\n */\nfunction peek(signal) {\n    const context = _signalContext__WEBPACK_IMPORTED_MODULE_0__.SignalContext.getInstance();\n    const prevComputation = context.getCurrentComputation();\n    // @ts-ignore\n    context.setCurrentComputation(undefined);\n    try {\n        return signal.get_value_bypass_tracking(); // Directly access value to bypass dependency tracking\n    }\n    finally {\n        if (prevComputation) {\n            context.setCurrentComputation(prevComputation);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGVlay50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztJQUtJO0FBRzRDO0FBR2hEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0NHO0FBQ0ksU0FBUyxJQUFJLENBQUksTUFBaUI7SUFDckMsTUFBTSxPQUFPLEdBQUcseURBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM1QyxNQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUN4RCxhQUFhO0lBQ2IsT0FBTyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3pDLElBQUksQ0FBQztRQUNELE9BQU8sTUFBTSxDQUFDLHlCQUF5QixFQUFFLENBQUMsQ0FBQyxzREFBc0Q7SUFDckcsQ0FBQztZQUFTLENBQUM7UUFDUCxJQUFJLGVBQWUsRUFBRSxDQUFDO1lBQ2xCLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNuRCxDQUFDO0lBQ0wsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy9wZWVrLnRzP2M3YjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IFNpZ25hbENvbnRleHQgfSBmcm9tICcuL3NpZ25hbENvbnRleHQnO1xuXG5cbi8qKlxuICogUmV0cmlldmVzIHRoZSBjdXJyZW50IHZhbHVlIG9mIGEgc2lnbmFsIHdpdGhvdXQgZXN0YWJsaXNoaW5nIGEgZGVwZW5kZW5jeSByZWxhdGlvbnNoaXAuXG4gKiBUaGlzIGlzIHVzZWZ1bCB3aGVuIHlvdSB3YW50IHRvIHJlYWQgYSBzaWduYWwncyB2YWx1ZSB3aXRob3V0IGhhdmluZyB0aGUgY3VycmVudCBjb21wdXRhdGlvblxuICogdHJhY2sgaXQgYXMgYSBkZXBlbmRlbmN5LCBlZmZlY3RpdmVseSBcInBlZWtpbmdcIiBhdCB0aGUgdmFsdWUgd2l0aG91dCBzdWJzY3JpYmluZyB0byBjaGFuZ2VzLlxuICpcbiAqIEB0ZW1wbGF0ZSBUIFRoZSB0eXBlIG9mIHZhbHVlIGhlbGQgYnkgdGhlIHNpZ25hbFxuICogQHBhcmFtIHNpZ25hbCBUaGUgc2lnbmFsIHdob3NlIHZhbHVlIHlvdSB3YW50IHRvIHBlZWsgYXRcbiAqIEByZXR1cm5zIFRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSBzaWduYWxcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoZSBmdW5jdGlvbiB3b3JrcyBieSB0ZW1wb3JhcmlseSBtYW5pcHVsYXRpbmcgdGhlIGNvbXB1dGF0aW9uIHN0YWNrOlxuICogMS4gU3RvcmVzIHRoZSBjdXJyZW50IGNvbXB1dGF0aW9uIChpZiBhbnkpIGZyb20gdGhlIGNvbnRleHRcbiAqIDIuIFB1c2hlcyB1bmRlZmluZWQgYXMgYSB0ZW1wb3JhcnkgY29tcHV0YXRpb24gdG8gcHJldmVudCBkZXBlbmRlbmN5IHRyYWNraW5nXG4gKiAzLiBSZWFkcyB0aGUgc2lnbmFsJ3MgdmFsdWVcbiAqIDQuIFJlc3RvcmVzIHRoZSBwcmV2aW91cyBjb21wdXRhdGlvbiBzdGF0ZVxuICpcbiAqIFRoaXMgYXBwcm9hY2ggZW5zdXJlcyB0aGF0IHdoZW4gd2UgcmVhZCB0aGUgc2lnbmFsJ3MgdmFsdWUsIGl0IHdvbid0IGJlIHRyYWNrZWRcbiAqIGFzIGEgZGVwZW5kZW5jeSBpbiBhbnkgYWN0aXZlIGNvbXB1dGF0aW9uIHNjb3BlLlxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBjb3VudGVyID0gbmV3IFNpZ25hbCgwKTtcbiAqIC8vIFJlYWRpbmcgdmFsdWUgbm9ybWFsbHkgd291bGQgY3JlYXRlIGEgZGVwZW5kZW5jeVxuICogY29uc3Qgbm9ybWFsUmVhZCA9IGNvdW50ZXIudmFsdWU7XG4gKiAvLyBQZWVraW5nIGF0IHZhbHVlIGRvZXNuJ3QgY3JlYXRlIGEgZGVwZW5kZW5jeVxuICogY29uc3QgcGVla2VkVmFsdWUgPSBwZWVrKGNvdW50ZXIpO1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBVc2VmdWwgaW4gY29tcHV0ZWQgc2lnbmFscyB3aGVuIHlvdSBuZWVkIGEgdmFsdWUgZm9yIGNhbGN1bGF0aW9uXG4gKiAvLyBidXQgZG9uJ3Qgd2FudCB0byB0cmFjayBjaGFuZ2VzIHRvIHRoYXQgc3BlY2lmaWMgc2lnbmFsXG4gKiBjb25zdCB0b3RhbCA9IGNvbXB1dGVkKCgpID0+IHtcbiAqICAgY29uc3QgY3VycmVudCA9IGNvdW50ZXIudmFsdWU7ICAvLyBDcmVhdGVzIGRlcGVuZGVuY3lcbiAqICAgY29uc3QgdGhyZXNob2xkID0gcGVlayhtYXhWYWx1ZSk7ICAvLyBSZWFkcyB2YWx1ZSB3aXRob3V0IGRlcGVuZGVuY3lcbiAqICAgcmV0dXJuIGN1cnJlbnQgPiB0aHJlc2hvbGQgPyBjdXJyZW50IDogdGhyZXNob2xkO1xuICogfSk7XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwZWVrPFQ+KHNpZ25hbDogU2lnbmFsPFQ+KTogVCB7XG4gICAgY29uc3QgY29udGV4dCA9IFNpZ25hbENvbnRleHQuZ2V0SW5zdGFuY2UoKTtcbiAgICBjb25zdCBwcmV2Q29tcHV0YXRpb24gPSBjb250ZXh0LmdldEN1cnJlbnRDb21wdXRhdGlvbigpO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBjb250ZXh0LnNldEN1cnJlbnRDb21wdXRhdGlvbih1bmRlZmluZWQpO1xuICAgIHRyeSB7XG4gICAgICAgIHJldHVybiBzaWduYWwuZ2V0X3ZhbHVlX2J5cGFzc190cmFja2luZygpOyAvLyBEaXJlY3RseSBhY2Nlc3MgdmFsdWUgdG8gYnlwYXNzIGRlcGVuZGVuY3kgdHJhY2tpbmdcbiAgICB9IGZpbmFsbHkge1xuICAgICAgICBpZiAocHJldkNvbXB1dGF0aW9uKSB7XG4gICAgICAgICAgICBjb250ZXh0LnNldEN1cnJlbnRDb21wdXRhdGlvbihwcmV2Q29tcHV0YXRpb24pO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/peek.ts\n");

/***/ }),

/***/ "./src/persisted.ts":
/*!**************************!*\
  !*** ./src/persisted.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalStorageProvider: () => (/* binding */ LocalStorageProvider),\n/* harmony export */   MemoryStorageProvider: () => (/* binding */ MemoryStorageProvider),\n/* harmony export */   Persisted: () => (/* binding */ Persisted),\n/* harmony export */   SessionStorageProvider: () => (/* binding */ SessionStorageProvider),\n/* harmony export */   persisted: () => (/* binding */ persisted)\n/* harmony export */ });\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer\n *\n * Defines storage provider interfaces and implementations for persisting signal values\n * across browser sessions and environments.\n */\n\n\n\n/**\n * Uses browser localStorage for persistent storage across sessions\n * Falls back gracefully when not in browser environment\n */\nclass LocalStorageProvider {\n    /**\n     * Gets item from localStorage\n     * @param key - Key to retrieve\n     * @returns Stored value or null if not found/not in browser\n     */\n    getItem(key) {\n        if (typeof window === 'undefined')\n            return null;\n        const presented = window.localStorage.getItem(key);\n        if (presented) {\n            return JSON.parse(presented);\n        }\n        return null;\n    }\n    /**\n     * Sets item in localStorage\n     * @param key - Key to store under\n     * @param value - Value to store\n     */\n    setItem(key, value) {\n        if (typeof window === 'undefined')\n            return;\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }\n    /**\n     * Removes item from localStorage\n     * @param key - Key to remove\n     */\n    removeItem(key) {\n        if (typeof window === 'undefined')\n            return;\n        window.localStorage.removeItem(key);\n    }\n}\n/**\n * Uses browser sessionStorage for temporary storage during session\n * Falls back gracefully when not in browser environment\n */\nclass SessionStorageProvider {\n    /**\n     * Gets item from sessionStorage\n     * @param key - Key to retrieve\n     * @returns Stored value or null if not found/not in browser\n     */\n    getItem(key) {\n        if (typeof window === 'undefined')\n            return null;\n        const presented = window.sessionStorage.getItem(key);\n        if (presented) {\n            return JSON.parse(presented);\n        }\n        return null;\n    }\n    /**\n     * Sets item in sessionStorage\n     * @param key - Key to store under\n     * @param value - Value to store\n     */\n    setItem(key, value) {\n        if (typeof window === 'undefined')\n            return;\n        window.sessionStorage.setItem(key, JSON.stringify(value));\n    }\n    /**\n     * Removes item from sessionStorage\n     * @param key - Key to remove\n     */\n    removeItem(key) {\n        if (typeof window === 'undefined')\n            return;\n        window.sessionStorage.removeItem(key);\n    }\n}\n/**\n * In-memory storage provider for testing and SSR environments\n * Data persists only during runtime\n */\nclass MemoryStorageProvider {\n    constructor() {\n        /** Map to store key-value pairs in memory */\n        this.store = new Map();\n    }\n    /**\n     * Gets item from memory store\n     * @param key - Key to retrieve\n     * @returns Stored value or null if not found\n     */\n    getItem(key) {\n        var _a;\n        return (_a = this.store.get(key)) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * Sets item in memory store\n     * @param key - Key to store under\n     * @param value - Value to store\n     */\n    setItem(key, value) {\n        this.store.set(key, value);\n    }\n    /**\n     * Removes item from memory store\n     * @param key - Key to remove\n     */\n    removeItem(key) {\n        this.store.delete(key);\n    }\n}\nclass Persisted extends _signal__WEBPACK_IMPORTED_MODULE_0__.Signal {\n    constructor(key, initialValue, storage, options) {\n        const storedValue = storage.getItem(key);\n        super(storedValue !== null && storedValue !== void 0 ? storedValue : initialValue, options);\n        this.disposed = false;\n        this.key = key;\n        this.storage = storage;\n        (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n            if (this.disposed)\n                return;\n            this.storage.setItem(this.key, this.value);\n        }, `persist-${key}`);\n    }\n    get value() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot read from disposed signal');\n        }\n        return super.value;\n    }\n    set value(newValue) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot write to disposed signal');\n        }\n        super.value = newValue;\n    }\n    update(fn) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot update disposed signal');\n        }\n        this.value = fn(this.value);\n    }\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        this.storage.removeItem(this.key);\n        super.dispose();\n    }\n    reload() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot reload disposed signal');\n        }\n        const value = this.storage.getItem(this.key);\n        if (value !== null) {\n            this.value = value;\n        }\n    }\n    clear() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot clear disposed signal');\n        }\n        this.storage.removeItem(this.key);\n    }\n    isDisposed() {\n        return this.disposed;\n    }\n}\nfunction persisted(key, initialValue, storage, options) {\n    return new Persisted(key, initialValue, storage, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/persisted.ts\n");

/***/ }),

/***/ "./src/queue.ts":
/*!**********************!*\
  !*** ./src/queue.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueueSignal: () => (/* binding */ QueueSignal),\n/* harmony export */   createQueueSignal: () => (/* binding */ createQueueSignal)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n\n/**\n * A priority queue implementation using signals for reactive state management.\n * Items are ordered by priority (highest first) and timestamp (FIFO for same priority).\n *\n * @example\n * // Basic queue operations\n * const taskQueue = createQueueSignal<string>();\n *\n * // Add tasks with different priorities\n * taskQueue.enqueue(\"Low priority task\", 1);\n * taskQueue.enqueue(\"High priority task\", 3);\n * taskQueue.enqueue(\"Medium priority task\", 2);\n *\n * console.log(taskQueue.peek()); // \"High priority task\"\n * console.log(taskQueue.dequeue()); // \"High priority task\"\n * console.log(taskQueue.size()); // 2\n *\n * @example\n * // Task processing with priorities\n * const processingQueue = createQueueSignal<{task: string, urgency: string}>();\n *\n * // Emergency task (priority 3)\n * const emergencyId = processingQueue.enqueue(\n *   {task: \"Server down\", urgency: \"high\"},\n *   3\n * );\n *\n * // Regular tasks (priority 1)\n * processingQueue.enqueue({task: \"Update docs\", urgency: \"low\"}, 1);\n * processingQueue.enqueue({task: \"Code review\", urgency: \"low\"}, 1);\n *\n * // Process emergency first\n * while (!processingQueue.isEmpty()) {\n *   const task = processingQueue.dequeue();\n *   console.log(`Processing: ${task.task}`);\n * }\n *\n * @example\n * // Reactive queue monitoring\n * const downloadQueue = createQueueSignal<string>();\n * const queueSignal = downloadQueue.getQueue();\n *\n * effect(() => {\n *   const items = queueSignal.value;\n *   console.log(`Queue size changed: ${items.length} items`);\n * });\n *\n * downloadQueue.enqueue(\"file1.txt\");\n * downloadQueue.enqueue(\"file2.txt\");\n */\nclass QueueSignal {\n    constructor() {\n        this.queue = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)([]);\n    }\n    /**\n     * Adds an item to the queue with optional priority.\n     * @param data The item to add\n     * @param priority Priority level (higher = more priority)\n     * @returns Unique ID for the queued item\n     */\n    enqueue(data, priority = 0) {\n        const id = Math.random().toString(36).substring(2);\n        const item = {\n            id,\n            data,\n            priority,\n            timestamp: Date.now(),\n        };\n        this.queue.value = [...this.queue.value, item].sort((a, b) => b.priority - a.priority || a.timestamp - b.timestamp);\n        return id;\n    }\n    /**\n     * Removes and returns the highest priority item.\n     * @returns The data of the dequeued item, or undefined if queue is empty\n     */\n    dequeue() {\n        if (this.isEmpty())\n            return undefined;\n        const [item, ...rest] = this.queue.value;\n        this.queue.value = rest;\n        return item === null || item === void 0 ? void 0 : item.data;\n    }\n    /**\n     * Views the next item without removing it.\n     * @returns The data of the next item, or undefined if queue is empty\n     */\n    peek() {\n        var _a;\n        return (_a = this.queue.value[0]) === null || _a === void 0 ? void 0 : _a.data;\n    }\n    /**\n     * Removes a specific item by its ID.\n     * @param id ID of the item to remove\n     * @returns true if an item was removed, false otherwise\n     */\n    remove(id) {\n        const initialLength = this.queue.value.length;\n        this.queue.value = this.queue.value.filter(item => item.id !== id);\n        return initialLength !== this.queue.value.length;\n    }\n    /**\n     * Removes all items from the queue.\n     */\n    clear() {\n        this.queue.value = [];\n    }\n    /**\n     * Checks if the queue is empty.\n     */\n    isEmpty() {\n        return this.queue.value.length === 0;\n    }\n    /**\n     * Returns the number of items in the queue.\n     */\n    size() {\n        return this.queue.value.length;\n    }\n    /**\n     * Gets the underlying signal for reactive queue monitoring.\n     * @returns Signal containing the queue items\n     */\n    getQueue() {\n        return this.queue;\n    }\n}\n/**\n * Creates a new queue signal instance.\n * @example\n * // Basic queue operations\n * const taskQueue = createQueueSignal<string>();\n *\n * // Add tasks with different priorities\n * taskQueue.enqueue(\"Low priority task\", 1);\n * taskQueue.enqueue(\"High priority task\", 3);\n * taskQueue.enqueue(\"Medium priority task\", 2);\n *\n * console.log(taskQueue.peek()); // \"High priority task\"\n * console.log(taskQueue.dequeue()); // \"High priority task\"\n * console.log(taskQueue.size()); // 2\n *\n * @example\n * // Task processing with priorities\n * const processingQueue = createQueueSignal<{task: string, urgency: string}>();\n *\n * // Emergency task (priority 3)\n * const emergencyId = processingQueue.enqueue(\n *   {task: \"Server down\", urgency: \"high\"},\n *   3\n * );\n *\n * // Regular tasks (priority 1)\n * processingQueue.enqueue({task: \"Update docs\", urgency: \"low\"}, 1);\n * processingQueue.enqueue({task: \"Code review\", urgency: \"low\"}, 1);\n *\n * // Process emergency first\n * while (!processingQueue.isEmpty()) {\n *   const task = processingQueue.dequeue();\n *   console.log(`Processing: ${task.task}`);\n * }\n *\n * @example\n * // Reactive queue monitoring\n * const downloadQueue = createQueueSignal<string>();\n * const queueSignal = downloadQueue.getQueue();\n *\n * effect(() => {\n *   const items = queueSignal.value;\n *   console.log(`Queue size changed: ${items.length} items`);\n * });\n *\n * @returns A new QueueSignal instance\n */\nfunction createQueueSignal() {\n    return new QueueSignal();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/queue.ts\n");

/***/ }),

/***/ "./src/signal.ts":
/*!***********************!*\
  !*** ./src/signal.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Signal: () => (/* binding */ Signal)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n/**\n * Signal class implements a reactive primitive that holds a value and notifies dependents of changes.\n * It follows the WritableSignal interface contract for value updates and subscriptions.\n *\n * @template T The type of value held by the signal\n\n *\n * @example\n * // Basic usage with primitive values\n * const counter = new Signal(0);\n * console.log(counter.value); // 0\n * counter.value = 1;\n * console.log(counter.value); // 1\n *\n * @example\n * // Using update function\n * const counter = new Signal(0);\n * counter.update(current => current + 1); // Increments by 1\n *\n * @example\n * // Subscribing to changes\n * const name = new Signal('John');\n * const unsubscribe = name.subscribe(newValue => {\n *   console.log(`Name changed to: ${newValue}`);\n * });\n * name.value = 'Jane'; // Logs: \"Name changed to: Jane\"\n * unsubscribe(); // Removes the subscription\n *\n * @example\n * // Using custom equality function for objects\n * const user = new Signal(\n *   { id: 1, name: 'John' },\n *   {\n *     equals: (prev, next) => prev.id === next.id && prev.name === next.name\n *   }\n * );\n *\n * @example\n * // Proper cleanup\n * const signal = new Signal('test');\n * // ... use signal\n * signal.dispose(); // Clean up when done\n *\n * @example\n * // Using with arrays\n * const list = new Signal<number[]>([]);\n * list.update(current => [...current, 1]); // Adds element\n * list.update(current => current.filter(x => x > 0)); // Filters elements\n *\n * @example\n * // Error handling\n * try {\n *   const signal = new Signal('test');\n *   signal.dispose();\n *   signal.value; // Throws SignalDisposedError\n * } catch (error) {\n *   if (error instanceof SignalDisposedError) {\n *     console.log('Signal was disposed');\n *   }\n * }\n *\n * @example\n * // Using with complex objects and custom name\n * interface Todo {\n *   id: number;\n *   text: string;\n *   completed: boolean;\n * }\n *\n * const todos = new Signal<Todo[]>(\n *   [],\n *   {\n *     name: 'todosList',\n *     equals: (prev, next) =>\n *       prev.length === next.length &&\n *       prev.every((todo, index) =>\n *         todo.id === next[index].id &&\n *         todo.text === next[index].text &&\n *         todo.completed === next[index].completed\n *       )\n *   }\n * );\n *\n * @example\n * // Batching updates using SignalContext\n * const firstName = new Signal('John');\n * const lastName = new Signal('Doe');\n *\n */\nclass Signal {\n    /**\n     * Creates a new Signal instance\n     *\n     * @param initialValue - The initial value of the signal\n     * @param options - Configuration options for the signal\n     */\n    constructor(initialValue, options = {}) {\n        var _a;\n        /**\n         * Set of computations that depend on this signal's value\n         */\n        this.dependents = new Set();\n        /**\n         * Flag indicating whether this signal has been disposed\n         */\n        this.disposed = false;\n        this._value = initialValue;\n        // Use provided equals function or default to Object.is\n        this.equals = (_a = options.equals) !== null && _a !== void 0 ? _a : Object.is;\n        this.name = options.name || 'anonymous';\n    }\n    /**\n     * Gets the current value of the signal.\n     * Tracks dependencies and throws if the signal is disposed.\n     */\n    get value() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('read from');\n        }\n        this.trackDependency();\n        return this._value;\n    }\n    /**\n     * Sets a new value for the signal.\n     * Only updates and notifies dependents if the new value is different from the current value.\n     *\n     * @param newValue - The new value to set\n     */\n    set value(newValue) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('write to');\n        }\n        if (!this.equals(this._value, newValue)) {\n            this._value = newValue;\n            this.notifyDependents();\n        }\n    }\n    /**\n     * Gets the current value of the signal without tracking dependencies.\n     */\n    get_value_bypass_tracking() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('read from');\n        }\n        return this._value;\n    }\n    /**\n     * Updates the signal's value using a transformation function\n     *\n     * @param fn - Function that takes the current value and returns a new value\n     */\n    update(fn) {\n        this.value = fn(this._value);\n    }\n    /**\n     * Creates a subscription to the signal's value changes\n     *\n     * @param callback - Function to call when the value changes\n     * @returns Function to unsubscribe from changes\n     */\n    subscribe(callback) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('subscribe to');\n        }\n        const computed = new _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal(() => {\n            return callback(this.value);\n        });\n        return () => computed.dispose();\n    }\n    /**\n     * Adds a computation as dependent on this signal\n     *\n     * @param computation - The computation to add as a dependent\n     */\n    addDependent(computation) {\n        this.dependents.add(computation);\n    }\n    /**\n     * Removes a computation from this signal's dependents\n     *\n     * @param computation - The computation to remove\n     */\n    removeDependent(computation) {\n        this.dependents.delete(computation);\n    }\n    /**\n     * Notifies all dependent computations of a value change\n     * Handles batching through SignalContext if active\n     */\n    notifyDependents() {\n        const context = _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext.getInstance();\n        if (context.isBatching()) {\n            context.addToBatchQueue(this);\n            return;\n        }\n        for (const dependent of this.dependents) {\n            dependent.markDirty();\n        }\n    }\n    /**\n     * Disposes of the signal and its dependent computations\n     * Prevents memory leaks by cleaning up all references\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        // Create a copy of dependents before iterating to avoid modification during iteration\n        const dependentsToDispose = new Set(this.dependents);\n        // First, clear own dependents\n        this.dependents.clear();\n        // Then dispose all dependent computations\n        for (const dependent of dependentsToDispose) {\n            // @ts-ignore\n            if (dependent instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal || dependent['signal'] instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal) {\n                // If the dependent is or belongs to a ComputedSignal, dispose it\n                // @ts-ignore\n                const signal = dependent instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal ? dependent : dependent['signal'];\n                signal.dispose();\n            }\n            else {\n                // For other types of computations, just dispose the computation\n                dependent.dispose();\n            }\n        }\n    }\n    /**\n     * Returns whether the signal has been disposed\n     */\n    isDisposed() {\n        return this.disposed;\n    }\n    /**\n     * Returns the name of the signal for debugging purposes\n     */\n    getDependents() {\n        return this.dependents || new Set();\n    }\n    /**\n     * Returns the name of the signal for debugging purposes\n     */\n    hasDependents() {\n        return this.dependents.size > 0;\n    }\n    toString() {\n        return `Signal(${this.name})`;\n    }\n    /**\n     * Tracks the current computation as dependent on this signal\n     */\n    trackDependency() {\n        const computation = _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext.getInstance().getCurrentComputation();\n        if (computation) {\n            computation.addDependency(this);\n            this.addDependent(computation);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/signal.ts\n");

/***/ }),

/***/ "./src/signalContext.ts":
/*!******************************!*\
  !*** ./src/signalContext.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignalContext: () => (/* binding */ SignalContext)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Manages the global state and context of signal computations\n */\nclass SignalContext {\n    constructor() {\n        this.computationStack = [];\n        this.batchDepth = 0;\n        this.batchQueue = new Set();\n        this.activeEffects = new Set();\n    }\n    static getInstance() {\n        if (!this.instance) {\n            this.instance = new SignalContext();\n        }\n        return this.instance;\n    }\n    getCurrentComputation() {\n        return this.computationStack[this.computationStack.length - 1];\n    }\n    pushComputation(computation) {\n        // Check for circular dependencies\n        if (computation && this.computationStack.includes(computation)) {\n            // throw new CircularDependencyError();\n            return;\n        }\n        // we can push undefined to the stack\n        this.computationStack.push(computation);\n    }\n    popComputation() {\n        this.computationStack.pop();\n    }\n    isBatching() {\n        return this.batchDepth > 0;\n    }\n    beginBatch() {\n        this.batchDepth++;\n    }\n    endBatch() {\n        this.batchDepth--;\n        if (this.batchDepth === 0) {\n            this.flushBatchQueue();\n        }\n    }\n    addToBatchQueue(signal) {\n        this.batchQueue.add(signal);\n    }\n    flushBatchQueue() {\n        // Create a new Set for unique signals\n        const uniqueSignals = new Set(this.batchQueue);\n        this.batchQueue.clear();\n        // Get all dependent computations\n        const computations = new Set();\n        for (const signal of uniqueSignals) {\n            for (const dependent of signal.getDependents()) {\n                computations.add(dependent);\n            }\n        }\n        // Mark all computations as dirty\n        for (const computation of computations) {\n            computation.markDirty();\n        }\n    }\n    setCurrentComputation(computation) {\n        this.computationStack[this.computationStack.length - 1] = computation;\n    }\n    registerEffect(effect) {\n        this.activeEffects.add(effect);\n    }\n    unregisterEffect(effect) {\n        this.activeEffects.delete(effect);\n    }\n    // Add this method to check if we're currently in an effect\n    isInEffect() {\n        return this.activeEffects.size > 0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2lnbmFsQ29udGV4dC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0lBS0k7QUFNSjs7R0FFRztBQUNJLE1BQU0sYUFBYTtJQUExQjtRQUVZLHFCQUFnQixHQUFrQixFQUFFLENBQUM7UUFDckMsZUFBVSxHQUFHLENBQUMsQ0FBQztRQUNmLGVBQVUsR0FBRyxJQUFJLEdBQUcsRUFBZSxDQUFDO1FBQ3BDLGtCQUFhLEdBQUcsSUFBSSxHQUFHLEVBQWMsQ0FBQztJQWtGbEQsQ0FBQztJQWhGRyxNQUFNLENBQUMsV0FBVztRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLGFBQWEsRUFBRSxDQUFDO1FBQ3hDLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVELHFCQUFxQjtRQUNqQixPQUFPLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQ25FLENBQUM7SUFFRCxlQUFlLENBQUMsV0FBd0I7UUFDcEMsa0NBQWtDO1FBQ2xDLElBQUksV0FBVyxJQUFJLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUUsQ0FBQztZQUM3RCx1Q0FBdUM7WUFDdkMsT0FBTztRQUNYLENBQUM7UUFDRCxxQ0FBcUM7UUFDckMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsY0FBYztRQUNWLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsVUFBVTtRQUNOLE9BQU8sSUFBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLENBQUM7SUFDL0IsQ0FBQztJQUVELFVBQVU7UUFDTixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDdEIsQ0FBQztJQUVELFFBQVE7UUFDSixJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7UUFDbEIsSUFBSSxJQUFJLENBQUMsVUFBVSxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxlQUFlLEVBQUUsQ0FBQztRQUMzQixDQUFDO0lBQ0wsQ0FBQztJQUVELGVBQWUsQ0FBQyxNQUFtQjtRQUMvQixJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNoQyxDQUFDO0lBRUQsZUFBZTtRQUNYLHNDQUFzQztRQUN0QyxNQUFNLGFBQWEsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDL0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUV4QixpQ0FBaUM7UUFDakMsTUFBTSxZQUFZLEdBQUcsSUFBSSxHQUFHLEVBQWUsQ0FBQztRQUU1QyxLQUFLLE1BQU0sTUFBTSxJQUFJLGFBQWEsRUFBRSxDQUFDO1lBQ2pDLEtBQUssTUFBTSxTQUFTLElBQUksTUFBTSxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUM7Z0JBQzdDLFlBQVksQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDaEMsQ0FBQztRQUNMLENBQUM7UUFDRCxpQ0FBaUM7UUFDakMsS0FBSyxNQUFNLFdBQVcsSUFBSSxZQUFZLEVBQUUsQ0FBQztZQUNyQyxXQUFXLENBQUMsU0FBUyxFQUFFLENBQUM7UUFDNUIsQ0FBQztJQUNMLENBQUM7SUFFRCxxQkFBcUIsQ0FBQyxXQUF3QjtRQUMxQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxXQUFXLENBQUM7SUFDMUUsQ0FBQztJQUdELGNBQWMsQ0FBQyxNQUFrQjtRQUM3QixJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsZ0JBQWdCLENBQUMsTUFBa0I7UUFDL0IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELDJEQUEyRDtJQUMzRCxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7SUFDdkMsQ0FBQztDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZhdGkvLi9zcmMvc2lnbmFsQ29udGV4dC50cz83ZWQxIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBDb21wdXRhdGlvbiB9IGZyb20gJy4vY29tcHV0YXRpb24nO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuaW1wb3J0IHsgRWZmZWN0SW1wbCB9IGZyb20gJy4vZWZmZWN0JztcblxuLyoqXG4gKiBNYW5hZ2VzIHRoZSBnbG9iYWwgc3RhdGUgYW5kIGNvbnRleHQgb2Ygc2lnbmFsIGNvbXB1dGF0aW9uc1xuICovXG5leHBvcnQgY2xhc3MgU2lnbmFsQ29udGV4dCB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFNpZ25hbENvbnRleHQ7XG4gICAgcHJpdmF0ZSBjb21wdXRhdGlvblN0YWNrOiBDb21wdXRhdGlvbltdID0gW107XG4gICAgcHJpdmF0ZSBiYXRjaERlcHRoID0gMDtcbiAgICBwcml2YXRlIGJhdGNoUXVldWUgPSBuZXcgU2V0PFNpZ25hbDxhbnk+PigpO1xuICAgIHByaXZhdGUgYWN0aXZlRWZmZWN0cyA9IG5ldyBTZXQ8RWZmZWN0SW1wbD4oKTtcblxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBTaWduYWxDb250ZXh0IHtcbiAgICAgICAgaWYgKCF0aGlzLmluc3RhbmNlKSB7XG4gICAgICAgICAgICB0aGlzLmluc3RhbmNlID0gbmV3IFNpZ25hbENvbnRleHQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZTtcbiAgICB9XG5cbiAgICBnZXRDdXJyZW50Q29tcHV0YXRpb24oKTogQ29tcHV0YXRpb24gfCB1bmRlZmluZWQge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21wdXRhdGlvblN0YWNrW3RoaXMuY29tcHV0YXRpb25TdGFjay5sZW5ndGggLSAxXTtcbiAgICB9XG5cbiAgICBwdXNoQ29tcHV0YXRpb24oY29tcHV0YXRpb246IENvbXB1dGF0aW9uKTogdm9pZCB7XG4gICAgICAgIC8vIENoZWNrIGZvciBjaXJjdWxhciBkZXBlbmRlbmNpZXNcbiAgICAgICAgaWYgKGNvbXB1dGF0aW9uICYmIHRoaXMuY29tcHV0YXRpb25TdGFjay5pbmNsdWRlcyhjb21wdXRhdGlvbikpIHtcbiAgICAgICAgICAgIC8vIHRocm93IG5ldyBDaXJjdWxhckRlcGVuZGVuY3lFcnJvcigpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIC8vIHdlIGNhbiBwdXNoIHVuZGVmaW5lZCB0byB0aGUgc3RhY2tcbiAgICAgICAgdGhpcy5jb21wdXRhdGlvblN0YWNrLnB1c2goY29tcHV0YXRpb24pO1xuICAgIH1cblxuICAgIHBvcENvbXB1dGF0aW9uKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmNvbXB1dGF0aW9uU3RhY2sucG9wKCk7XG4gICAgfVxuXG4gICAgaXNCYXRjaGluZygpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYmF0Y2hEZXB0aCA+IDA7XG4gICAgfVxuXG4gICAgYmVnaW5CYXRjaCgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5iYXRjaERlcHRoKys7XG4gICAgfVxuXG4gICAgZW5kQmF0Y2goKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYmF0Y2hEZXB0aC0tO1xuICAgICAgICBpZiAodGhpcy5iYXRjaERlcHRoID09PSAwKSB7XG4gICAgICAgICAgICB0aGlzLmZsdXNoQmF0Y2hRdWV1ZSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYWRkVG9CYXRjaFF1ZXVlKHNpZ25hbDogU2lnbmFsPGFueT4pOiB2b2lkIHtcbiAgICAgICAgdGhpcy5iYXRjaFF1ZXVlLmFkZChzaWduYWwpO1xuICAgIH1cblxuICAgIGZsdXNoQmF0Y2hRdWV1ZSgpOiB2b2lkIHtcbiAgICAgICAgLy8gQ3JlYXRlIGEgbmV3IFNldCBmb3IgdW5pcXVlIHNpZ25hbHNcbiAgICAgICAgY29uc3QgdW5pcXVlU2lnbmFscyA9IG5ldyBTZXQodGhpcy5iYXRjaFF1ZXVlKTtcbiAgICAgICAgdGhpcy5iYXRjaFF1ZXVlLmNsZWFyKCk7XG5cbiAgICAgICAgLy8gR2V0IGFsbCBkZXBlbmRlbnQgY29tcHV0YXRpb25zXG4gICAgICAgIGNvbnN0IGNvbXB1dGF0aW9ucyA9IG5ldyBTZXQ8Q29tcHV0YXRpb24+KCk7XG5cbiAgICAgICAgZm9yIChjb25zdCBzaWduYWwgb2YgdW5pcXVlU2lnbmFscykge1xuICAgICAgICAgICAgZm9yIChjb25zdCBkZXBlbmRlbnQgb2Ygc2lnbmFsLmdldERlcGVuZGVudHMoKSkge1xuICAgICAgICAgICAgICAgIGNvbXB1dGF0aW9ucy5hZGQoZGVwZW5kZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICAvLyBNYXJrIGFsbCBjb21wdXRhdGlvbnMgYXMgZGlydHlcbiAgICAgICAgZm9yIChjb25zdCBjb21wdXRhdGlvbiBvZiBjb21wdXRhdGlvbnMpIHtcbiAgICAgICAgICAgIGNvbXB1dGF0aW9uLm1hcmtEaXJ0eSgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgc2V0Q3VycmVudENvbXB1dGF0aW9uKGNvbXB1dGF0aW9uOiBDb21wdXRhdGlvbik6IHZvaWQge1xuICAgICAgICB0aGlzLmNvbXB1dGF0aW9uU3RhY2tbdGhpcy5jb21wdXRhdGlvblN0YWNrLmxlbmd0aCAtIDFdID0gY29tcHV0YXRpb247XG4gICAgfVxuXG5cbiAgICByZWdpc3RlckVmZmVjdChlZmZlY3Q6IEVmZmVjdEltcGwpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5hY3RpdmVFZmZlY3RzLmFkZChlZmZlY3QpO1xuICAgIH1cblxuICAgIHVucmVnaXN0ZXJFZmZlY3QoZWZmZWN0OiBFZmZlY3RJbXBsKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWN0aXZlRWZmZWN0cy5kZWxldGUoZWZmZWN0KTtcbiAgICB9XG5cbiAgICAvLyBBZGQgdGhpcyBtZXRob2QgdG8gY2hlY2sgaWYgd2UncmUgY3VycmVudGx5IGluIGFuIGVmZmVjdFxuICAgIGlzSW5FZmZlY3QoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmFjdGl2ZUVmZmVjdHMuc2l6ZSA+IDA7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/signalContext.ts\n");

/***/ }),

/***/ "./src/signalMonitor.ts":
/*!******************************!*\
  !*** ./src/signalMonitor.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignalMonitor: () => (/* binding */ SignalMonitor)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Monitor signal performance metrics\n */\nclass SignalMonitor {\n    static trackUpdate(duration) {\n        this.metrics.updates++;\n        this.updateTimes.push(duration);\n        if (this.updateTimes.length > 100) {\n            this.updateTimes.shift();\n        }\n        this.metrics.averageUpdateTime =\n            this.updateTimes.reduce((a, b) => a + b, 0) / this.updateTimes.length;\n    }\n    static trackComputation(depth) {\n        this.metrics.computations++;\n        this.metrics.maxChainDepth = Math.max(this.metrics.maxChainDepth, depth);\n    }\n    static getMetrics() {\n        return { ...this.metrics };\n    }\n    static reset() {\n        this.metrics = {\n            updates: 0,\n            computations: 0,\n            maxChainDepth: 0,\n            averageUpdateTime: 0,\n        };\n        this.updateTimes = [];\n    }\n}\nSignalMonitor.metrics = {\n    updates: 0,\n    computations: 0,\n    maxChainDepth: 0,\n    averageUpdateTime: 0,\n};\nSignalMonitor.updateTimes = [];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2lnbmFsTW9uaXRvci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0lBS0k7QUFLSjs7R0FFRztBQUNJLE1BQU0sYUFBYTtJQVV0QixNQUFNLENBQUMsV0FBVyxDQUFDLFFBQWdCO1FBQy9CLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFaEMsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUNoQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzdCLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLGlCQUFpQjtZQUMxQixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUM7SUFDOUUsQ0FBQztJQUVELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFhO1FBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVU7UUFDYixPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFLO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRztZQUNYLE9BQU8sRUFBRSxDQUFDO1lBQ1YsWUFBWSxFQUFFLENBQUM7WUFDZixhQUFhLEVBQUUsQ0FBQztZQUNoQixpQkFBaUIsRUFBRSxDQUFDO1NBQ3ZCLENBQUM7UUFDRixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztJQUMxQixDQUFDOztBQXRDYyxxQkFBTyxHQUFrQjtJQUNwQyxPQUFPLEVBQUUsQ0FBQztJQUNWLFlBQVksRUFBRSxDQUFDO0lBQ2YsYUFBYSxFQUFFLENBQUM7SUFDaEIsaUJBQWlCLEVBQUUsQ0FBQztDQUN2QixDQUFDO0FBRWEseUJBQVcsR0FBYSxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy9zaWduYWxNb25pdG9yLnRzPzY2ZDgiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cblxuaW1wb3J0IHsgU2lnbmFsTWV0cmljcyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5cbi8qKlxuICogTW9uaXRvciBzaWduYWwgcGVyZm9ybWFuY2UgbWV0cmljc1xuICovXG5leHBvcnQgY2xhc3MgU2lnbmFsTW9uaXRvciB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgbWV0cmljczogU2lnbmFsTWV0cmljcyA9IHtcbiAgICAgICAgdXBkYXRlczogMCxcbiAgICAgICAgY29tcHV0YXRpb25zOiAwLFxuICAgICAgICBtYXhDaGFpbkRlcHRoOiAwLFxuICAgICAgICBhdmVyYWdlVXBkYXRlVGltZTogMCxcbiAgICB9O1xuXG4gICAgcHJpdmF0ZSBzdGF0aWMgdXBkYXRlVGltZXM6IG51bWJlcltdID0gW107XG5cbiAgICBzdGF0aWMgdHJhY2tVcGRhdGUoZHVyYXRpb246IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLm1ldHJpY3MudXBkYXRlcysrO1xuICAgICAgICB0aGlzLnVwZGF0ZVRpbWVzLnB1c2goZHVyYXRpb24pO1xuXG4gICAgICAgIGlmICh0aGlzLnVwZGF0ZVRpbWVzLmxlbmd0aCA+IDEwMCkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVUaW1lcy5zaGlmdCgpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5tZXRyaWNzLmF2ZXJhZ2VVcGRhdGVUaW1lID1cbiAgICAgICAgICAgIHRoaXMudXBkYXRlVGltZXMucmVkdWNlKChhLCBiKSA9PiBhICsgYiwgMCkgLyB0aGlzLnVwZGF0ZVRpbWVzLmxlbmd0aDtcbiAgICB9XG5cbiAgICBzdGF0aWMgdHJhY2tDb21wdXRhdGlvbihkZXB0aDogbnVtYmVyKTogdm9pZCB7XG4gICAgICAgIHRoaXMubWV0cmljcy5jb21wdXRhdGlvbnMrKztcbiAgICAgICAgdGhpcy5tZXRyaWNzLm1heENoYWluRGVwdGggPSBNYXRoLm1heCh0aGlzLm1ldHJpY3MubWF4Q2hhaW5EZXB0aCwgZGVwdGgpO1xuICAgIH1cblxuICAgIHN0YXRpYyBnZXRNZXRyaWNzKCk6IFNpZ25hbE1ldHJpY3Mge1xuICAgICAgICByZXR1cm4geyAuLi50aGlzLm1ldHJpY3MgfTtcbiAgICB9XG5cbiAgICBzdGF0aWMgcmVzZXQoKTogdm9pZCB7XG4gICAgICAgIHRoaXMubWV0cmljcyA9IHtcbiAgICAgICAgICAgIHVwZGF0ZXM6IDAsXG4gICAgICAgICAgICBjb21wdXRhdGlvbnM6IDAsXG4gICAgICAgICAgICBtYXhDaGFpbkRlcHRoOiAwLFxuICAgICAgICAgICAgYXZlcmFnZVVwZGF0ZVRpbWU6IDAsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMudXBkYXRlVGltZXMgPSBbXTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/signalMonitor.ts\n");

/***/ }),

/***/ "./src/threshold.ts":
/*!**************************!*\
  !*** ./src/threshold.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   threshold: () => (/* binding */ threshold)\n/* harmony export */ });\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./peek */ \"./src/peek.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a Signal that only updates when the source value changes by at least the specified delta.\n * Useful for filtering out small fluctuations in numeric values.\n *\n * @param source - Input Signal containing numeric values\n * @param delta - Minimum change required to trigger an update\n * @param options - Optional Signal configuration\n * @returns A new Signal that updates only on significant changes\n *\n * @example\n * const rawTemp = new Signal(20.0);\n * const filteredTemp = threshold(rawTemp, 0.5);\n * rawTemp.value = 20.2; // filteredTemp stays at 20.0\n * rawTemp.value = 20.6; // filteredTemp updates to 20.6\n */\nfunction threshold(source, delta, options) {\n    return (0,_computed__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n        const value = source.value;\n        const prevValue = (0,_peek__WEBPACK_IMPORTED_MODULE_1__.peek)(source);\n        return Math.abs(value - prevValue) >= delta ? value : prevValue;\n    }, {\n        ...options,\n        equals: (a, b) => Math.abs(a - b) < delta,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGhyZXNob2xkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBR2tDO0FBRVI7QUFFOUI7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSSxTQUFTLFNBQVMsQ0FDckIsTUFBaUIsRUFDakIsS0FBYSxFQUNiLE9BQTBCO0lBRTFCLE9BQU8sbURBQVEsQ0FBQyxHQUFHLEVBQUU7UUFDakIsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixNQUFNLFNBQVMsR0FBRywyQ0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9CLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNwRSxDQUFDLEVBQUU7UUFDQyxHQUFHLE9BQU87UUFDVixNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLO0tBQzVDLENBQUMsQ0FBQztBQUNQLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy90aHJlc2hvbGQudHM/MGRhMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgU2lnbmFsT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBjb21wdXRlZCB9IGZyb20gJy4vY29tcHV0ZWQnO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuaW1wb3J0IHsgcGVlayB9IGZyb20gJy4vcGVlayc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIFNpZ25hbCB0aGF0IG9ubHkgdXBkYXRlcyB3aGVuIHRoZSBzb3VyY2UgdmFsdWUgY2hhbmdlcyBieSBhdCBsZWFzdCB0aGUgc3BlY2lmaWVkIGRlbHRhLlxuICogVXNlZnVsIGZvciBmaWx0ZXJpbmcgb3V0IHNtYWxsIGZsdWN0dWF0aW9ucyBpbiBudW1lcmljIHZhbHVlcy5cbiAqXG4gKiBAcGFyYW0gc291cmNlIC0gSW5wdXQgU2lnbmFsIGNvbnRhaW5pbmcgbnVtZXJpYyB2YWx1ZXNcbiAqIEBwYXJhbSBkZWx0YSAtIE1pbmltdW0gY2hhbmdlIHJlcXVpcmVkIHRvIHRyaWdnZXIgYW4gdXBkYXRlXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbmFsIFNpZ25hbCBjb25maWd1cmF0aW9uXG4gKiBAcmV0dXJucyBBIG5ldyBTaWduYWwgdGhhdCB1cGRhdGVzIG9ubHkgb24gc2lnbmlmaWNhbnQgY2hhbmdlc1xuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCByYXdUZW1wID0gbmV3IFNpZ25hbCgyMC4wKTtcbiAqIGNvbnN0IGZpbHRlcmVkVGVtcCA9IHRocmVzaG9sZChyYXdUZW1wLCAwLjUpO1xuICogcmF3VGVtcC52YWx1ZSA9IDIwLjI7IC8vIGZpbHRlcmVkVGVtcCBzdGF5cyBhdCAyMC4wXG4gKiByYXdUZW1wLnZhbHVlID0gMjAuNjsgLy8gZmlsdGVyZWRUZW1wIHVwZGF0ZXMgdG8gMjAuNlxuICovXG5leHBvcnQgZnVuY3Rpb24gdGhyZXNob2xkPFQgZXh0ZW5kcyBudW1iZXI+KFxuICAgIHNvdXJjZTogU2lnbmFsPFQ+LFxuICAgIGRlbHRhOiBudW1iZXIsXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VD4sXG4pOiBTaWduYWw8VD4ge1xuICAgIHJldHVybiBjb21wdXRlZCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gc291cmNlLnZhbHVlO1xuICAgICAgICBjb25zdCBwcmV2VmFsdWUgPSBwZWVrKHNvdXJjZSk7XG4gICAgICAgIHJldHVybiBNYXRoLmFicyh2YWx1ZSAtIHByZXZWYWx1ZSkgPj0gZGVsdGEgPyB2YWx1ZSA6IHByZXZWYWx1ZTtcbiAgICB9LCB7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIGVxdWFsczogKGEsIGIpID0+IE1hdGguYWJzKGEgLSBiKSA8IGRlbHRhLFxuICAgIH0pO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/threshold.ts\n");

/***/ }),

/***/ "./src/throttled.ts":
/*!**************************!*\
  !*** ./src/throttled.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   throttled: () => (/* binding */ throttled)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Create a signal that throttles updates\n */\nfunction throttled(source, interval, options) {\n    const output = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(source.value, options);\n    let lastUpdate = 0;\n    let timeoutId;\n    (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n        const value = source.value;\n        const now = Date.now();\n        if (now - lastUpdate >= interval) {\n            output.value = value;\n            lastUpdate = now;\n        }\n        else if (!timeoutId) {\n            timeoutId = setTimeout(() => {\n                output.value = value;\n                lastUpdate = Date.now();\n                timeoutId = undefined;\n            }, interval - (now - lastUpdate));\n        }\n        return () => {\n            if (timeoutId)\n                clearTimeout(timeoutId);\n        };\n    });\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGhyb3R0bGVkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzBDO0FBQ1o7QUFHbEM7O0dBRUc7QUFDSSxTQUFTLFNBQVMsQ0FDckIsTUFBaUIsRUFDakIsUUFBZ0IsRUFDaEIsT0FBMEI7SUFFMUIsTUFBTSxNQUFNLEdBQUcsMkRBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQztJQUNuQixJQUFJLFNBQXFDLENBQUM7SUFFMUMsK0NBQU0sQ0FBQyxHQUFHLEVBQUU7UUFDUixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzNCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUV2QixJQUFJLEdBQUcsR0FBRyxVQUFVLElBQUksUUFBUSxFQUFFLENBQUM7WUFDL0IsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDckIsVUFBVSxHQUFHLEdBQUcsQ0FBQztRQUNyQixDQUFDO2FBQU0sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ3BCLFNBQVMsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUN4QixNQUFNLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztnQkFDckIsVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDeEIsU0FBUyxHQUFHLFNBQVMsQ0FBQztZQUMxQixDQUFDLEVBQUUsUUFBUSxHQUFHLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDdEMsQ0FBQztRQUVELE9BQU8sR0FBRyxFQUFFO1lBQ1IsSUFBSSxTQUFTO2dCQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMzQyxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy90aHJvdHRsZWQudHM/NzNiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgU2lnbmFsT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBjcmVhdGVTaWduYWwgfSBmcm9tICcuL2NyZWF0ZVNpZ25hbCc7XG5pbXBvcnQgeyBlZmZlY3QgfSBmcm9tICcuL2VmZmVjdCc7XG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5cbi8qKlxuICogQ3JlYXRlIGEgc2lnbmFsIHRoYXQgdGhyb3R0bGVzIHVwZGF0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRocm90dGxlZDxUPihcbiAgICBzb3VyY2U6IFNpZ25hbDxUPixcbiAgICBpbnRlcnZhbDogbnVtYmVyLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFQ+LFxuKTogU2lnbmFsPFQ+IHtcbiAgICBjb25zdCBvdXRwdXQgPSBjcmVhdGVTaWduYWwoc291cmNlLnZhbHVlLCBvcHRpb25zKTtcbiAgICBsZXQgbGFzdFVwZGF0ZSA9IDA7XG4gICAgbGV0IHRpbWVvdXRJZDogTm9kZUpTLlRpbWVvdXQgfCB1bmRlZmluZWQ7XG5cbiAgICBlZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHNvdXJjZS52YWx1ZTtcbiAgICAgICAgY29uc3Qgbm93ID0gRGF0ZS5ub3coKTtcblxuICAgICAgICBpZiAobm93IC0gbGFzdFVwZGF0ZSA+PSBpbnRlcnZhbCkge1xuICAgICAgICAgICAgb3V0cHV0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICBsYXN0VXBkYXRlID0gbm93O1xuICAgICAgICB9IGVsc2UgaWYgKCF0aW1lb3V0SWQpIHtcbiAgICAgICAgICAgIHRpbWVvdXRJZCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgIG91dHB1dC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgICAgIGxhc3RVcGRhdGUgPSBEYXRlLm5vdygpO1xuICAgICAgICAgICAgICAgIHRpbWVvdXRJZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgICAgIH0sIGludGVydmFsIC0gKG5vdyAtIGxhc3RVcGRhdGUpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGltZW91dElkKSBjbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgICAgICAgfTtcbiAgICB9KTtcblxuICAgIHJldHVybiBvdXRwdXQ7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/throttled.ts\n");

/***/ }),

/***/ "./src/updateQueue.ts":
/*!****************************!*\
  !*** ./src/updateQueue.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UpdateQueue: () => (/* binding */ UpdateQueue)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Manages the scheduling and processing of signal updates\n * Uses a topological sort to handle updates in the correct order\n */\nclass UpdateQueue {\n    constructor() {\n        this.queue = new Set();\n        this.processing = false;\n        this.updateDepth = 0;\n        this.maxUpdateDepth = 1000; // Configurable maximum update depth\n    }\n    static getInstance() {\n        if (!this.instance) {\n            this.instance = new UpdateQueue();\n        }\n        return this.instance;\n    }\n    /**\n     * Schedule a computation for update\n     */\n    schedule(computation) {\n        if (this.updateDepth >= this.maxUpdateDepth) {\n            throw new Error('Maximum update depth exceeded - possible circular dependency');\n        }\n        this.queue.add(computation);\n        if (!this.processing) {\n            this.processQueue();\n        }\n    }\n    /**\n     * Process all scheduled updates in dependency order\n     */\n    processQueue() {\n        this.processing = true;\n        this.updateDepth++;\n        try {\n            while (this.queue.size > 0) {\n                const computations = Array.from(this.queue);\n                this.queue.clear();\n                // Sort by dependency depth to ensure correct update order\n                computations.sort((a, b) => a.getDepth() - b.getDepth());\n                for (const computation of computations) {\n                    if (computation.isDirty() && !computation.isDisposed()) {\n                        computation.recompute();\n                    }\n                }\n            }\n        }\n        finally {\n            this.processing = false;\n            this.updateDepth--;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXBkYXRlUXVldWUudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztJQUtJO0FBSUo7OztHQUdHO0FBQ0ksTUFBTSxXQUFXO0lBQXhCO1FBRVksVUFBSyxHQUFHLElBQUksR0FBRyxFQUFlLENBQUM7UUFDL0IsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixnQkFBVyxHQUFHLENBQUMsQ0FBQztRQUNoQixtQkFBYyxHQUFHLElBQUksQ0FBQyxDQUFDLG9DQUFvQztJQWlEdkUsQ0FBQztJQS9DRyxNQUFNLENBQUMsV0FBVztRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1FBQ3RDLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsUUFBUSxDQUFDLFdBQXdCO1FBQzdCLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDMUMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4REFBOEQsQ0FBQyxDQUFDO1FBQ3BGLENBQUM7UUFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ25CLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN4QixDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHO0lBQ0ssWUFBWTtRQUNoQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFbkIsSUFBSSxDQUFDO1lBQ0QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQztnQkFDekIsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBRW5CLDBEQUEwRDtnQkFDMUQsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztnQkFFekQsS0FBSyxNQUFNLFdBQVcsSUFBSSxZQUFZLEVBQUUsQ0FBQztvQkFDckMsSUFBSSxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQzt3QkFDckQsV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDO29CQUM1QixDQUFDO2dCQUNMLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQztnQkFBUyxDQUFDO1lBQ1AsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7WUFDeEIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9BdmF0aS8uL3NyYy91cGRhdGVRdWV1ZS50cz8zOWNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBDb21wdXRhdGlvbiB9IGZyb20gJy4vY29tcHV0YXRpb24nO1xuXG4vKipcbiAqIE1hbmFnZXMgdGhlIHNjaGVkdWxpbmcgYW5kIHByb2Nlc3Npbmcgb2Ygc2lnbmFsIHVwZGF0ZXNcbiAqIFVzZXMgYSB0b3BvbG9naWNhbCBzb3J0IHRvIGhhbmRsZSB1cGRhdGVzIGluIHRoZSBjb3JyZWN0IG9yZGVyXG4gKi9cbmV4cG9ydCBjbGFzcyBVcGRhdGVRdWV1ZSB7XG4gICAgcHJpdmF0ZSBzdGF0aWMgaW5zdGFuY2U6IFVwZGF0ZVF1ZXVlO1xuICAgIHByaXZhdGUgcXVldWUgPSBuZXcgU2V0PENvbXB1dGF0aW9uPigpO1xuICAgIHByaXZhdGUgcHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgIHByaXZhdGUgdXBkYXRlRGVwdGggPSAwO1xuICAgIHByaXZhdGUgbWF4VXBkYXRlRGVwdGggPSAxMDAwOyAvLyBDb25maWd1cmFibGUgbWF4aW11bSB1cGRhdGUgZGVwdGhcblxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBVcGRhdGVRdWV1ZSB7XG4gICAgICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBVcGRhdGVRdWV1ZSgpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLmluc3RhbmNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFNjaGVkdWxlIGEgY29tcHV0YXRpb24gZm9yIHVwZGF0ZVxuICAgICAqL1xuICAgIHNjaGVkdWxlKGNvbXB1dGF0aW9uOiBDb21wdXRhdGlvbik6IHZvaWQge1xuICAgICAgICBpZiAodGhpcy51cGRhdGVEZXB0aCA+PSB0aGlzLm1heFVwZGF0ZURlcHRoKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ01heGltdW0gdXBkYXRlIGRlcHRoIGV4Y2VlZGVkIC0gcG9zc2libGUgY2lyY3VsYXIgZGVwZW5kZW5jeScpO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5xdWV1ZS5hZGQoY29tcHV0YXRpb24pO1xuICAgICAgICBpZiAoIXRoaXMucHJvY2Vzc2luZykge1xuICAgICAgICAgICAgdGhpcy5wcm9jZXNzUXVldWUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFByb2Nlc3MgYWxsIHNjaGVkdWxlZCB1cGRhdGVzIGluIGRlcGVuZGVuY3kgb3JkZXJcbiAgICAgKi9cbiAgICBwcml2YXRlIHByb2Nlc3NRdWV1ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5wcm9jZXNzaW5nID0gdHJ1ZTtcbiAgICAgICAgdGhpcy51cGRhdGVEZXB0aCsrO1xuXG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICB3aGlsZSAodGhpcy5xdWV1ZS5zaXplID4gMCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGNvbXB1dGF0aW9ucyA9IEFycmF5LmZyb20odGhpcy5xdWV1ZSk7XG4gICAgICAgICAgICAgICAgdGhpcy5xdWV1ZS5jbGVhcigpO1xuXG4gICAgICAgICAgICAgICAgLy8gU29ydCBieSBkZXBlbmRlbmN5IGRlcHRoIHRvIGVuc3VyZSBjb3JyZWN0IHVwZGF0ZSBvcmRlclxuICAgICAgICAgICAgICAgIGNvbXB1dGF0aW9ucy5zb3J0KChhLCBiKSA9PiBhLmdldERlcHRoKCkgLSBiLmdldERlcHRoKCkpO1xuXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBjb21wdXRhdGlvbiBvZiBjb21wdXRhdGlvbnMpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGNvbXB1dGF0aW9uLmlzRGlydHkoKSAmJiAhY29tcHV0YXRpb24uaXNEaXNwb3NlZCgpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wdXRhdGlvbi5yZWNvbXB1dGUoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc2luZyA9IGZhbHNlO1xuICAgICAgICAgICAgdGhpcy51cGRhdGVEZXB0aC0tO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/updateQueue.ts\n");

/***/ }),

/***/ "./src/utility.ts":
/*!************************!*\
  !*** ./src/utility.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultEquals: () => (/* binding */ defaultEquals),\n/* harmony export */   getSignalDepth: () => (/* binding */ getSignalDepth),\n/* harmony export */   hasCircularDependency: () => (/* binding */ hasCircularDependency),\n/* harmony export */   isSignal: () => (/* binding */ isSignal),\n/* harmony export */   resetSignalSystem: () => (/* binding */ resetSignalSystem),\n/* harmony export */   serializeSignal: () => (/* binding */ serializeSignal)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _updateQueue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./updateQueue */ \"./src/updateQueue.ts\");\n/* harmony import */ var _signalMonitor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signalMonitor */ \"./src/signalMonitor.ts\");\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n\n/**\n * Default equality function for comparing signal values\n * Uses Object.is for strict equality comparison\n */\nconst defaultEquals = (a, b) => Object.is(a, b);\n/**\n * Custom JSON serializer for signals\n * Useful for debugging and persistence\n */\nconst serializeSignal = (signal) => {\n    return JSON.stringify({\n        value: signal.value,\n        // @ts-ignore - accessing protected property for serialization\n        name: signal['name'],\n        // @ts-ignore - accessing protected property for serialization\n        disposed: signal['disposed'],\n    });\n};\n/**\n * Type guard to check if a value is a Signal\n */\nfunction isSignal(value) {\n    return value instanceof _signal__WEBPACK_IMPORTED_MODULE_0__.Signal;\n}\n/**\n * Get the current computation depth of a signal chain\n */\nfunction getSignalDepth(signal) {\n    if (signal instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal) {\n        return signal.getDepth();\n    }\n    return 0;\n}\n/**\n * Check if a signal is part of a circular dependency chain\n */\nfunction hasCircularDependency(signal) {\n    const visited = new Set();\n    const recursionStack = new Set();\n    function dfs(current) {\n        var _a;\n        if (recursionStack.has(current)) {\n            return true;\n        }\n        if (visited.has(current)) {\n            return false;\n        }\n        visited.add(current);\n        recursionStack.add(current);\n        // @ts-ignore - accessing protected property for cycle detection\n        const dependents = current['dependents'] || new Set();\n        for (const dependent of dependents) {\n            // @ts-ignore - accessing protected property for cycle detection\n            if (((_a = dependent['computation']) === null || _a === void 0 ? void 0 : _a.signal) && dfs(dependent['computation'].signal)) {\n                return true;\n            }\n        }\n        recursionStack.delete(current);\n        return false;\n    }\n    return dfs(signal);\n}\n/**\n * Reset the entire signal system state\n * Useful for testing and debugging\n */\nfunction resetSignalSystem() {\n    // @ts-ignore\n    _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext['instance'] = undefined;\n    // @ts-ignore\n    _updateQueue__WEBPACK_IMPORTED_MODULE_3__.UpdateQueue['instance'] = undefined;\n    _signalMonitor__WEBPACK_IMPORTED_MODULE_4__.SignalMonitor.reset();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzhDO0FBQ047QUFDSTtBQUNkO0FBQ2M7QUFFaEQ7OztHQUdHO0FBQ0ksTUFBTSxhQUFhLEdBQUcsQ0FBSSxDQUFJLEVBQUUsQ0FBSSxFQUFXLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUV6RTs7O0dBR0c7QUFDSSxNQUFNLGVBQWUsR0FBRyxDQUFJLE1BQWlCLEVBQVUsRUFBRTtJQUM1RCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDbEIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO1FBQ25CLDhEQUE4RDtRQUM5RCxJQUFJLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNwQiw4REFBOEQ7UUFDOUQsUUFBUSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUM7S0FDL0IsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDO0FBRUY7O0dBRUc7QUFDSSxTQUFTLFFBQVEsQ0FBSSxLQUFVO0lBQ2xDLE9BQU8sS0FBSyxZQUFZLDJDQUFNLENBQUM7QUFDbkMsQ0FBQztBQUVEOztHQUVHO0FBQ0ksU0FBUyxjQUFjLENBQUMsTUFBbUI7SUFDOUMsSUFBSSxNQUFNLFlBQVksMkRBQWMsRUFBRSxDQUFDO1FBQ25DLE9BQU8sTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFDRCxPQUFPLENBQUMsQ0FBQztBQUNiLENBQUM7QUFFRDs7R0FFRztBQUNJLFNBQVMscUJBQXFCLENBQUMsTUFBbUI7SUFDckQsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLEVBQWUsQ0FBQztJQUN2QyxNQUFNLGNBQWMsR0FBRyxJQUFJLEdBQUcsRUFBZSxDQUFDO0lBRTlDLFNBQVMsR0FBRyxDQUFDLE9BQW9COztRQUM3QixJQUFJLGNBQWMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUM5QixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDO1FBQ0QsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDdkIsT0FBTyxLQUFLLENBQUM7UUFDakIsQ0FBQztRQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckIsY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUU1QixnRUFBZ0U7UUFDaEUsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLElBQUksR0FBRyxFQUFFLENBQUM7UUFDdEQsS0FBSyxNQUFNLFNBQVMsSUFBSSxVQUFVLEVBQUUsQ0FBQztZQUNqQyxnRUFBZ0U7WUFDaEUsSUFBSSxnQkFBUyxDQUFDLGFBQWEsQ0FBQywwQ0FBRSxNQUFNLEtBQUksR0FBRyxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO2dCQUMzRSxPQUFPLElBQUksQ0FBQztZQUNoQixDQUFDO1FBQ0wsQ0FBQztRQUVELGNBQWMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDL0IsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVELE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3ZCLENBQUM7QUFFRDs7O0dBR0c7QUFDSSxTQUFTLGlCQUFpQjtJQUM3QixhQUFhO0lBQ2IseURBQWEsQ0FBQyxVQUFVLENBQUMsR0FBRyxTQUFTLENBQUM7SUFDdEMsYUFBYTtJQUNiLHFEQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsU0FBUyxDQUFDO0lBQ3BDLHlEQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDMUIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F2YXRpLy4vc3JjL3V0aWxpdHkudHM/NTM2MyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuXG5pbXBvcnQgeyBDb21wdXRlZFNpZ25hbCB9IGZyb20gJy4vY29tcHV0ZWRTaWduYWwnO1xuaW1wb3J0IHsgVXBkYXRlUXVldWUgfSBmcm9tICcuL3VwZGF0ZVF1ZXVlJztcbmltcG9ydCB7IFNpZ25hbE1vbml0b3IgfSBmcm9tICcuL3NpZ25hbE1vbml0b3InO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuaW1wb3J0IHsgU2lnbmFsQ29udGV4dCB9IGZyb20gJy4vc2lnbmFsQ29udGV4dCc7XG5cbi8qKlxuICogRGVmYXVsdCBlcXVhbGl0eSBmdW5jdGlvbiBmb3IgY29tcGFyaW5nIHNpZ25hbCB2YWx1ZXNcbiAqIFVzZXMgT2JqZWN0LmlzIGZvciBzdHJpY3QgZXF1YWxpdHkgY29tcGFyaXNvblxuICovXG5leHBvcnQgY29uc3QgZGVmYXVsdEVxdWFscyA9IDxUPihhOiBULCBiOiBUKTogYm9vbGVhbiA9PiBPYmplY3QuaXMoYSwgYik7XG5cbi8qKlxuICogQ3VzdG9tIEpTT04gc2VyaWFsaXplciBmb3Igc2lnbmFsc1xuICogVXNlZnVsIGZvciBkZWJ1Z2dpbmcgYW5kIHBlcnNpc3RlbmNlXG4gKi9cbmV4cG9ydCBjb25zdCBzZXJpYWxpemVTaWduYWwgPSA8VD4oc2lnbmFsOiBTaWduYWw8VD4pOiBzdHJpbmcgPT4ge1xuICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHZhbHVlOiBzaWduYWwudmFsdWUsXG4gICAgICAgIC8vIEB0cy1pZ25vcmUgLSBhY2Nlc3NpbmcgcHJvdGVjdGVkIHByb3BlcnR5IGZvciBzZXJpYWxpemF0aW9uXG4gICAgICAgIG5hbWU6IHNpZ25hbFsnbmFtZSddLFxuICAgICAgICAvLyBAdHMtaWdub3JlIC0gYWNjZXNzaW5nIHByb3RlY3RlZCBwcm9wZXJ0eSBmb3Igc2VyaWFsaXphdGlvblxuICAgICAgICBkaXNwb3NlZDogc2lnbmFsWydkaXNwb3NlZCddLFxuICAgIH0pO1xufTtcblxuLyoqXG4gKiBUeXBlIGd1YXJkIHRvIGNoZWNrIGlmIGEgdmFsdWUgaXMgYSBTaWduYWxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGlzU2lnbmFsPFQ+KHZhbHVlOiBhbnkpOiB2YWx1ZSBpcyBTaWduYWw8VD4ge1xuICAgIHJldHVybiB2YWx1ZSBpbnN0YW5jZW9mIFNpZ25hbDtcbn1cblxuLyoqXG4gKiBHZXQgdGhlIGN1cnJlbnQgY29tcHV0YXRpb24gZGVwdGggb2YgYSBzaWduYWwgY2hhaW5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGdldFNpZ25hbERlcHRoKHNpZ25hbDogU2lnbmFsPGFueT4pOiBudW1iZXIge1xuICAgIGlmIChzaWduYWwgaW5zdGFuY2VvZiBDb21wdXRlZFNpZ25hbCkge1xuICAgICAgICByZXR1cm4gc2lnbmFsLmdldERlcHRoKCk7XG4gICAgfVxuICAgIHJldHVybiAwO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIGEgc2lnbmFsIGlzIHBhcnQgb2YgYSBjaXJjdWxhciBkZXBlbmRlbmN5IGNoYWluXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBoYXNDaXJjdWxhckRlcGVuZGVuY3koc2lnbmFsOiBTaWduYWw8YW55Pik6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHZpc2l0ZWQgPSBuZXcgU2V0PFNpZ25hbDxhbnk+PigpO1xuICAgIGNvbnN0IHJlY3Vyc2lvblN0YWNrID0gbmV3IFNldDxTaWduYWw8YW55Pj4oKTtcblxuICAgIGZ1bmN0aW9uIGRmcyhjdXJyZW50OiBTaWduYWw8YW55Pik6IGJvb2xlYW4ge1xuICAgICAgICBpZiAocmVjdXJzaW9uU3RhY2suaGFzKGN1cnJlbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodmlzaXRlZC5oYXMoY3VycmVudCkpIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuXG4gICAgICAgIHZpc2l0ZWQuYWRkKGN1cnJlbnQpO1xuICAgICAgICByZWN1cnNpb25TdGFjay5hZGQoY3VycmVudCk7XG5cbiAgICAgICAgLy8gQHRzLWlnbm9yZSAtIGFjY2Vzc2luZyBwcm90ZWN0ZWQgcHJvcGVydHkgZm9yIGN5Y2xlIGRldGVjdGlvblxuICAgICAgICBjb25zdCBkZXBlbmRlbnRzID0gY3VycmVudFsnZGVwZW5kZW50cyddIHx8IG5ldyBTZXQoKTtcbiAgICAgICAgZm9yIChjb25zdCBkZXBlbmRlbnQgb2YgZGVwZW5kZW50cykge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZSAtIGFjY2Vzc2luZyBwcm90ZWN0ZWQgcHJvcGVydHkgZm9yIGN5Y2xlIGRldGVjdGlvblxuICAgICAgICAgICAgaWYgKGRlcGVuZGVudFsnY29tcHV0YXRpb24nXT8uc2lnbmFsICYmIGRmcyhkZXBlbmRlbnRbJ2NvbXB1dGF0aW9uJ10uc2lnbmFsKSkge1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmVjdXJzaW9uU3RhY2suZGVsZXRlKGN1cnJlbnQpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcmV0dXJuIGRmcyhzaWduYWwpO1xufVxuXG4vKipcbiAqIFJlc2V0IHRoZSBlbnRpcmUgc2lnbmFsIHN5c3RlbSBzdGF0ZVxuICogVXNlZnVsIGZvciB0ZXN0aW5nIGFuZCBkZWJ1Z2dpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc2V0U2lnbmFsU3lzdGVtKCk6IHZvaWQge1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBTaWduYWxDb250ZXh0WydpbnN0YW5jZSddID0gdW5kZWZpbmVkO1xuICAgIC8vIEB0cy1pZ25vcmVcbiAgICBVcGRhdGVRdWV1ZVsnaW5zdGFuY2UnXSA9IHVuZGVmaW5lZDtcbiAgICBTaWduYWxNb25pdG9yLnJlc2V0KCk7XG59XG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utility.ts\n");

/***/ }),

/***/ "./src/validated.ts":
/*!**************************!*\
  !*** ./src/validated.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validated: () => (/* binding */ validated)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a Signal with validation capabilities.\n *\n * @template T - Type of value stored in the signal\n * @param initialValue - Starting value of the signal\n * @param validator - Function that validates new values before they're set\n * @param options - Standard SignalOptions configuration\n * @returns A Signal with validation logic applied to value updates\n *\n * @example\n * // Create a signal that only accepts positive numbers\n * const positiveNum = validated(1,\n *   (value) => value > 0 || \"Value must be positive\"\n * );\n *\n * @example\n * // Create a signal with complex validation and custom equality\n * const user = validated(\n *   { id: 1, name: \"John\" },\n *   (value) => {\n *     if (!value.name) return \"Name is required\";\n *     if (value.id < 0) return \"ID must be positive\";\n *     return true;\n *   },\n *   { equals: (a, b) => a.id === b.id }\n * );\n */\nfunction validated(initialValue, validator, options) {\n    const innerSignal = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(initialValue, options);\n    const validationError = (0,_computed__WEBPACK_IMPORTED_MODULE_1__.computed)(() => {\n        const result = validator(innerSignal.value);\n        if (typeof result === 'string')\n            return result;\n        if (!result)\n            return 'Validation failed';\n        return null;\n    });\n    return new Proxy(innerSignal, {\n        get(target, prop) {\n            if (prop === 'value') {\n                const error = validationError.value;\n                if (error)\n                    throw new Error(error);\n                return target.value;\n            }\n            return target[prop];\n        },\n        set(target, prop, value) {\n            if (prop === 'value') {\n                const result = validator(value);\n                if (typeof result === 'string')\n                    throw new Error(result);\n                if (!result)\n                    throw new Error('Validation failed');\n                target.value = value;\n            }\n            return true;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmFsaWRhdGVkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzBDO0FBRVI7QUFFdEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBMEJHO0FBQ0ksU0FBUyxTQUFTLENBQ3JCLFlBQWUsRUFDZixTQUF5QyxFQUN6QyxPQUEwQjtJQUUxQixNQUFNLFdBQVcsR0FBRywyREFBWSxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN4RCxNQUFNLGVBQWUsR0FBRyxtREFBUSxDQUFDLEdBQUcsRUFBRTtRQUNsQyxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUTtZQUFFLE9BQU8sTUFBTSxDQUFDO1FBQzlDLElBQUksQ0FBQyxNQUFNO1lBQUUsT0FBTyxtQkFBbUIsQ0FBQztRQUN4QyxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sSUFBSSxLQUFLLENBQUMsV0FBVyxFQUFFO1FBQzFCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSTtZQUNaLElBQUksSUFBSSxLQUFLLE9BQU8sRUFBRSxDQUFDO2dCQUNuQixNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsS0FBSyxDQUFDO2dCQUNwQyxJQUFJLEtBQUs7b0JBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDbEMsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ3hCLENBQUM7WUFDRCxPQUFPLE1BQU0sQ0FBQyxJQUEyQixDQUFDLENBQUM7UUFDL0MsQ0FBQztRQUNELEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUs7WUFDbkIsSUFBSSxJQUFJLEtBQUssT0FBTyxFQUFFLENBQUM7Z0JBQ25CLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxPQUFPLE1BQU0sS0FBSyxRQUFRO29CQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ3hELElBQUksQ0FBQyxNQUFNO29CQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztnQkFDbEQsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDekIsQ0FBQztZQUNELE9BQU8sSUFBSSxDQUFDO1FBQ2hCLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQXZhdGkvLi9zcmMvdmFsaWRhdGVkLnRzPzIzOGQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IGNyZWF0ZVNpZ25hbCB9IGZyb20gJy4vY3JlYXRlU2lnbmFsJztcbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgY29tcHV0ZWQgfSBmcm9tICcuL2NvbXB1dGVkJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgU2lnbmFsIHdpdGggdmFsaWRhdGlvbiBjYXBhYmlsaXRpZXMuXG4gKlxuICogQHRlbXBsYXRlIFQgLSBUeXBlIG9mIHZhbHVlIHN0b3JlZCBpbiB0aGUgc2lnbmFsXG4gKiBAcGFyYW0gaW5pdGlhbFZhbHVlIC0gU3RhcnRpbmcgdmFsdWUgb2YgdGhlIHNpZ25hbFxuICogQHBhcmFtIHZhbGlkYXRvciAtIEZ1bmN0aW9uIHRoYXQgdmFsaWRhdGVzIG5ldyB2YWx1ZXMgYmVmb3JlIHRoZXkncmUgc2V0XG4gKiBAcGFyYW0gb3B0aW9ucyAtIFN0YW5kYXJkIFNpZ25hbE9wdGlvbnMgY29uZmlndXJhdGlvblxuICogQHJldHVybnMgQSBTaWduYWwgd2l0aCB2YWxpZGF0aW9uIGxvZ2ljIGFwcGxpZWQgdG8gdmFsdWUgdXBkYXRlc1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDcmVhdGUgYSBzaWduYWwgdGhhdCBvbmx5IGFjY2VwdHMgcG9zaXRpdmUgbnVtYmVyc1xuICogY29uc3QgcG9zaXRpdmVOdW0gPSB2YWxpZGF0ZWQoMSxcbiAqICAgKHZhbHVlKSA9PiB2YWx1ZSA+IDAgfHwgXCJWYWx1ZSBtdXN0IGJlIHBvc2l0aXZlXCJcbiAqICk7XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENyZWF0ZSBhIHNpZ25hbCB3aXRoIGNvbXBsZXggdmFsaWRhdGlvbiBhbmQgY3VzdG9tIGVxdWFsaXR5XG4gKiBjb25zdCB1c2VyID0gdmFsaWRhdGVkKFxuICogICB7IGlkOiAxLCBuYW1lOiBcIkpvaG5cIiB9LFxuICogICAodmFsdWUpID0+IHtcbiAqICAgICBpZiAoIXZhbHVlLm5hbWUpIHJldHVybiBcIk5hbWUgaXMgcmVxdWlyZWRcIjtcbiAqICAgICBpZiAodmFsdWUuaWQgPCAwKSByZXR1cm4gXCJJRCBtdXN0IGJlIHBvc2l0aXZlXCI7XG4gKiAgICAgcmV0dXJuIHRydWU7XG4gKiAgIH0sXG4gKiAgIHsgZXF1YWxzOiAoYSwgYikgPT4gYS5pZCA9PT0gYi5pZCB9XG4gKiApO1xuICovXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVkPFQ+KFxuICAgIGluaXRpYWxWYWx1ZTogVCxcbiAgICB2YWxpZGF0b3I6ICh2YWx1ZTogVCkgPT4gYm9vbGVhbiB8IHN0cmluZyxcbiAgICBvcHRpb25zPzogU2lnbmFsT3B0aW9uczxUPixcbik6IFNpZ25hbDxUPiB7XG4gICAgY29uc3QgaW5uZXJTaWduYWwgPSBjcmVhdGVTaWduYWwoaW5pdGlhbFZhbHVlLCBvcHRpb25zKTtcbiAgICBjb25zdCB2YWxpZGF0aW9uRXJyb3IgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHZhbGlkYXRvcihpbm5lclNpZ25hbC52YWx1ZSk7XG4gICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnc3RyaW5nJykgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgaWYgKCFyZXN1bHQpIHJldHVybiAnVmFsaWRhdGlvbiBmYWlsZWQnO1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9KTtcblxuICAgIHJldHVybiBuZXcgUHJveHkoaW5uZXJTaWduYWwsIHtcbiAgICAgICAgZ2V0KHRhcmdldCwgcHJvcCkge1xuICAgICAgICAgICAgaWYgKHByb3AgPT09ICd2YWx1ZScpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBlcnJvciA9IHZhbGlkYXRpb25FcnJvci52YWx1ZTtcbiAgICAgICAgICAgICAgICBpZiAoZXJyb3IpIHRocm93IG5ldyBFcnJvcihlcnJvcik7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB0YXJnZXRbcHJvcCBhcyBrZXlvZiB0eXBlb2YgdGFyZ2V0XTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0KHRhcmdldCwgcHJvcCwgdmFsdWUpIHtcbiAgICAgICAgICAgIGlmIChwcm9wID09PSAndmFsdWUnKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gdmFsaWRhdG9yKHZhbHVlKTtcbiAgICAgICAgICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHRocm93IG5ldyBFcnJvcihyZXN1bHQpO1xuICAgICAgICAgICAgICAgIGlmICghcmVzdWx0KSB0aHJvdyBuZXcgRXJyb3IoJ1ZhbGlkYXRpb24gZmFpbGVkJyk7XG4gICAgICAgICAgICAgICAgdGFyZ2V0LnZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/validated.ts\n");

/***/ }),

/***/ "./src/withHistory.ts":
/*!****************************!*\
  !*** ./src/withHistory.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withHistory: () => (/* binding */ withHistory)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _utility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utility */ \"./src/utility.ts\");\n/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./batch */ \"./src/batch.ts\");\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n/**\n * Adds undo/redo functionality to a Signal by wrapping it with history tracking\n *\n * @param initialValue Initial value for the signal\n * @param maxHistory Maximum number of history states to maintain\n * @param options Signal configuration options\n * @returns Enhanced signal with undo/redo capabilities and history access\n */\nfunction withHistory(initialValue, maxHistory = 10, options) {\n    var _a;\n    // Use provided equals function or default\n    const equalsFn = (_a = options === null || options === void 0 ? void 0 : options.equals) !== null && _a !== void 0 ? _a : _utility__WEBPACK_IMPORTED_MODULE_0__.defaultEquals;\n    const signal = (0,_createSignal__WEBPACK_IMPORTED_MODULE_1__.createSignal)(initialValue, {\n        ...options,\n        equals: equalsFn, // Ensure equals function is properly passed\n    });\n    const history = (0,_createSignal__WEBPACK_IMPORTED_MODULE_1__.createSignal)([initialValue]);\n    const currentIndex = (0,_createSignal__WEBPACK_IMPORTED_MODULE_1__.createSignal)(0);\n    const canUndo = (0,_computed__WEBPACK_IMPORTED_MODULE_2__.computed)(() => currentIndex.value > 0);\n    const canRedo = (0,_computed__WEBPACK_IMPORTED_MODULE_2__.computed)(() => currentIndex.value < history.value.length - 1);\n    const wrapper = Object.create(signal);\n    wrapper.history = history;\n    wrapper.canUndo = canUndo;\n    wrapper.canRedo = canRedo;\n    // Use batch for atomic updates\n    Object.defineProperty(wrapper, 'value', {\n        get: () => signal.value,\n        set: (newValue) => {\n            if (!equalsFn(signal.value, newValue)) {\n                (0,_batch__WEBPACK_IMPORTED_MODULE_3__.batch)(() => {\n                    const newIndex = currentIndex.value + 1;\n                    const newHistory = history.value\n                        .slice(0, newIndex)\n                        .concat([newValue]);\n                    if (newHistory.length > maxHistory) {\n                        newHistory.shift();\n                        currentIndex.value = newIndex - 1;\n                    }\n                    else {\n                        currentIndex.value = newIndex;\n                    }\n                    history.value = newHistory;\n                    signal.value = newValue;\n                });\n            }\n        },\n    });\n    wrapper.undo = () => {\n        if (canUndo.value) {\n            (0,_batch__WEBPACK_IMPORTED_MODULE_3__.batch)(() => {\n                currentIndex.value--;\n                signal.value = history.value[currentIndex.value];\n            });\n        }\n    };\n    wrapper.redo = () => {\n        if (canRedo.value) {\n            (0,_batch__WEBPACK_IMPORTED_MODULE_3__.batch)(() => {\n                currentIndex.value++;\n                signal.value = history.value[currentIndex.value];\n            });\n        }\n    };\n    return wrapper;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFFRixPQUFPLENBQUMsSUFBSSxHQUFHLEdBQUcsRUFBRTtRQUNoQixJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNoQiw2Q0FBSyxDQUFDLEdBQUcsRUFBRTtnQkFDUCxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ3JCLE1BQU0sQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFNLENBQUM7WUFDMUQsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0lBRUYsT0FBTyxPQUFPLENBQUM7QUFDbkIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0F2YXRpLy4vc3JjL3dpdGhIaXN0b3J5LnRzPzIyMTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgY3JlYXRlU2lnbmFsIH0gZnJvbSAnLi9jcmVhdGVTaWduYWwnO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuaW1wb3J0IHsgZGVmYXVsdEVxdWFscyB9IGZyb20gJy4vdXRpbGl0eSc7XG5pbXBvcnQgeyBiYXRjaCB9IGZyb20gJy4vYmF0Y2gnO1xuaW1wb3J0IHsgY29tcHV0ZWQgfSBmcm9tICcuL2NvbXB1dGVkJztcblxuLyoqXG4gKiBBZGRzIHVuZG8vcmVkbyBmdW5jdGlvbmFsaXR5IHRvIGEgU2lnbmFsIGJ5IHdyYXBwaW5nIGl0IHdpdGggaGlzdG9yeSB0cmFja2luZ1xuICpcbiAqIEBwYXJhbSBpbml0aWFsVmFsdWUgSW5pdGlhbCB2YWx1ZSBmb3IgdGhlIHNpZ25hbFxuICogQHBhcmFtIG1heEhpc3RvcnkgTWF4aW11bSBudW1iZXIgb2YgaGlzdG9yeSBzdGF0ZXMgdG8gbWFpbnRhaW5cbiAqIEBwYXJhbSBvcHRpb25zIFNpZ25hbCBjb25maWd1cmF0aW9uIG9wdGlvbnNcbiAqIEByZXR1cm5zIEVuaGFuY2VkIHNpZ25hbCB3aXRoIHVuZG8vcmVkbyBjYXBhYmlsaXRpZXMgYW5kIGhpc3RvcnkgYWNjZXNzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB3aXRoSGlzdG9yeTxUPihcbiAgICBpbml0aWFsVmFsdWU6IFQsXG4gICAgbWF4SGlzdG9yeTogbnVtYmVyID0gMTAsXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VD4sXG4pOiBTaWduYWw8VD4gJiB7XG4gICAgdW5kbygpOiB2b2lkO1xuICAgIHJlZG8oKTogdm9pZDtcbiAgICBoaXN0b3J5OiBTaWduYWw8VFtdPjtcbiAgICBjYW5VbmRvOiBTaWduYWw8Ym9vbGVhbj47XG4gICAgY2FuUmVkbzogU2lnbmFsPGJvb2xlYW4+O1xufSB7XG4gICAgLy8gVXNlIHByb3ZpZGVkIGVxdWFscyBmdW5jdGlvbiBvciBkZWZhdWx0XG4gICAgY29uc3QgZXF1YWxzRm4gPSBvcHRpb25zPy5lcXVhbHMgPz8gZGVmYXVsdEVxdWFscztcblxuICAgIGNvbnN0IHNpZ25hbCA9IGNyZWF0ZVNpZ25hbChpbml0aWFsVmFsdWUsIHtcbiAgICAgICAgLi4ub3B0aW9ucyxcbiAgICAgICAgZXF1YWxzOiBlcXVhbHNGbiwgLy8gRW5zdXJlIGVxdWFscyBmdW5jdGlvbiBpcyBwcm9wZXJseSBwYXNzZWRcbiAgICB9KTtcbiAgICBjb25zdCBoaXN0b3J5ID0gY3JlYXRlU2lnbmFsPFRbXT4oW2luaXRpYWxWYWx1ZV0pO1xuICAgIGNvbnN0IGN1cnJlbnRJbmRleCA9IGNyZWF0ZVNpZ25hbCgwKTtcblxuICAgIGNvbnN0IGNhblVuZG8gPSBjb21wdXRlZCgoKSA9PiBjdXJyZW50SW5kZXgudmFsdWUgPiAwKTtcbiAgICBjb25zdCBjYW5SZWRvID0gY29tcHV0ZWQoKCkgPT4gY3VycmVudEluZGV4LnZhbHVlIDwgaGlzdG9yeS52YWx1ZS5sZW5ndGggLSAxKTtcblxuICAgIGNvbnN0IHdyYXBwZXIgPSBPYmplY3QuY3JlYXRlKHNpZ25hbCkgYXMgU2lnbmFsPFQ+ICYge1xuICAgICAgICB1bmRvKCk6IHZvaWQ7XG4gICAgICAgIHJlZG8oKTogdm9pZDtcbiAgICAgICAgaGlzdG9yeTogU2lnbmFsPFRbXT47XG4gICAgICAgIGNhblVuZG86IFNpZ25hbDxib29sZWFuPjtcbiAgICAgICAgY2FuUmVkbzogU2lnbmFsPGJvb2xlYW4+O1xuICAgIH07XG5cbiAgICB3cmFwcGVyLmhpc3RvcnkgPSBoaXN0b3J5O1xuICAgIHdyYXBwZXIuY2FuVW5kbyA9IGNhblVuZG87XG4gICAgd3JhcHBlci5jYW5SZWRvID0gY2FuUmVkbztcblxuICAgIC8vIFVzZSBiYXRjaCBmb3IgYXRvbWljIHVwZGF0ZXNcbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkod3JhcHBlciwgJ3ZhbHVlJywge1xuICAgICAgICBnZXQ6ICgpID0+IHNpZ25hbC52YWx1ZSxcbiAgICAgICAgc2V0OiAobmV3VmFsdWU6IFQpID0+IHtcbiAgICAgICAgICAgIGlmICghZXF1YWxzRm4oc2lnbmFsLnZhbHVlLCBuZXdWYWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBiYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0luZGV4ID0gY3VycmVudEluZGV4LnZhbHVlICsgMTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgbmV3SGlzdG9yeSA9IGhpc3RvcnkudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgIC5zbGljZSgwLCBuZXdJbmRleClcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jb25jYXQoW25ld1ZhbHVlXSk7XG5cbiAgICAgICAgICAgICAgICAgICAgaWYgKG5ld0hpc3RvcnkubGVuZ3RoID4gbWF4SGlzdG9yeSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgbmV3SGlzdG9yeS5zaGlmdCgpO1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4LnZhbHVlID0gbmV3SW5kZXggLSAxO1xuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudEluZGV4LnZhbHVlID0gbmV3SW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICBoaXN0b3J5LnZhbHVlID0gbmV3SGlzdG9yeTtcbiAgICAgICAgICAgICAgICAgICAgc2lnbmFsLnZhbHVlID0gbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgfSk7XG5cbiAgICB3cmFwcGVyLnVuZG8gPSAoKSA9PiB7XG4gICAgICAgIGlmIChjYW5VbmRvLnZhbHVlKSB7XG4gICAgICAgICAgICBiYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY3VycmVudEluZGV4LnZhbHVlLS07XG4gICAgICAgICAgICAgICAgc2lnbmFsLnZhbHVlID0gaGlzdG9yeS52YWx1ZVtjdXJyZW50SW5kZXgudmFsdWVdIGFzIFQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICB3cmFwcGVyLnJlZG8gPSAoKSA9PiB7XG4gICAgICAgIGlmIChjYW5SZWRvLnZhbHVlKSB7XG4gICAgICAgICAgICBiYXRjaCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY3VycmVudEluZGV4LnZhbHVlKys7XG4gICAgICAgICAgICAgICAgc2lnbmFsLnZhbHVlID0gaGlzdG9yeS52YWx1ZVtjdXJyZW50SW5kZXgudmFsdWVdIGFzIFQ7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICByZXR1cm4gd3JhcHBlcjtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/withHistory.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});