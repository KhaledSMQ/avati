/*!
 * @avatijs/signal 0.2.1
 * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://avati.io/ for details.
 */var t={d:(s,i)=>{for(var e in i)t.o(i,e)&&!t.o(s,e)&&Object.defineProperty(s,e,{enumerable:!0,get:i[e]})},o:(t,s)=>Object.prototype.hasOwnProperty.call(t,s)},s={};t.d(s,{z:()=>a,v:()=>c});class i extends Error{constructor(t){super(`Cannot ${t} a disposed signal`),this.name="SignalDisposedError"}}class e{constructor(){this.computationStack=[],this.batchDepth=0,this.batchQueue=new Set,this.activeEffects=new Set}static getInstance(){return this.instance||(this.instance=new e),this.instance}getCurrentComputation(){return this.computationStack[this.computationStack.length-1]}pushComputation(t){t&&this.computationStack.includes(t)||this.computationStack.push(t)}popComputation(){this.computationStack.pop()}isBatching(){return this.batchDepth>0}beginBatch(){this.batchDepth++}endBatch(){this.batchDepth--,0===this.batchDepth&&this.flushBatchQueue()}addToBatchQueue(t){this.batchQueue.add(t)}flushBatchQueue(){const t=new Set(this.batchQueue);this.batchQueue.clear();const s=new Set;for(const i of t)for(const t of i.getDependents())s.add(t);for(const t of s)t.markDirty()}setCurrentComputation(t){this.computationStack[this.computationStack.length-1]=t}registerEffect(t){this.activeEffects.add(t)}unregisterEffect(t){this.activeEffects.delete(t)}isInEffect(){return this.activeEffects.size>0}}class r{constructor(t,s={}){var i;this.dependents=new Set,this.disposed=!1,this.t=t,this.equals=null!==(i=s.equals)&&void 0!==i?i:Object.is,this.name=s.name||"anonymous"}isCommutable(){throw Error("Method not implemented.")}get value(){if(this.disposed)throw new i("read from");return this.trackDependency(),this.t}set value(t){if(this.disposed)throw new i("write to");this.equals(this.t,t)||(this.t=t,this.notifyDependents())}get_value_bypass_tracking(){if(this.disposed)throw new i("read from");return this.t}update(t){this.value=t(this.t)}addDependent(t){this.dependents.add(t)}removeDependent(t){this.dependents.delete(t)}notifyDependents(){const t=e.getInstance();if(t.isBatching())t.addToBatchQueue(this);else for(const t of this.dependents)t.markDirty()}dispose(){var t;if(this.disposed)return;this.disposed=!0;const s=new Set(this.dependents);this.dependents.clear();for(const i of s)"ComputedSignal"==i.constructor.name||"ComputedSignal"==(null===(t=i.signal)||void 0===t?void 0:t.constructor.name)?("ComputedSignal"==i.constructor.name?i:i.signal).dispose():i.dispose()}isDisposed(){return this.disposed}getDependents(){return this.dependents||new Set}hasDependents(){return this.dependents.size>0}toString(){return`Signal(${this.name})`}trackDependency(){const t=e.getInstance().getCurrentComputation();t&&(t.addDependency(this),this.addDependent(t))}}class h{constructor(){this.queue=new Set,this.processing=!1,this.updateDepth=0,this.maxUpdateDepth=1e3}static getInstance(){return this.instance||(this.instance=new h),this.instance}schedule(t){if(this.updateDepth>=this.maxUpdateDepth)throw Error("Maximum update depth exceeded - possible circular dependency");this.queue.add(t),this.processing||this.processQueue()}processQueue(){this.processing=!0,this.updateDepth++;try{for(;this.queue.size>0;){const t=Array.from(this.queue);this.queue.clear(),t.sort(((t,s)=>t.getDepth()-s.getDepth()));for(const s of t)s.isDirty()&&!s.isDisposed()&&s.recompute()}}finally{this.processing=!1,this.updateDepth--}}}class n{constructor(t){this.dirty=!0,this.disposed=!1,this.dependencies=new Set,this.dependents=new Set,this.depth=0,this.name=t}addDependency(t){this.dependencies.has(t)||(this.dependencies.add(t),"ComputedSignal"==t.constructor.name&&this.updateDepth())}removeDependency(t){this.dependencies.delete(t)&&this.updateDepth()}dispose(){this.disposed||(this.disposed=!0,this.clearDependencies(),this.dependents.clear())}isDirty(){return this.dirty}isDisposed(){return this.disposed}getDepth(){return this.depth}markDirty(){this.disposed||(this.dirty=!0,h.getInstance().schedule(this))}hasSignal(t){return this.dependencies.has(t)}clearDependencies(){for(const t of this.dependencies)t.removeDependent(this);this.dependencies.clear(),this.updateDepth()}updateDepth(){const t=this.depth;let s=0;for(const t of this.dependencies)"ComputedSignal"==t.constructor.name&&(s=Math.max(s,t.getDepth()+1));if(t!==s){this.depth=s;for(const t of this.dependents)t.updateDepth()}}}class o extends n{constructor(t){super("subscription"),this.callback=t}recompute(){if(this.disposed)return;const t=e.getInstance(),s=t.getCurrentComputation();t.setCurrentComputation(this);try{this.callback()}finally{s&&t.setCurrentComputation(s),this.dirty=!1}}}class u extends r{constructor(t,s={}){super(t,s)}subscribe(t){if(this.disposed)throw new i("subscribe to");const s=new o((()=>t(this.value)));return s.recompute(),()=>s.dispose()}}class a extends u{constructor(t,s={}){super({data:null,loading:!1,error:null,timestamp:0},s),this.abortController=null,this.fetchFn=t,this.options=s}async fetch(t=!1){var s,i,e,r,h,n,o;if(this.isCacheValid()&&!t)return this.value.data;this.abortController&&this.abortController.abort(),this.abortController=new AbortController,this.value={...this.value,loading:!0,error:null};let u=0;const a=(null===(s=this.options.retryConfig)||void 0===s?void 0:s.attempts)||1,c=(null===(i=this.options.retryConfig)||void 0===i?void 0:i.delay)||1e3,l=(null===(e=this.options.retryConfig)||void 0===e?void 0:e.backoffFactor)||2;for(;a>u;)try{const t=await this.fetchFn();return this.value={data:t,loading:!1,error:null,timestamp:Date.now()},null===(h=(r=this.options).onSuccess)||void 0===h||h.call(r,t),t}catch(t){if(u++,u===a)return this.value={...this.value,loading:!1,error:t},null===(o=(n=this.options).onError)||void 0===o||o.call(n,t),null;await new Promise((t=>setTimeout(t,c*Math.pow(l,u-1))))}return null}refresh(){return this.fetch(!0)}dispose(){this.abortController&&this.abortController.abort(),super.dispose()}isCacheValid(){var t;if(!(null===(t=this.options.cache)||void 0===t?void 0:t.enabled))return!1;if(!this.value.data)return!1;const s=this.options.cache.ttl||3e5;return Date.now()-this.value.timestamp<s}}function c(t,s){return new a(t,s)}var l=s.z,d=s.v;export{l as AsyncSignal,d as asyncSignal};
//# sourceMappingURL=index.js.map