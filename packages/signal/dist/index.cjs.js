/*!
 * @avatijs/signal 0.1.1
 * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>
 * Licensed under MIT, https://opensource.org/licenses/MIT/
 * Please visit https://avati.io/ for details.
 */

/* eslint-disable */

/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/asyncSignal.ts":
/*!****************************!*\
  !*** ./src/asyncSignal.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncSignal: () => (/* binding */ AsyncSignal),\n/* harmony export */   asyncSignal: () => (/* binding */ asyncSignal)\n/* harmony export */ });\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * A Signal subclass for managing asynchronous operations with built-in\n * loading states, caching, and retry logic\n *\n * @template T Type of data being fetched\n * @template E Type of error that can occur\n *\n * @example\n * // User authentication with error handling\n * interface User {\n *   id: string;\n *   name: string;\n *   email: string;\n * }\n *\n * interface AuthError {\n *   code: 'invalid_credentials' | 'network_error' | 'server_error';\n *   message: string;\n * }\n *\n * const authSignal = new AsyncSignal<User, AuthError>(\n *   async () => {\n *     const response = await fetch('/api/auth');\n *     if (!response.ok) {\n *       throw {\n *         code: 'invalid_credentials',\n *         message: 'Invalid username or password'\n *       };\n *     }\n *     return response.json();\n *   },\n *   {\n *     cache: { enabled: true, ttl: 30 * 60 * 1000 }, // 30min cache\n *     onError: (error) => {\n *       if (error.code === 'invalid_credentials') {\n *         showLoginForm();\n *       } else {\n *         showErrorDialog(error.message);\n *       }\n *     }\n *   }\n * );\n *\n * @example\n * // Real-time search with request cancellation\n * const searchSignal = new AsyncSignal(\n *   async (query: string) => {\n *     const response = await fetch(`/api/search?q=${query}`);\n *     return response.json();\n *   }\n * );\n *\n * searchInput.addEventListener('input', async (e) => {\n *   const results = await searchSignal.fetch(); // Auto-cancels previous\n *   updateSearchResults(results);\n * });\n *\n * @example\n * // File upload with progress tracking\n * const uploadSignal = new AsyncSignal<string>(\n *   async (file: File) => {\n *     const formData = new FormData();\n *     formData.append('file', file);\n *\n *     const response = await fetch('/api/upload', {\n *       method: 'POST',\n *       body: formData\n *     });\n *\n *     if (!response.ok) {\n *       throw new Error('Upload failed');\n *     }\n *\n *     const { url } = await response.json();\n *     return url;\n *   },\n *   {\n *     retryConfig: {\n *       attempts: 3,\n *       delay: 2000,\n *       backoffFactor: 1.5\n *     },\n *     onSuccess: (url) => {\n *       showSuccess(`File uploaded to ${url}`);\n *     }\n *   }\n * );\n *\n * @example\n * // Polling with caching\n * const pollSignal = new AsyncSignal<JobStatus>(\n *   async (jobId: string) => {\n *     const response = await fetch(`/api/jobs/${jobId}`);\n *     return response.json();\n *   },\n *   {\n *     cache: {\n *       enabled: true,\n *       ttl: 5000 // Cache for 5s between polls\n *     }\n *   }\n * );\n *\n * const pollJob = async (jobId: string) => {\n *   while (true) {\n *     const status = await pollSignal.fetch();\n *     if (status.state === 'completed') break;\n *     await new Promise(resolve => setTimeout(resolve, 5000));\n *   }\n * };\n */\nclass AsyncSignal extends _signal__WEBPACK_IMPORTED_MODULE_0__.Signal {\n    constructor(fetchFn, options = {}) {\n        super({\n            data: null,\n            loading: false,\n            error: null,\n            timestamp: 0,\n        }, options);\n        this.abortController = null;\n        this.fetchFn = fetchFn;\n        this.options = options;\n    }\n    /**\n     * Fetches data using the provided fetch function\n     * Handles loading states, caching, retries, and error handling\n     *\n     * @param force Whether to bypass cache and force a new fetch\n     * @returns The fetched data or null if fetch failed\n     *\n     * @example\n     * const signal = new AsyncSignal(fetchUser);\n     * await signal.fetch(); // Normal fetch, uses cache if valid\n     * await signal.fetch(true); // Force fetch, bypass cache\n     */\n    async fetch(force = false) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        // Check cache unless forced refresh\n        if (this.isCacheValid() && !force) {\n            return this.value.data;\n        }\n        // Cancel any in-flight request\n        if (this.abortController) {\n            this.abortController.abort();\n        }\n        this.abortController = new AbortController();\n        // Set loading state\n        this.value = {\n            ...this.value,\n            loading: true,\n            error: null,\n        };\n        // Initialize retry loop variables\n        let attempts = 0;\n        const maxAttempts = ((_a = this.options.retryConfig) === null || _a === void 0 ? void 0 : _a.attempts) || 1;\n        const delay = ((_b = this.options.retryConfig) === null || _b === void 0 ? void 0 : _b.delay) || 1000;\n        const backoffFactor = ((_c = this.options.retryConfig) === null || _c === void 0 ? void 0 : _c.backoffFactor) || 2;\n        // Retry loop\n        while (attempts < maxAttempts) {\n            try {\n                const data = await this.fetchFn();\n                // Update state on success\n                this.value = {\n                    data,\n                    loading: false,\n                    error: null,\n                    timestamp: Date.now(),\n                };\n                (_e = (_d = this.options).onSuccess) === null || _e === void 0 ? void 0 : _e.call(_d, data);\n                return data;\n            }\n            catch (error) {\n                attempts++;\n                // If out of retries, set error state\n                if (attempts === maxAttempts) {\n                    this.value = {\n                        ...this.value,\n                        loading: false,\n                        error: error,\n                    };\n                    (_g = (_f = this.options).onError) === null || _g === void 0 ? void 0 : _g.call(_f, error);\n                    return null;\n                }\n                // Wait before retrying with exponential backoff\n                await new Promise(resolve => setTimeout(resolve, delay * Math.pow(backoffFactor, attempts - 1)));\n            }\n        }\n        return null;\n    }\n    /**\n     * Forces a fresh fetch, bypassing cache\n     */\n    refresh() {\n        return this.fetch(true);\n    }\n    /**\n     * Cleans up by aborting any in-flight request\n     */\n    dispose() {\n        if (this.abortController) {\n            this.abortController.abort();\n        }\n        super.dispose();\n    }\n    /**\n     * Checks if cached data is still valid based on TTL\n     */\n    isCacheValid() {\n        var _a;\n        if (!((_a = this.options.cache) === null || _a === void 0 ? void 0 : _a.enabled))\n            return false;\n        if (!this.value.data)\n            return false;\n        const ttl = this.options.cache.ttl || 5 * 60 * 1000; // Default 5 minutes\n        return Date.now() - this.value.timestamp < ttl;\n    }\n}\n/**\n * Factory function to create AsyncSignal instances\n *\n * @example\n * // Example 1: Simple user fetch with caching\n * const userSignal = asyncSignal(\n *   async () => {\n *     const response = await fetch('/api/user');\n *     return response.json();\n *   },\n *   {\n *     cache: { enabled: true, ttl: 60000 } // Cache for 1 minute\n *   }\n * );\n *\n * @example\n * // Example 2: Weather API with retries\n * const weatherSignal = asyncSignal(\n *   async () => {\n *     const response = await fetch('https://api.weather.com/current');\n *     return response.json();\n *   },\n *   {\n *     retryConfig: {\n *       attempts: 3,\n *       delay: 1000,\n *       backoffFactor: 2\n *     }\n *   }\n * );\n *\n * @example\n * // Example 3: Todo list with error handling\n * const todoSignal = asyncSignal(\n *   async () => {\n *     const response = await fetch('/api/todos');\n *     if (!response.ok) throw new Error('Failed to fetch todos');\n *     return response.json();\n *   },\n *   {\n *     onError: (error) => console.error('Todo fetch failed:', error),\n *     onSuccess: (todos) => console.log('Fetched todos:', todos.length)\n *   }\n * );\n */\nfunction asyncSignal(fetchFn, options) {\n    return new AsyncSignal(fetchFn, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/asyncSignal.ts\n");

/***/ }),

/***/ "./src/batch.ts":
/*!**********************!*\
  !*** ./src/batch.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   batch: () => (/* binding */ batch)\n/* harmony export */ });\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Batch multiple signal updates to prevent cascading updates\n */\nfunction batch(fn) {\n    const context = _signalContext__WEBPACK_IMPORTED_MODULE_0__.SignalContext.getInstance();\n    context.beginBatch();\n    try {\n        return fn();\n    }\n    finally {\n        context.endBatch();\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvYmF0Y2gudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUc0QztBQUVoRDs7R0FFRztBQUNJLFNBQVMsS0FBSyxDQUFJLEVBQVc7SUFDaEMsTUFBTSxPQUFPLEdBQUcseURBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM1QyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUM7SUFDckIsSUFBSSxDQUFDO1FBQ0QsT0FBTyxFQUFFLEVBQUUsQ0FBQztJQUNoQixDQUFDO1lBQVMsQ0FBQztRQUNQLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUN2QixDQUFDO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhdmF0aWpzL3NpZ25hbC8uL3NyYy9iYXRjaC50cz82M2IwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5cbmltcG9ydCB7IFNpZ25hbENvbnRleHQgfSBmcm9tICcuL3NpZ25hbENvbnRleHQnO1xuXG4vKipcbiAqIEJhdGNoIG11bHRpcGxlIHNpZ25hbCB1cGRhdGVzIHRvIHByZXZlbnQgY2FzY2FkaW5nIHVwZGF0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGJhdGNoPFQ+KGZuOiAoKSA9PiBUKTogVCB7XG4gICAgY29uc3QgY29udGV4dCA9IFNpZ25hbENvbnRleHQuZ2V0SW5zdGFuY2UoKTtcbiAgICBjb250ZXh0LmJlZ2luQmF0Y2goKTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gZm4oKTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgICBjb250ZXh0LmVuZEJhdGNoKCk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/batch.ts\n");

/***/ }),

/***/ "./src/combine.ts":
/*!************************!*\
  !*** ./src/combine.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   combine: () => (/* binding */ combine)\n/* harmony export */ });\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Combines multiple signals into a single signal containing an array of their values.\n * When any of the input signals change, the combined signal updates with all current values.\n *\n * @template T - Tuple type representing the types of values from each input signal\n *\n * @param signals - An array of signals to combine. Each signal can have a different type,\n *                 represented by the corresponding type in the tuple T.\n * @param options - Optional configuration options for the resulting signal, including\n *                 custom equality comparison and naming.\n *\n * @returns A new signal containing an array of the current values from all input signals.\n *          The returned signal updates whenever any input signal changes.\n *\n * @example\n * // Combining signals of different types\n * const nameSignal = new Signal<string>('John');\n * const ageSignal = new Signal<number>(25);\n * const activeSignal = new Signal<boolean>(true);\n *\n * const combined = combine([nameSignal, ageSignal, activeSignal]);\n * console.log(combined.value); // ['John', 25, true]\n *\n * nameSignal.value = 'Jane';\n * console.log(combined.value); // ['Jane', 25, true]\n *\n * @example\n * // Using with custom equality function\n * const combined = combine([sig1, sig2], {\n *   equals: (prev, next) =>\n *     prev.length === next.length &&\n *     prev.every((val, idx) => Object.is(val, next[idx]))\n * });\n */\nfunction combine(signals, options) {\n    var _a;\n    // dependencies on all input signals through their .value accessors\n    return (0,_computed__WEBPACK_IMPORTED_MODULE_0__.computed)(() => signals.map(s => s.value), {\n        // Ensure updates are propagated by using appropriate equality check\n        equals: (_a = options === null || options === void 0 ? void 0 : options.equals) !== null && _a !== void 0 ? _a : ((prev, next) => {\n            if (!prev || !next || prev.length !== next.length)\n                return false;\n            return prev.every((val, idx) => Object.is(val, next[idx]));\n        }),\n        name: (options === null || options === void 0 ? void 0 : options.name) || `Signal(combine)[${signals.map(s => s.toString()).join(', ')}]`,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tYmluZS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztJQUtJO0FBSWtDO0FBRXRDOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FpQ0c7QUFDSSxTQUFTLE9BQU8sQ0FDbkIsT0FBeUMsRUFDekMsT0FBMEI7O0lBRTFCLG1FQUFtRTtJQUNuRSxPQUFPLG1EQUFRLENBQUMsR0FBRyxFQUFFLENBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQU8sRUFBRTtRQUNwRCxvRUFBb0U7UUFDcEUsTUFBTSxFQUFFLGFBQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxNQUFNLG1DQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLEVBQUU7WUFDdkMsSUFBSSxDQUFDLElBQUksSUFBSSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxNQUFNO2dCQUFFLE9BQU8sS0FBSyxDQUFDO1lBQ2hFLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDL0QsQ0FBQyxDQUFDO1FBQ0YsSUFBSSxFQUFFLFFBQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxJQUFJLEtBQUksbUJBQW1CLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUc7S0FDekYsQ0FBQyxDQUFDO0FBR1AsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhdmF0aWpzL3NpZ25hbC8uL3NyYy9jb21iaW5lLnRzPzY3ZWQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuaW1wb3J0IHsgY29tcHV0ZWQgfSBmcm9tICcuL2NvbXB1dGVkJztcblxuLyoqXG4gKiBDb21iaW5lcyBtdWx0aXBsZSBzaWduYWxzIGludG8gYSBzaW5nbGUgc2lnbmFsIGNvbnRhaW5pbmcgYW4gYXJyYXkgb2YgdGhlaXIgdmFsdWVzLlxuICogV2hlbiBhbnkgb2YgdGhlIGlucHV0IHNpZ25hbHMgY2hhbmdlLCB0aGUgY29tYmluZWQgc2lnbmFsIHVwZGF0ZXMgd2l0aCBhbGwgY3VycmVudCB2YWx1ZXMuXG4gKlxuICogQHRlbXBsYXRlIFQgLSBUdXBsZSB0eXBlIHJlcHJlc2VudGluZyB0aGUgdHlwZXMgb2YgdmFsdWVzIGZyb20gZWFjaCBpbnB1dCBzaWduYWxcbiAqXG4gKiBAcGFyYW0gc2lnbmFscyAtIEFuIGFycmF5IG9mIHNpZ25hbHMgdG8gY29tYmluZS4gRWFjaCBzaWduYWwgY2FuIGhhdmUgYSBkaWZmZXJlbnQgdHlwZSxcbiAqICAgICAgICAgICAgICAgICByZXByZXNlbnRlZCBieSB0aGUgY29ycmVzcG9uZGluZyB0eXBlIGluIHRoZSB0dXBsZSBULlxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25hbCBjb25maWd1cmF0aW9uIG9wdGlvbnMgZm9yIHRoZSByZXN1bHRpbmcgc2lnbmFsLCBpbmNsdWRpbmdcbiAqICAgICAgICAgICAgICAgICBjdXN0b20gZXF1YWxpdHkgY29tcGFyaXNvbiBhbmQgbmFtaW5nLlxuICpcbiAqIEByZXR1cm5zIEEgbmV3IHNpZ25hbCBjb250YWluaW5nIGFuIGFycmF5IG9mIHRoZSBjdXJyZW50IHZhbHVlcyBmcm9tIGFsbCBpbnB1dCBzaWduYWxzLlxuICogICAgICAgICAgVGhlIHJldHVybmVkIHNpZ25hbCB1cGRhdGVzIHdoZW5ldmVyIGFueSBpbnB1dCBzaWduYWwgY2hhbmdlcy5cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29tYmluaW5nIHNpZ25hbHMgb2YgZGlmZmVyZW50IHR5cGVzXG4gKiBjb25zdCBuYW1lU2lnbmFsID0gbmV3IFNpZ25hbDxzdHJpbmc+KCdKb2huJyk7XG4gKiBjb25zdCBhZ2VTaWduYWwgPSBuZXcgU2lnbmFsPG51bWJlcj4oMjUpO1xuICogY29uc3QgYWN0aXZlU2lnbmFsID0gbmV3IFNpZ25hbDxib29sZWFuPih0cnVlKTtcbiAqXG4gKiBjb25zdCBjb21iaW5lZCA9IGNvbWJpbmUoW25hbWVTaWduYWwsIGFnZVNpZ25hbCwgYWN0aXZlU2lnbmFsXSk7XG4gKiBjb25zb2xlLmxvZyhjb21iaW5lZC52YWx1ZSk7IC8vIFsnSm9obicsIDI1LCB0cnVlXVxuICpcbiAqIG5hbWVTaWduYWwudmFsdWUgPSAnSmFuZSc7XG4gKiBjb25zb2xlLmxvZyhjb21iaW5lZC52YWx1ZSk7IC8vIFsnSmFuZScsIDI1LCB0cnVlXVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBVc2luZyB3aXRoIGN1c3RvbSBlcXVhbGl0eSBmdW5jdGlvblxuICogY29uc3QgY29tYmluZWQgPSBjb21iaW5lKFtzaWcxLCBzaWcyXSwge1xuICogICBlcXVhbHM6IChwcmV2LCBuZXh0KSA9PlxuICogICAgIHByZXYubGVuZ3RoID09PSBuZXh0Lmxlbmd0aCAmJlxuICogICAgIHByZXYuZXZlcnkoKHZhbCwgaWR4KSA9PiBPYmplY3QuaXModmFsLCBuZXh0W2lkeF0pKVxuICogfSk7XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21iaW5lPFQgZXh0ZW5kcyBhbnlbXT4oXG4gICAgc2lnbmFsczogeyBbSyBpbiBrZXlvZiBUXTogU2lnbmFsPFRbS10+IH0sXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VD4sXG4pOiBTaWduYWw8VD4ge1xuICAgIC8vIGRlcGVuZGVuY2llcyBvbiBhbGwgaW5wdXQgc2lnbmFscyB0aHJvdWdoIHRoZWlyIC52YWx1ZSBhY2Nlc3NvcnNcbiAgICByZXR1cm4gY29tcHV0ZWQoKCkgPT4gKHNpZ25hbHMubWFwKHMgPT4gcy52YWx1ZSkgYXMgVCksIHtcbiAgICAgICAgLy8gRW5zdXJlIHVwZGF0ZXMgYXJlIHByb3BhZ2F0ZWQgYnkgdXNpbmcgYXBwcm9wcmlhdGUgZXF1YWxpdHkgY2hlY2tcbiAgICAgICAgZXF1YWxzOiBvcHRpb25zPy5lcXVhbHMgPz8gKChwcmV2LCBuZXh0KSA9PiB7XG4gICAgICAgICAgICBpZiAoIXByZXYgfHwgIW5leHQgfHwgcHJldi5sZW5ndGggIT09IG5leHQubGVuZ3RoKSByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICByZXR1cm4gcHJldi5ldmVyeSgodmFsLCBpZHgpID0+IE9iamVjdC5pcyh2YWwsIG5leHRbaWR4XSkpO1xuICAgICAgICB9KSxcbiAgICAgICAgbmFtZTogb3B0aW9ucz8ubmFtZSB8fCBgU2lnbmFsKGNvbWJpbmUpWyR7c2lnbmFscy5tYXAocyA9PiBzLnRvU3RyaW5nKCkpLmpvaW4oJywgJyl9XWAsXG4gICAgfSk7XG5cblxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/combine.ts\n");

/***/ }),

/***/ "./src/computation.ts":
/*!****************************!*\
  !*** ./src/computation.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Computation: () => (/* binding */ Computation)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _updateQueue__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./updateQueue */ \"./src/updateQueue.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Base class for managing reactive computations\n */\nclass Computation {\n    constructor(name) {\n        this.dirty = true;\n        this.disposed = false;\n        this.dependencies = new Set();\n        this.dependents = new Set();\n        this.depth = 0;\n        this.name = name;\n    }\n    /**\n     * Add a dependency to this computation\n     */\n    addDependency(signal) {\n        if (!this.dependencies.has(signal)) {\n            this.dependencies.add(signal);\n            if (signal instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_0__.ComputedSignal) {\n                this.updateDepth();\n            }\n        }\n    }\n    /**\n     * Remove a dependency from this computation\n     */\n    removeDependency(signal) {\n        if (this.dependencies.delete(signal)) {\n            this.updateDepth();\n        }\n    }\n    /**\n     * Clean up computation resources\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        this.clearDependencies();\n        this.dependents.clear();\n    }\n    /**\n     * Check if computation is dirty\n     */\n    isDirty() {\n        return this.dirty;\n    }\n    /**\n     * Check if computation has been disposed\n     */\n    isDisposed() {\n        return this.disposed;\n    }\n    /**\n     * Add a dependent computation, which will be recomputed when this computation updates\n     */\n    getDepth() {\n        return this.depth;\n    }\n    /**\n     * Mark computation as dirty and schedule update\n     */\n    markDirty() {\n        if (!this.disposed) {\n            this.dirty = true;\n            _updateQueue__WEBPACK_IMPORTED_MODULE_1__.UpdateQueue.getInstance().schedule(this);\n        }\n    }\n    /**\n     * Check if signal is a dependency of this computation\n     * @param signal\n     */\n    hasSignal(signal) {\n        return this.dependencies.has(signal);\n    }\n    /**\n     * Clear all dependencies and update depth\n     */\n    clearDependencies() {\n        for (const dep of this.dependencies) {\n            dep.removeDependent(this);\n        }\n        this.dependencies.clear();\n        this.updateDepth();\n    }\n    /**\n     * Update the computation's depth in the dependency graph\n     */\n    updateDepth() {\n        const oldDepth = this.depth;\n        let maxDepth = 0;\n        for (const dep of this.dependencies) {\n            if (dep instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_0__.ComputedSignal) {\n                maxDepth = Math.max(maxDepth, dep.getDepth() + 1);\n            }\n        }\n        if (oldDepth !== maxDepth) {\n            this.depth = maxDepth;\n            // Propagate depth update to dependents\n            for (const dependent of this.dependents) {\n                dependent.updateDepth();\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUN0RCxDQUFDO1FBQ0wsQ0FBQztRQUVELElBQUksUUFBUSxLQUFLLFFBQVEsRUFBRSxDQUFDO1lBQ3hCLElBQUksQ0FBQyxLQUFLLEdBQUcsUUFBUSxDQUFDO1lBQ3RCLHVDQUF1QztZQUN2QyxLQUFLLE1BQU0sU0FBUyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztnQkFDdEMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQzVCLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQztDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGF2YXRpanMvc2lnbmFsLy4vc3JjL2NvbXB1dGF0aW9uLnRzPzcyZjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IERpc3Bvc2FibGUgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuaW1wb3J0IHsgQ29tcHV0ZWRTaWduYWwgfSBmcm9tICcuL2NvbXB1dGVkU2lnbmFsJztcbmltcG9ydCB7IFVwZGF0ZVF1ZXVlIH0gZnJvbSAnLi91cGRhdGVRdWV1ZSc7XG5cbi8qKlxuICogQmFzZSBjbGFzcyBmb3IgbWFuYWdpbmcgcmVhY3RpdmUgY29tcHV0YXRpb25zXG4gKi9cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb21wdXRhdGlvbiBpbXBsZW1lbnRzIERpc3Bvc2FibGUge1xuICAgIHByb3RlY3RlZCBkaXJ0eSA9IHRydWU7XG4gICAgcHJvdGVjdGVkIGRpc3Bvc2VkID0gZmFsc2U7XG4gICAgcHJvdGVjdGVkIGRlcGVuZGVuY2llcyA9IG5ldyBTZXQ8U2lnbmFsPGFueT4+KCk7XG4gICAgcHJvdGVjdGVkIGRlcGVuZGVudHMgPSBuZXcgU2V0PENvbXB1dGF0aW9uPigpO1xuICAgIHByb3RlY3RlZCBkZXB0aCA9IDA7XG4gICAgcHJvdGVjdGVkIG5hbWU/OiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihuYW1lPzogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgfVxuXG4gICAgYWJzdHJhY3QgcmVjb21wdXRlKCk6IHZvaWQ7XG5cblxuICAgIC8qKlxuICAgICAqIEFkZCBhIGRlcGVuZGVuY3kgdG8gdGhpcyBjb21wdXRhdGlvblxuICAgICAqL1xuICAgIGFkZERlcGVuZGVuY3koc2lnbmFsOiBTaWduYWw8YW55Pik6IHZvaWQge1xuICAgICAgICBpZiAoIXRoaXMuZGVwZW5kZW5jaWVzLmhhcyhzaWduYWwpKSB7XG4gICAgICAgICAgICB0aGlzLmRlcGVuZGVuY2llcy5hZGQoc2lnbmFsKTtcbiAgICAgICAgICAgIGlmIChzaWduYWwgaW5zdGFuY2VvZiBDb21wdXRlZFNpZ25hbCkge1xuICAgICAgICAgICAgICAgIHRoaXMudXBkYXRlRGVwdGgoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJlbW92ZSBhIGRlcGVuZGVuY3kgZnJvbSB0aGlzIGNvbXB1dGF0aW9uXG4gICAgICovXG4gICAgcmVtb3ZlRGVwZW5kZW5jeShzaWduYWw6IFNpZ25hbDxhbnk+KTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmRlcGVuZGVuY2llcy5kZWxldGUoc2lnbmFsKSkge1xuICAgICAgICAgICAgdGhpcy51cGRhdGVEZXB0aCgpO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2xlYW4gdXAgY29tcHV0YXRpb24gcmVzb3VyY2VzXG4gICAgICovXG4gICAgZGlzcG9zZSgpOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMuZGlzcG9zZWQpIHJldHVybjtcblxuICAgICAgICB0aGlzLmRpc3Bvc2VkID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jbGVhckRlcGVuZGVuY2llcygpO1xuICAgICAgICB0aGlzLmRlcGVuZGVudHMuY2xlYXIoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBjb21wdXRhdGlvbiBpcyBkaXJ0eVxuICAgICAqL1xuICAgIGlzRGlydHkoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmRpcnR5O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENoZWNrIGlmIGNvbXB1dGF0aW9uIGhhcyBiZWVuIGRpc3Bvc2VkXG4gICAgICovXG4gICAgaXNEaXNwb3NlZCgpOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGlzcG9zZWQ7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQWRkIGEgZGVwZW5kZW50IGNvbXB1dGF0aW9uLCB3aGljaCB3aWxsIGJlIHJlY29tcHV0ZWQgd2hlbiB0aGlzIGNvbXB1dGF0aW9uIHVwZGF0ZXNcbiAgICAgKi9cbiAgICBnZXREZXB0aCgpOiBudW1iZXIge1xuICAgICAgICByZXR1cm4gdGhpcy5kZXB0aDtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBNYXJrIGNvbXB1dGF0aW9uIGFzIGRpcnR5IGFuZCBzY2hlZHVsZSB1cGRhdGVcbiAgICAgKi9cbiAgICBtYXJrRGlydHkoKTogdm9pZCB7XG5cbiAgICAgICAgaWYgKCF0aGlzLmRpc3Bvc2VkKSB7XG4gICAgICAgICAgICB0aGlzLmRpcnR5ID0gdHJ1ZTtcbiAgICAgICAgICAgIFVwZGF0ZVF1ZXVlLmdldEluc3RhbmNlKCkuc2NoZWR1bGUodGhpcyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDaGVjayBpZiBzaWduYWwgaXMgYSBkZXBlbmRlbmN5IG9mIHRoaXMgY29tcHV0YXRpb25cbiAgICAgKiBAcGFyYW0gc2lnbmFsXG4gICAgICovXG4gICAgaGFzU2lnbmFsKHNpZ25hbDogU2lnbmFsPGFueT4pOiBib29sZWFuIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGVwZW5kZW5jaWVzLmhhcyhzaWduYWwpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENsZWFyIGFsbCBkZXBlbmRlbmNpZXMgYW5kIHVwZGF0ZSBkZXB0aFxuICAgICAqL1xuICAgIHByb3RlY3RlZCBjbGVhckRlcGVuZGVuY2llcygpOiB2b2lkIHtcbiAgICAgICAgZm9yIChjb25zdCBkZXAgb2YgdGhpcy5kZXBlbmRlbmNpZXMpIHtcbiAgICAgICAgICAgIGRlcC5yZW1vdmVEZXBlbmRlbnQodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5kZXBlbmRlbmNpZXMuY2xlYXIoKTtcbiAgICAgICAgdGhpcy51cGRhdGVEZXB0aCgpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZSB0aGUgY29tcHV0YXRpb24ncyBkZXB0aCBpbiB0aGUgZGVwZW5kZW5jeSBncmFwaFxuICAgICAqL1xuICAgIHByb3RlY3RlZCB1cGRhdGVEZXB0aCgpOiB2b2lkIHtcbiAgICAgICAgY29uc3Qgb2xkRGVwdGggPSB0aGlzLmRlcHRoO1xuICAgICAgICBsZXQgbWF4RGVwdGggPSAwO1xuXG4gICAgICAgIGZvciAoY29uc3QgZGVwIG9mIHRoaXMuZGVwZW5kZW5jaWVzKSB7XG4gICAgICAgICAgICBpZiAoZGVwIGluc3RhbmNlb2YgQ29tcHV0ZWRTaWduYWwpIHtcbiAgICAgICAgICAgICAgICBtYXhEZXB0aCA9IE1hdGgubWF4KG1heERlcHRoLCBkZXAuZ2V0RGVwdGgoKSArIDEpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKG9sZERlcHRoICE9PSBtYXhEZXB0aCkge1xuICAgICAgICAgICAgdGhpcy5kZXB0aCA9IG1heERlcHRoO1xuICAgICAgICAgICAgLy8gUHJvcGFnYXRlIGRlcHRoIHVwZGF0ZSB0byBkZXBlbmRlbnRzXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGRlcGVuZGVudCBvZiB0aGlzLmRlcGVuZGVudHMpIHtcbiAgICAgICAgICAgICAgICBkZXBlbmRlbnQudXBkYXRlRGVwdGgoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/computation.ts\n");

/***/ }),

/***/ "./src/computed.ts":
/*!*************************!*\
  !*** ./src/computed.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computed: () => (/* binding */ computed)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Create a computed signal that derives its value from other signals\n */\nfunction computed(compute, options) {\n    return new _computedSignal__WEBPACK_IMPORTED_MODULE_0__.ComputedSignal(compute, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcHV0ZWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUc4QztBQUdsRDs7R0FFRztBQUNJLFNBQVMsUUFBUSxDQUNwQixPQUFnQixFQUNoQixPQUEwQjtJQUUxQixPQUFPLElBQUksMkRBQWMsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7QUFDaEQsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhdmF0aWpzL3NpZ25hbC8uL3NyYy9jb21wdXRlZC50cz84YWI5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWxPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IENvbXB1dGVkU2lnbmFsIH0gZnJvbSAnLi9jb21wdXRlZFNpZ25hbCc7XG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5cbi8qKlxuICogQ3JlYXRlIGEgY29tcHV0ZWQgc2lnbmFsIHRoYXQgZGVyaXZlcyBpdHMgdmFsdWUgZnJvbSBvdGhlciBzaWduYWxzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlZDxUPihcbiAgICBjb21wdXRlOiAoKSA9PiBULFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFQ+LFxuKTogU2lnbmFsPFQ+IHtcbiAgICByZXR1cm4gbmV3IENvbXB1dGVkU2lnbmFsKGNvbXB1dGUsIG9wdGlvbnMpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/computed.ts\n");

/***/ }),

/***/ "./src/computedSignal.ts":
/*!*******************************!*\
  !*** ./src/computedSignal.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComputedSignal: () => (/* binding */ ComputedSignal)\n/* harmony export */ });\n/* harmony import */ var _computation__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computation */ \"./src/computation.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n/**\n * Signal that derives its value from other signals\n *\n * @example\n * // Create base signals\n * const firstName = new Signal('John');\n * const lastName = new Signal('Doe');\n *\n * // Create a computed signal that depends on firstName and lastName\n * const fullName = new ComputedSignal(() => {\n *   return `${firstName.value} ${lastName.value}`;\n * });\n *\n * console.log(fullName.value); // Output: \"John Doe\"\n *\n * // When a dependency changes, the computed value updates automatically\n * firstName.value = 'Jane';\n * console.log(fullName.value); // Output: \"Jane Doe\"\n */\nclass ComputedSignal extends _signal__WEBPACK_IMPORTED_MODULE_0__.Signal {\n    /**\n     * Creates a new computed signal\n     * @param compute Function that derives the signal value\n     * @param options Configuration options for the signal\n     */\n    constructor(compute, options = {}) {\n        super(undefined, options);\n        this.computeFn = compute;\n        // Create an anonymous computation class instance\n        this.computation = new class extends _computation__WEBPACK_IMPORTED_MODULE_1__.Computation {\n            constructor(signal) {\n                super(signal.name);\n                this.signal = signal;\n            }\n            /**\n             * Recomputes the signal value when dependencies change\n             */\n            recompute() {\n                if (this.disposed)\n                    return;\n                const context = _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext.getInstance();\n                const prevComputation = context.getCurrentComputation();\n                context.setCurrentComputation(this);\n                // Prevent circular dependencies through effects\n                if (context.isInEffect()) {\n                    throw new _errors__WEBPACK_IMPORTED_MODULE_3__.CircularDependencyError(`Cannot create computed signal that depends on effects`);\n                }\n                try {\n                    // Check if any dependencies have been disposed\n                    for (const dep of this.dependencies) {\n                        if (dep.isDisposed()) {\n                            this.signal.dispose();\n                            throw new _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError('read from disposed dependency');\n                        }\n                    }\n                    // Compute new value and update if changed\n                    const newValue = this.signal.computeFn();\n                    if (!this.signal.equals(this.signal._value, newValue)) {\n                        this.signal._value = newValue;\n                        this.signal.notifyDependents();\n                    }\n                }\n                catch (error) {\n                    // Handle disposal errors\n                    if (error instanceof _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError) {\n                        this.signal.dispose();\n                    }\n                    throw error;\n                }\n                finally {\n                    // Restore previous computation context\n                    if (prevComputation) {\n                        context.setCurrentComputation(prevComputation);\n                    }\n                    this.dirty = false;\n                }\n            }\n        }(this);\n        // Initial computation\n        this.computation.recompute();\n    }\n    /**\n     * Gets the current value of the computed signal\n     */\n    get value() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError('read from');\n        }\n        // Verify dependencies are still valid\n        const dependencies = this.computation['dependencies'];\n        for (const dep of dependencies) {\n            if (dep.isDisposed()) {\n                this.dispose();\n                throw new _errors__WEBPACK_IMPORTED_MODULE_3__.SignalDisposedError('read from disposed dependency');\n            }\n        }\n        // Recompute if dependencies have changed\n        if (this.computation.isDirty()) {\n            this.computation.recompute();\n        }\n        // Track this signal as a dependency for other computations\n        this.trackDependency();\n        return this._value;\n    }\n    /**\n     * Computed signals cannot be set directly\n     */\n    set value(_) {\n        throw new Error('Cannot set the value of a computed signal');\n    }\n    /**\n     * Gets the depth of this signal in the dependency graph\n     */\n    getDepth() {\n        return this.computation.getDepth();\n    }\n    /**\n     * Cleans up the signal and its dependencies\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        super.dispose();\n        this.computation.dispose();\n        // Recursively dispose dependent computed signals\n        for (const dependent of this.dependents) {\n            // @ts-ignore\n            if (dependent instanceof ComputedSignal || dependent['signal'] instanceof ComputedSignal) {\n                // @ts-ignore\n                const signal = dependent instanceof ComputedSignal ? dependent : dependent['signal'];\n                signal.dispose();\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWE7Z0JBQ2IsTUFBTSxNQUFNLEdBQUcsU0FBUyxZQUFZLGNBQWMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUM7Z0JBQ3JGLE1BQU0sQ0FBQyxPQUFPLEVBQUUsQ0FBQztZQUNyQixDQUFDO1FBQ0wsQ0FBQztJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXMiOlsid2VicGFjazovL0BhdmF0aWpzL3NpZ25hbC8uL3NyYy9jb21wdXRlZFNpZ25hbC50cz9lZjE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuaW1wb3J0IHsgQ29tcHV0YXRpb24gfSBmcm9tICcuL2NvbXB1dGF0aW9uJztcbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgU2lnbmFsQ29udGV4dCB9IGZyb20gJy4vc2lnbmFsQ29udGV4dCc7XG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBDaXJjdWxhckRlcGVuZGVuY3lFcnJvciwgU2lnbmFsRGlzcG9zZWRFcnJvciB9IGZyb20gJy4vZXJyb3JzJztcblxuLyoqXG4gKiBTaWduYWwgdGhhdCBkZXJpdmVzIGl0cyB2YWx1ZSBmcm9tIG90aGVyIHNpZ25hbHNcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ3JlYXRlIGJhc2Ugc2lnbmFsc1xuICogY29uc3QgZmlyc3ROYW1lID0gbmV3IFNpZ25hbCgnSm9obicpO1xuICogY29uc3QgbGFzdE5hbWUgPSBuZXcgU2lnbmFsKCdEb2UnKTtcbiAqXG4gKiAvLyBDcmVhdGUgYSBjb21wdXRlZCBzaWduYWwgdGhhdCBkZXBlbmRzIG9uIGZpcnN0TmFtZSBhbmQgbGFzdE5hbWVcbiAqIGNvbnN0IGZ1bGxOYW1lID0gbmV3IENvbXB1dGVkU2lnbmFsKCgpID0+IHtcbiAqICAgcmV0dXJuIGAke2ZpcnN0TmFtZS52YWx1ZX0gJHtsYXN0TmFtZS52YWx1ZX1gO1xuICogfSk7XG4gKlxuICogY29uc29sZS5sb2coZnVsbE5hbWUudmFsdWUpOyAvLyBPdXRwdXQ6IFwiSm9obiBEb2VcIlxuICpcbiAqIC8vIFdoZW4gYSBkZXBlbmRlbmN5IGNoYW5nZXMsIHRoZSBjb21wdXRlZCB2YWx1ZSB1cGRhdGVzIGF1dG9tYXRpY2FsbHlcbiAqIGZpcnN0TmFtZS52YWx1ZSA9ICdKYW5lJztcbiAqIGNvbnNvbGUubG9nKGZ1bGxOYW1lLnZhbHVlKTsgLy8gT3V0cHV0OiBcIkphbmUgRG9lXCJcbiAqL1xuZXhwb3J0IGNsYXNzIENvbXB1dGVkU2lnbmFsPFQ+IGV4dGVuZHMgU2lnbmFsPFQ+IHtcblxuICAgIC8qKiBJbnRlcm5hbCBjb21wdXRhdGlvbiBpbnN0YW5jZSB0byBtYW5hZ2UgZGVwZW5kZW5jaWVzIGFuZCByZWNvbXB1dGF0aW9uICovXG4gICAgcHJpdmF0ZSByZWFkb25seSBjb21wdXRhdGlvbjogQ29tcHV0YXRpb247XG5cbiAgICAvKiogRnVuY3Rpb24gdGhhdCBjb21wdXRlcyB0aGUgZGVyaXZlZCB2YWx1ZSAqL1xuICAgIHByaXZhdGUgY29tcHV0ZUZuOiAoKSA9PiBUO1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBjb21wdXRlZCBzaWduYWxcbiAgICAgKiBAcGFyYW0gY29tcHV0ZSBGdW5jdGlvbiB0aGF0IGRlcml2ZXMgdGhlIHNpZ25hbCB2YWx1ZVxuICAgICAqIEBwYXJhbSBvcHRpb25zIENvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIHNpZ25hbFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGNvbXB1dGU6ICgpID0+IFQsIG9wdGlvbnM6IFNpZ25hbE9wdGlvbnM8VD4gPSB7fSkge1xuICAgICAgICBzdXBlcih1bmRlZmluZWQgYXMgVCwgb3B0aW9ucyk7XG4gICAgICAgIHRoaXMuY29tcHV0ZUZuID0gY29tcHV0ZTtcblxuICAgICAgICAvLyBDcmVhdGUgYW4gYW5vbnltb3VzIGNvbXB1dGF0aW9uIGNsYXNzIGluc3RhbmNlXG4gICAgICAgIHRoaXMuY29tcHV0YXRpb24gPSBuZXcgY2xhc3MgZXh0ZW5kcyBDb21wdXRhdGlvbiB7XG4gICAgICAgICAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNpZ25hbDogQ29tcHV0ZWRTaWduYWw8VD4pIHtcbiAgICAgICAgICAgICAgICBzdXBlcihzaWduYWwubmFtZSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogUmVjb21wdXRlcyB0aGUgc2lnbmFsIHZhbHVlIHdoZW4gZGVwZW5kZW5jaWVzIGNoYW5nZVxuICAgICAgICAgICAgICovXG4gICAgICAgICAgICByZWNvbXB1dGUoKTogdm9pZCB7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuZGlzcG9zZWQpIHJldHVybjtcblxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbnRleHQgPSBTaWduYWxDb250ZXh0LmdldEluc3RhbmNlKCk7XG4gICAgICAgICAgICAgICAgY29uc3QgcHJldkNvbXB1dGF0aW9uID0gY29udGV4dC5nZXRDdXJyZW50Q29tcHV0YXRpb24oKTtcbiAgICAgICAgICAgICAgICBjb250ZXh0LnNldEN1cnJlbnRDb21wdXRhdGlvbih0aGlzKTtcblxuICAgICAgICAgICAgICAgIC8vIFByZXZlbnQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIHRocm91Z2ggZWZmZWN0c1xuICAgICAgICAgICAgICAgIGlmIChjb250ZXh0LmlzSW5FZmZlY3QoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgQ2lyY3VsYXJEZXBlbmRlbmN5RXJyb3IoXG4gICAgICAgICAgICAgICAgICAgICAgICBgQ2Fubm90IGNyZWF0ZSBjb21wdXRlZCBzaWduYWwgdGhhdCBkZXBlbmRzIG9uIGVmZmVjdHNgLFxuICAgICAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIENoZWNrIGlmIGFueSBkZXBlbmRlbmNpZXMgaGF2ZSBiZWVuIGRpc3Bvc2VkXG4gICAgICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZGVwIG9mIHRoaXMuZGVwZW5kZW5jaWVzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZGVwLmlzRGlzcG9zZWQoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2lnbmFsLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU2lnbmFsRGlzcG9zZWRFcnJvcigncmVhZCBmcm9tIGRpc3Bvc2VkIGRlcGVuZGVuY3knKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgICAgIC8vIENvbXB1dGUgbmV3IHZhbHVlIGFuZCB1cGRhdGUgaWYgY2hhbmdlZFxuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdWYWx1ZSA9IHRoaXMuc2lnbmFsLmNvbXB1dGVGbigpO1xuICAgICAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2lnbmFsLmVxdWFscyh0aGlzLnNpZ25hbC5fdmFsdWUsIG5ld1ZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zaWduYWwuX3ZhbHVlID0gbmV3VmFsdWU7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnNpZ25hbC5ub3RpZnlEZXBlbmRlbnRzKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICAvLyBIYW5kbGUgZGlzcG9zYWwgZXJyb3JzXG4gICAgICAgICAgICAgICAgICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIFNpZ25hbERpc3Bvc2VkRXJyb3IpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2lnbmFsLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICAgICAgICAgICAgICB9IGZpbmFsbHkge1xuICAgICAgICAgICAgICAgICAgICAvLyBSZXN0b3JlIHByZXZpb3VzIGNvbXB1dGF0aW9uIGNvbnRleHRcbiAgICAgICAgICAgICAgICAgICAgaWYgKHByZXZDb21wdXRhdGlvbikge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29udGV4dC5zZXRDdXJyZW50Q29tcHV0YXRpb24ocHJldkNvbXB1dGF0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB0aGlzLmRpcnR5ID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KHRoaXMpO1xuICAgICAgICAvLyBJbml0aWFsIGNvbXB1dGF0aW9uXG4gICAgICAgIHRoaXMuY29tcHV0YXRpb24ucmVjb21wdXRlKCk7XG5cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBHZXRzIHRoZSBjdXJyZW50IHZhbHVlIG9mIHRoZSBjb21wdXRlZCBzaWduYWxcbiAgICAgKi9cbiAgICBvdmVycmlkZSBnZXQgdmFsdWUoKTogVCB7XG4gICAgICAgIGlmICh0aGlzLmRpc3Bvc2VkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgU2lnbmFsRGlzcG9zZWRFcnJvcigncmVhZCBmcm9tJyk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBWZXJpZnkgZGVwZW5kZW5jaWVzIGFyZSBzdGlsbCB2YWxpZFxuICAgICAgICBjb25zdCBkZXBlbmRlbmNpZXMgPSB0aGlzLmNvbXB1dGF0aW9uWydkZXBlbmRlbmNpZXMnXSBhcyBTZXQ8U2lnbmFsPGFueT4+O1xuICAgICAgICBmb3IgKGNvbnN0IGRlcCBvZiBkZXBlbmRlbmNpZXMpIHtcbiAgICAgICAgICAgIGlmIChkZXAuaXNEaXNwb3NlZCgpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kaXNwb3NlKCk7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFNpZ25hbERpc3Bvc2VkRXJyb3IoJ3JlYWQgZnJvbSBkaXNwb3NlZCBkZXBlbmRlbmN5Jyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBSZWNvbXB1dGUgaWYgZGVwZW5kZW5jaWVzIGhhdmUgY2hhbmdlZFxuICAgICAgICBpZiAodGhpcy5jb21wdXRhdGlvbi5pc0RpcnR5KCkpIHtcbiAgICAgICAgICAgIHRoaXMuY29tcHV0YXRpb24ucmVjb21wdXRlKCk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBUcmFjayB0aGlzIHNpZ25hbCBhcyBhIGRlcGVuZGVuY3kgZm9yIG90aGVyIGNvbXB1dGF0aW9uc1xuICAgICAgICB0aGlzLnRyYWNrRGVwZW5kZW5jeSgpO1xuICAgICAgICByZXR1cm4gdGhpcy5fdmFsdWU7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ29tcHV0ZWQgc2lnbmFscyBjYW5ub3QgYmUgc2V0IGRpcmVjdGx5XG4gICAgICovXG4gICAgb3ZlcnJpZGUgc2V0IHZhbHVlKF86IFQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3Qgc2V0IHRoZSB2YWx1ZSBvZiBhIGNvbXB1dGVkIHNpZ25hbCcpO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIEdldHMgdGhlIGRlcHRoIG9mIHRoaXMgc2lnbmFsIGluIHRoZSBkZXBlbmRlbmN5IGdyYXBoXG4gICAgICovXG4gICAgZ2V0RGVwdGgoKTogbnVtYmVyIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcHV0YXRpb24uZ2V0RGVwdGgoKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBDbGVhbnMgdXAgdGhlIHNpZ25hbCBhbmQgaXRzIGRlcGVuZGVuY2llc1xuICAgICAqL1xuICAgIG92ZXJyaWRlIGRpc3Bvc2UoKTogdm9pZCB7XG4gICAgICAgIGlmICh0aGlzLmRpc3Bvc2VkKSByZXR1cm47XG5cbiAgICAgICAgc3VwZXIuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLmNvbXB1dGF0aW9uLmRpc3Bvc2UoKTtcblxuICAgICAgICAvLyBSZWN1cnNpdmVseSBkaXNwb3NlIGRlcGVuZGVudCBjb21wdXRlZCBzaWduYWxzXG4gICAgICAgIGZvciAoY29uc3QgZGVwZW5kZW50IG9mIHRoaXMuZGVwZW5kZW50cykge1xuICAgICAgICAgICAgLy8gQHRzLWlnbm9yZVxuICAgICAgICAgICAgaWYgKGRlcGVuZGVudCBpbnN0YW5jZW9mIENvbXB1dGVkU2lnbmFsIHx8IGRlcGVuZGVudFsnc2lnbmFsJ10gaW5zdGFuY2VvZiBDb21wdXRlZFNpZ25hbCkge1xuICAgICAgICAgICAgICAgIC8vIEB0cy1pZ25vcmVcbiAgICAgICAgICAgICAgICBjb25zdCBzaWduYWwgPSBkZXBlbmRlbnQgaW5zdGFuY2VvZiBDb21wdXRlZFNpZ25hbCA/IGRlcGVuZGVudCA6IGRlcGVuZGVudFsnc2lnbmFsJ107XG4gICAgICAgICAgICAgICAgc2lnbmFsLmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/computedSignal.ts\n");

/***/ }),

/***/ "./src/createSignal.ts":
/*!*****************************!*\
  !*** ./src/createSignal.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSignal: () => (/* binding */ createSignal)\n/* harmony export */ });\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Create a new writable signal\n */\nfunction createSignal(initialValue, options) {\n    return new _signal__WEBPACK_IMPORTED_MODULE_0__.Signal(initialValue, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY3JlYXRlU2lnbmFsLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHOEI7QUFFbEM7O0dBRUc7QUFDSSxTQUFTLFlBQVksQ0FDeEIsWUFBZSxFQUNmLE9BQTBCO0lBRTFCLE9BQU8sSUFBSSwyQ0FBTSxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQztBQUM3QyxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGF2YXRpanMvc2lnbmFsLy4vc3JjL2NyZWF0ZVNpZ25hbC50cz9iODQ5Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWxPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcblxuLyoqXG4gKiBDcmVhdGUgYSBuZXcgd3JpdGFibGUgc2lnbmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVTaWduYWw8VD4oXG4gICAgaW5pdGlhbFZhbHVlOiBULFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFQ+LFxuKTogU2lnbmFsPFQ+IHtcbiAgICByZXR1cm4gbmV3IFNpZ25hbChpbml0aWFsVmFsdWUsIG9wdGlvbnMpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/createSignal.ts\n");

/***/ }),

/***/ "./src/debounced.ts":
/*!**************************!*\
  !*** ./src/debounced.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debounced: () => (/* binding */ debounced)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a debounced signal that updates its value after a specified delay\n * when the source signal changes.\n *\n * @param source Source signal to watch for changes\n * @param delay Time in milliseconds to wait before updating output\n * @param options Optional signal configuration\n *\n * @example\n * // Basic debouncing of rapid updates\n * const input = new Signal(\"\");\n * const debouncedInput = debounced(input, 300);\n *\n * input.value = \"h\";    // t=0ms\n * input.value = \"he\";   // t=100ms\n * input.value = \"hel\";  // t=200ms\n * input.value = \"hell\"; // t=250ms\n *\n * // debouncedInput.value will be \"hell\" at t=550ms\n *\n * @example\n * // Search input with debouncing\n * const searchQuery = new Signal(\"\");\n * const debouncedSearch = debounced(searchQuery, 500);\n *\n * effect(() => {\n *   // API call only happens 500ms after last keystroke\n *   fetchSearchResults(debouncedSearch.value);\n * });\n *\n * @example\n * // Form validation with debouncing\n * const formData = new Signal({ username: \"\", email: \"\" });\n * const debouncedForm = debounced(formData, 400, {\n *   equals: (a, b) => a.username === b.username && a.email === b.email\n * });\n *\n * effect(() => {\n *   // Validation runs 400ms after user stops typing\n *   validateForm(debouncedForm.value);\n * });\n */\nfunction debounced(source, delay, options) {\n    const output = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(source.value, options);\n    let timeoutId;\n    (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n        const value = source.value;\n        if (timeoutId)\n            clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => {\n            output.value = value;\n        }, delay);\n        return () => {\n            if (timeoutId)\n                clearTimeout(timeoutId);\n        };\n    });\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVib3VuY2VkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzBDO0FBRVo7QUFFbEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBeUNHO0FBQ0ksU0FBUyxTQUFTLENBQ3JCLE1BQWlCLEVBQ2pCLEtBQWEsRUFDYixPQUEwQjtJQUUxQixNQUFNLE1BQU0sR0FBRywyREFBWSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDbkQsSUFBSSxTQUFxQyxDQUFDO0lBRTFDLCtDQUFNLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLFNBQVM7WUFBRSxZQUFZLENBQUMsU0FBUyxDQUFDLENBQUM7UUFFdkMsU0FBUyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7WUFDeEIsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7UUFDekIsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBRVYsT0FBTyxHQUFHLEVBQUU7WUFDUixJQUFJLFNBQVM7Z0JBQUUsWUFBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQzNDLENBQUMsQ0FBQztJQUNOLENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxNQUFNLENBQUM7QUFDbEIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhdmF0aWpzL3NpZ25hbC8uL3NyYy9kZWJvdW5jZWQudHM/NWVjOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgU2lnbmFsT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBjcmVhdGVTaWduYWwgfSBmcm9tICcuL2NyZWF0ZVNpZ25hbCc7XG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBlZmZlY3QgfSBmcm9tICcuL2VmZmVjdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGRlYm91bmNlZCBzaWduYWwgdGhhdCB1cGRhdGVzIGl0cyB2YWx1ZSBhZnRlciBhIHNwZWNpZmllZCBkZWxheVxuICogd2hlbiB0aGUgc291cmNlIHNpZ25hbCBjaGFuZ2VzLlxuICpcbiAqIEBwYXJhbSBzb3VyY2UgU291cmNlIHNpZ25hbCB0byB3YXRjaCBmb3IgY2hhbmdlc1xuICogQHBhcmFtIGRlbGF5IFRpbWUgaW4gbWlsbGlzZWNvbmRzIHRvIHdhaXQgYmVmb3JlIHVwZGF0aW5nIG91dHB1dFxuICogQHBhcmFtIG9wdGlvbnMgT3B0aW9uYWwgc2lnbmFsIGNvbmZpZ3VyYXRpb25cbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQmFzaWMgZGVib3VuY2luZyBvZiByYXBpZCB1cGRhdGVzXG4gKiBjb25zdCBpbnB1dCA9IG5ldyBTaWduYWwoXCJcIik7XG4gKiBjb25zdCBkZWJvdW5jZWRJbnB1dCA9IGRlYm91bmNlZChpbnB1dCwgMzAwKTtcbiAqXG4gKiBpbnB1dC52YWx1ZSA9IFwiaFwiOyAgICAvLyB0PTBtc1xuICogaW5wdXQudmFsdWUgPSBcImhlXCI7ICAgLy8gdD0xMDBtc1xuICogaW5wdXQudmFsdWUgPSBcImhlbFwiOyAgLy8gdD0yMDBtc1xuICogaW5wdXQudmFsdWUgPSBcImhlbGxcIjsgLy8gdD0yNTBtc1xuICpcbiAqIC8vIGRlYm91bmNlZElucHV0LnZhbHVlIHdpbGwgYmUgXCJoZWxsXCIgYXQgdD01NTBtc1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBTZWFyY2ggaW5wdXQgd2l0aCBkZWJvdW5jaW5nXG4gKiBjb25zdCBzZWFyY2hRdWVyeSA9IG5ldyBTaWduYWwoXCJcIik7XG4gKiBjb25zdCBkZWJvdW5jZWRTZWFyY2ggPSBkZWJvdW5jZWQoc2VhcmNoUXVlcnksIDUwMCk7XG4gKlxuICogZWZmZWN0KCgpID0+IHtcbiAqICAgLy8gQVBJIGNhbGwgb25seSBoYXBwZW5zIDUwMG1zIGFmdGVyIGxhc3Qga2V5c3Ryb2tlXG4gKiAgIGZldGNoU2VhcmNoUmVzdWx0cyhkZWJvdW5jZWRTZWFyY2gudmFsdWUpO1xuICogfSk7XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEZvcm0gdmFsaWRhdGlvbiB3aXRoIGRlYm91bmNpbmdcbiAqIGNvbnN0IGZvcm1EYXRhID0gbmV3IFNpZ25hbCh7IHVzZXJuYW1lOiBcIlwiLCBlbWFpbDogXCJcIiB9KTtcbiAqIGNvbnN0IGRlYm91bmNlZEZvcm0gPSBkZWJvdW5jZWQoZm9ybURhdGEsIDQwMCwge1xuICogICBlcXVhbHM6IChhLCBiKSA9PiBhLnVzZXJuYW1lID09PSBiLnVzZXJuYW1lICYmIGEuZW1haWwgPT09IGIuZW1haWxcbiAqIH0pO1xuICpcbiAqIGVmZmVjdCgoKSA9PiB7XG4gKiAgIC8vIFZhbGlkYXRpb24gcnVucyA0MDBtcyBhZnRlciB1c2VyIHN0b3BzIHR5cGluZ1xuICogICB2YWxpZGF0ZUZvcm0oZGVib3VuY2VkRm9ybS52YWx1ZSk7XG4gKiB9KTtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlYm91bmNlZDxUPihcbiAgICBzb3VyY2U6IFNpZ25hbDxUPixcbiAgICBkZWxheTogbnVtYmVyLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFQ+LFxuKTogU2lnbmFsPFQ+IHtcbiAgICBjb25zdCBvdXRwdXQgPSBjcmVhdGVTaWduYWwoc291cmNlLnZhbHVlLCBvcHRpb25zKTtcbiAgICBsZXQgdGltZW91dElkOiBOb2RlSlMuVGltZW91dCB8IHVuZGVmaW5lZDtcblxuICAgIGVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHZhbHVlID0gc291cmNlLnZhbHVlO1xuICAgICAgICBpZiAodGltZW91dElkKSBjbGVhclRpbWVvdXQodGltZW91dElkKTtcblxuICAgICAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIG91dHB1dC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9LCBkZWxheSk7XG5cbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICAgIGlmICh0aW1lb3V0SWQpIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICB9O1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIG91dHB1dDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/debounced.ts\n");

/***/ }),

/***/ "./src/debug.ts":
/*!**********************!*\
  !*** ./src/debug.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   debug: () => (/* binding */ debug)\n/* harmony export */ });\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Debug utility to track signal updates\n */\nfunction debug(signal, name) {\n    (0,_effect__WEBPACK_IMPORTED_MODULE_0__.effect)(() => {\n        console.log(`[Signal Debug] ${name}:`, signal.value);\n    }, `debug-${name}`);\n    return signal;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGVidWcudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUc4QjtBQUVsQzs7R0FFRztBQUNJLFNBQVMsS0FBSyxDQUFJLE1BQWlCLEVBQUUsSUFBWTtJQUNwRCwrQ0FBTSxDQUFDLEdBQUcsRUFBRTtRQUNSLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLElBQUksR0FBRyxFQUFFLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN6RCxDQUFDLEVBQUUsU0FBUyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0lBQ3BCLE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvZGVidWcudHM/NmIzMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuaW1wb3J0IHsgZWZmZWN0IH0gZnJvbSAnLi9lZmZlY3QnO1xuXG4vKipcbiAqIERlYnVnIHV0aWxpdHkgdG8gdHJhY2sgc2lnbmFsIHVwZGF0ZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlYnVnPFQ+KHNpZ25hbDogU2lnbmFsPFQ+LCBuYW1lOiBzdHJpbmcpOiBTaWduYWw8VD4ge1xuICAgIGVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnNvbGUubG9nKGBbU2lnbmFsIERlYnVnXSAke25hbWV9OmAsIHNpZ25hbC52YWx1ZSk7XG4gICAgfSwgYGRlYnVnLSR7bmFtZX1gKTtcbiAgICByZXR1cm4gc2lnbmFsO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/debug.ts\n");

/***/ }),

/***/ "./src/effect.ts":
/*!***********************!*\
  !*** ./src/effect.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EffectImpl: () => (/* binding */ EffectImpl),\n/* harmony export */   effect: () => (/* binding */ effect)\n/* harmony export */ });\n/* harmony import */ var _computation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computation */ \"./src/computation.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Implementation of reactive effects that automatically track and respond to signal changes.\n * Effects are used to perform side effects in response to reactive updates.\n *\n * @example\n * // Basic effect usage\n * const count = new Signal(0);\n * const dispose = effect(() => {\n *   console.log(`Count changed to: ${count.value}`);\n * });\n * count.value = 1; // Logs: \"Count changed to: 1\"\n * dispose(); // Cleanup effect\n *\n * @example\n * // Effect with cleanup\n * const visible = new Signal(true);\n * const dispose = effect(() => {\n *   if (visible.value) {\n *     const element = document.createElement('div');\n *     document.body.appendChild(element);\n *     // Return cleanup function\n *     return () => {\n *       document.body.removeChild(element);\n *     };\n *   }\n * });\n *\n * @example\n * // Named effect for debugging\n * const timer = new Signal(0);\n * const dispose = effect(() => {\n *   console.log(`Timer: ${timer.value}`);\n * }, 'timerLogger');\n *\n * @example\n * // Effect with multiple dependencies\n * const firstName = new Signal('John');\n * const lastName = new Signal('Doe');\n * const dispose = effect(() => {\n *   console.log(`Name changed to: ${firstName.value} ${lastName.value}`);\n * });\n *\n * @example\n * // Effect with error handling\n * const data = new Signal<string | Error>(null);\n * const dispose = effect(() => {\n *   try {\n *     if (data.value instanceof Error) {\n *       console.error('Error:', data.value);\n *     } else {\n *       console.log('Data:', data.value);\n *     }\n *   } catch (error) {\n *     console.error('Effect error:', error);\n *   }\n * });\n */\nclass EffectImpl {\n    /**\n     * Creates a new effect instance\n     *\n     * @param fn - The effect function that may return a cleanup function\n     * @param name - Optional name for debugging purposes\n     */\n    constructor(fn, name) {\n        /**\n         * Flag indicating whether the effect has been disposed\n         */\n        this.disposed = false;\n        this.computation = new class extends _computation__WEBPACK_IMPORTED_MODULE_0__.Computation {\n            // @ts-ignore\n            constructor(effect, fn) {\n                super(name);\n                this.effect = effect;\n                this.fn = fn;\n            }\n            /**\n             * Recomputes the effect when dependencies change\n             * Handles proper context management and error boundaries\n             */\n            recompute() {\n                if (this.disposed)\n                    return;\n                const context = _signalContext__WEBPACK_IMPORTED_MODULE_1__.SignalContext.getInstance();\n                context.pushComputation(this);\n                try {\n                    context.pushComputation(this);\n                    context.registerEffect(this.effect);\n                    this.effect.runEffect();\n                }\n                finally {\n                    context.unregisterEffect(this.effect);\n                    context.popComputation();\n                    this.dirty = false;\n                }\n            }\n        }(this, fn);\n        // Initial computation\n        this.computation.recompute();\n    }\n    /**\n     * Disposes of the effect, running cleanup and preventing further executions\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        if (this.cleanup) {\n            try {\n                this.cleanup();\n            }\n            catch (error) {\n                console.error('Error in effect cleanup:', error);\n            }\n        }\n        this.computation.dispose();\n    }\n    /**\n     * Executes the effect function and manages cleanup\n     * Handles error boundaries for both effect and cleanup execution\n     */\n    runEffect() {\n        if (this.disposed)\n            return;\n        // Run cleanup from previous execution\n        if (this.cleanup) {\n            try {\n                this.cleanup();\n            }\n            catch (error) {\n                console.error('Error in effect cleanup:', error);\n            }\n        }\n        try {\n            // @ts-ignore - We know this exists from the constructor\n            this.cleanup = this.computation['fn']();\n        }\n        catch (error) {\n            console.error('Error in effect:', error);\n            throw error;\n        }\n    }\n}\n/**\n * Creates a new effect that automatically tracks and responds to signal changes\n *\n * @param fn - Effect function that may return a cleanup function\n * @param name - Optional name for debugging purposes\n * @returns A disposable object to cleanup the effect\n *\n * @example\n * // DOM manipulation effect\n * const isVisible = new Signal(true);\n * const dispose = effect(() => {\n *   const element = document.querySelector('.target');\n *   element.style.display = isVisible.value ? 'block' : 'none';\n * });\n *\n * @example\n * // Effect with async operations\n * const userId = new Signal<number | null>(null);\n * const dispose = effect(() => {\n *   const id = userId.value;\n *   if (id !== null) {\n *     let cancelled = false;\n *     fetchUserData(id).then(data => {\n *       if (!cancelled) {\n *         // Handle data\n *       }\n *     });\n *     return () => {\n *       cancelled = true;\n *     };\n *   }\n * });\n */\nfunction effect(fn, name) {\n    return new EffectImpl(fn, name);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/effect.ts\n");

/***/ }),

/***/ "./src/errors.ts":
/*!***********************!*\
  !*** ./src/errors.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CircularDependencyError: () => (/* binding */ CircularDependencyError),\n/* harmony export */   SignalDisposedError: () => (/* binding */ SignalDisposedError)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Disposed signal operations\n */\nclass SignalDisposedError extends Error {\n    constructor(operation) {\n        super(`Cannot ${operation} a disposed signal`);\n        this.name = 'SignalDisposedError';\n    }\n}\n/**\n * Circular dependency detection\n */\nclass CircularDependencyError extends Error {\n    constructor(signalName) {\n        super(`Circular dependency detected${signalName ? ` in signal \"${signalName}\"` : ''}`);\n        this.name = 'CircularDependencyError';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZXJyb3JzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHSjs7R0FFRztBQUNJLE1BQU0sbUJBQW9CLFNBQVEsS0FBSztJQUMxQyxZQUFZLFNBQWlCO1FBQ3pCLEtBQUssQ0FBQyxVQUFVLFNBQVMsb0JBQW9CLENBQUMsQ0FBQztRQUMvQyxJQUFJLENBQUMsSUFBSSxHQUFHLHFCQUFxQixDQUFDO0lBQ3RDLENBQUM7Q0FDSjtBQUVEOztHQUVHO0FBQ0ksTUFBTSx1QkFBd0IsU0FBUSxLQUFLO0lBQzlDLFlBQVksVUFBbUI7UUFDM0IsS0FBSyxDQUFDLCtCQUErQixVQUFVLENBQUMsQ0FBQyxDQUFDLGVBQWUsVUFBVSxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDdkYsSUFBSSxDQUFDLElBQUksR0FBRyx5QkFBeUIsQ0FBQztJQUMxQyxDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvZXJyb3JzLnRzPzg5MTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cblxuLyoqXG4gKiBEaXNwb3NlZCBzaWduYWwgb3BlcmF0aW9uc1xuICovXG5leHBvcnQgY2xhc3MgU2lnbmFsRGlzcG9zZWRFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihvcGVyYXRpb246IHN0cmluZykge1xuICAgICAgICBzdXBlcihgQ2Fubm90ICR7b3BlcmF0aW9ufSBhIGRpc3Bvc2VkIHNpZ25hbGApO1xuICAgICAgICB0aGlzLm5hbWUgPSAnU2lnbmFsRGlzcG9zZWRFcnJvcic7XG4gICAgfVxufVxuXG4vKipcbiAqIENpcmN1bGFyIGRlcGVuZGVuY3kgZGV0ZWN0aW9uXG4gKi9cbmV4cG9ydCBjbGFzcyBDaXJjdWxhckRlcGVuZGVuY3lFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihzaWduYWxOYW1lPzogc3RyaW5nKSB7XG4gICAgICAgIHN1cGVyKGBDaXJjdWxhciBkZXBlbmRlbmN5IGRldGVjdGVkJHtzaWduYWxOYW1lID8gYCBpbiBzaWduYWwgXCIke3NpZ25hbE5hbWV9XCJgIDogJyd9YCk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdDaXJjdWxhckRlcGVuZGVuY3lFcnJvcic7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/errors.ts\n");

/***/ }),

/***/ "./src/filtered.ts":
/*!*************************!*\
  !*** ./src/filtered.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   filtered: () => (/* binding */ filtered)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a filtered signal that only updates when the predicate returns true.\n * The output signal follows the source signal's values but only changes when\n * the new value satisfies the given predicate.\n *\n * @param source The input signal to filter\n * @param predicate Function that determines if a value should pass through\n * @param options Optional configuration for the output signal\n * @returns A new signal that only updates when predicate returns true\n *\n * @example\n * const numbers = new Signal(0);\n * const evenNumbers = filtered(numbers, n => n % 2 === 0);\n * numbers.value = 1; // evenNumbers remains 0\n * numbers.value = 2; // evenNumbers updates to 2\n */\nfunction filtered(source, predicate, options) {\n    const output = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(source.value, options);\n    (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n        const value = source.value;\n        if (predicate(value)) {\n            output.value = value;\n        }\n    });\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZmlsdGVyZWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHMEM7QUFFWjtBQUVsQzs7Ozs7Ozs7Ozs7Ozs7O0dBZUc7QUFDSSxTQUFTLFFBQVEsQ0FDcEIsTUFBaUIsRUFDakIsU0FBZ0MsRUFDaEMsT0FBMEI7SUFFMUIsTUFBTSxNQUFNLEdBQUcsMkRBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRW5ELCtDQUFNLENBQUMsR0FBRyxFQUFFO1FBQ1IsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixJQUFJLFNBQVMsQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDO1lBQ25CLE1BQU0sQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1FBQ3pCLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvZmlsdGVyZWQudHM/OWQwZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgU2lnbmFsT3B0aW9ucyB9IGZyb20gJy4vaW50ZXJmYWNlcyc7XG5pbXBvcnQgeyBjcmVhdGVTaWduYWwgfSBmcm9tICcuL2NyZWF0ZVNpZ25hbCc7XG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBlZmZlY3QgfSBmcm9tICcuL2VmZmVjdCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZpbHRlcmVkIHNpZ25hbCB0aGF0IG9ubHkgdXBkYXRlcyB3aGVuIHRoZSBwcmVkaWNhdGUgcmV0dXJucyB0cnVlLlxuICogVGhlIG91dHB1dCBzaWduYWwgZm9sbG93cyB0aGUgc291cmNlIHNpZ25hbCdzIHZhbHVlcyBidXQgb25seSBjaGFuZ2VzIHdoZW5cbiAqIHRoZSBuZXcgdmFsdWUgc2F0aXNmaWVzIHRoZSBnaXZlbiBwcmVkaWNhdGUuXG4gKlxuICogQHBhcmFtIHNvdXJjZSBUaGUgaW5wdXQgc2lnbmFsIHRvIGZpbHRlclxuICogQHBhcmFtIHByZWRpY2F0ZSBGdW5jdGlvbiB0aGF0IGRldGVybWluZXMgaWYgYSB2YWx1ZSBzaG91bGQgcGFzcyB0aHJvdWdoXG4gKiBAcGFyYW0gb3B0aW9ucyBPcHRpb25hbCBjb25maWd1cmF0aW9uIGZvciB0aGUgb3V0cHV0IHNpZ25hbFxuICogQHJldHVybnMgQSBuZXcgc2lnbmFsIHRoYXQgb25seSB1cGRhdGVzIHdoZW4gcHJlZGljYXRlIHJldHVybnMgdHJ1ZVxuICpcbiAqIEBleGFtcGxlXG4gKiBjb25zdCBudW1iZXJzID0gbmV3IFNpZ25hbCgwKTtcbiAqIGNvbnN0IGV2ZW5OdW1iZXJzID0gZmlsdGVyZWQobnVtYmVycywgbiA9PiBuICUgMiA9PT0gMCk7XG4gKiBudW1iZXJzLnZhbHVlID0gMTsgLy8gZXZlbk51bWJlcnMgcmVtYWlucyAwXG4gKiBudW1iZXJzLnZhbHVlID0gMjsgLy8gZXZlbk51bWJlcnMgdXBkYXRlcyB0byAyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaWx0ZXJlZDxUPihcbiAgICBzb3VyY2U6IFNpZ25hbDxUPixcbiAgICBwcmVkaWNhdGU6ICh2YWx1ZTogVCkgPT4gYm9vbGVhbixcbiAgICBvcHRpb25zPzogU2lnbmFsT3B0aW9uczxUPixcbik6IFNpZ25hbDxUPiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gY3JlYXRlU2lnbmFsKHNvdXJjZS52YWx1ZSwgb3B0aW9ucyk7XG5cbiAgICBlZmZlY3QoKCkgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHNvdXJjZS52YWx1ZTtcbiAgICAgICAgaWYgKHByZWRpY2F0ZSh2YWx1ZSkpIHtcbiAgICAgICAgICAgIG91dHB1dC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/filtered.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncSignal: () => (/* reexport safe */ _asyncSignal__WEBPACK_IMPORTED_MODULE_22__.AsyncSignal),\n/* harmony export */   CircularDependencyError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_20__.CircularDependencyError),\n/* harmony export */   Computation: () => (/* reexport safe */ _computation__WEBPACK_IMPORTED_MODULE_5__.Computation),\n/* harmony export */   ComputedSignal: () => (/* reexport safe */ _computedSignal__WEBPACK_IMPORTED_MODULE_6__.ComputedSignal),\n/* harmony export */   EffectImpl: () => (/* reexport safe */ _effect__WEBPACK_IMPORTED_MODULE_18__.EffectImpl),\n/* harmony export */   LocalStorageProvider: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.LocalStorageProvider),\n/* harmony export */   MemoryStorageProvider: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.MemoryStorageProvider),\n/* harmony export */   QueueSignal: () => (/* reexport safe */ _queue__WEBPACK_IMPORTED_MODULE_23__.QueueSignal),\n/* harmony export */   SessionStorageProvider: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.SessionStorageProvider),\n/* harmony export */   Signal: () => (/* reexport safe */ _signal__WEBPACK_IMPORTED_MODULE_2__.Signal),\n/* harmony export */   SignalContext: () => (/* reexport safe */ _signalContext__WEBPACK_IMPORTED_MODULE_19__.SignalContext),\n/* harmony export */   SignalDisposedError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_20__.SignalDisposedError),\n/* harmony export */   SignalMonitor: () => (/* reexport safe */ _signalMonitor__WEBPACK_IMPORTED_MODULE_3__.SignalMonitor),\n/* harmony export */   UpdateQueue: () => (/* reexport safe */ _updateQueue__WEBPACK_IMPORTED_MODULE_16__.UpdateQueue),\n/* harmony export */   asyncSignal: () => (/* reexport safe */ _asyncSignal__WEBPACK_IMPORTED_MODULE_22__.asyncSignal),\n/* harmony export */   batch: () => (/* reexport safe */ _batch__WEBPACK_IMPORTED_MODULE_0__.batch),\n/* harmony export */   combine: () => (/* reexport safe */ _combine__WEBPACK_IMPORTED_MODULE_1__.combine),\n/* harmony export */   computed: () => (/* reexport safe */ _computed__WEBPACK_IMPORTED_MODULE_8__.computed),\n/* harmony export */   createQueueSignal: () => (/* reexport safe */ _queue__WEBPACK_IMPORTED_MODULE_23__.createQueueSignal),\n/* harmony export */   createSignal: () => (/* reexport safe */ _createSignal__WEBPACK_IMPORTED_MODULE_7__.createSignal),\n/* harmony export */   debounced: () => (/* reexport safe */ _debounced__WEBPACK_IMPORTED_MODULE_10__.debounced),\n/* harmony export */   debug: () => (/* reexport safe */ _debug__WEBPACK_IMPORTED_MODULE_12__.debug),\n/* harmony export */   defaultEquals: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.defaultEquals),\n/* harmony export */   effect: () => (/* reexport safe */ _effect__WEBPACK_IMPORTED_MODULE_18__.effect),\n/* harmony export */   filtered: () => (/* reexport safe */ _filtered__WEBPACK_IMPORTED_MODULE_11__.filtered),\n/* harmony export */   getSignalDepth: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.getSignalDepth),\n/* harmony export */   hasCircularDependency: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.hasCircularDependency),\n/* harmony export */   isSignal: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.isSignal),\n/* harmony export */   map: () => (/* reexport safe */ _map__WEBPACK_IMPORTED_MODULE_9__.map),\n/* harmony export */   peek: () => (/* reexport safe */ _peek__WEBPACK_IMPORTED_MODULE_14__.peek),\n/* harmony export */   persisted: () => (/* reexport safe */ _persisted__WEBPACK_IMPORTED_MODULE_21__.persisted),\n/* harmony export */   resetSignalSystem: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.resetSignalSystem),\n/* harmony export */   serializeSignal: () => (/* reexport safe */ _utility__WEBPACK_IMPORTED_MODULE_24__.serializeSignal),\n/* harmony export */   threshold: () => (/* reexport safe */ _threshold__WEBPACK_IMPORTED_MODULE_13__.threshold),\n/* harmony export */   throttled: () => (/* reexport safe */ _throttled__WEBPACK_IMPORTED_MODULE_17__.throttled),\n/* harmony export */   validated: () => (/* reexport safe */ _validated__WEBPACK_IMPORTED_MODULE_4__.validated),\n/* harmony export */   withHistory: () => (/* reexport safe */ _withHistory__WEBPACK_IMPORTED_MODULE_15__.withHistory)\n/* harmony export */ });\n/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./batch */ \"./src/batch.ts\");\n/* harmony import */ var _combine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./combine */ \"./src/combine.ts\");\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _signalMonitor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./signalMonitor */ \"./src/signalMonitor.ts\");\n/* harmony import */ var _validated__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validated */ \"./src/validated.ts\");\n/* harmony import */ var _computation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./computation */ \"./src/computation.ts\");\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/* harmony import */ var _map__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./map */ \"./src/map.ts\");\n/* harmony import */ var _debounced__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./debounced */ \"./src/debounced.ts\");\n/* harmony import */ var _filtered__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./filtered */ \"./src/filtered.ts\");\n/* harmony import */ var _debug__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./debug */ \"./src/debug.ts\");\n/* harmony import */ var _threshold__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./threshold */ \"./src/threshold.ts\");\n/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./peek */ \"./src/peek.ts\");\n/* harmony import */ var _withHistory__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./withHistory */ \"./src/withHistory.ts\");\n/* harmony import */ var _updateQueue__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./updateQueue */ \"./src/updateQueue.ts\");\n/* harmony import */ var _throttled__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./throttled */ \"./src/throttled.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/* harmony import */ var _persisted__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./persisted */ \"./src/persisted.ts\");\n/* harmony import */ var _asyncSignal__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./asyncSignal */ \"./src/asyncSignal.ts\");\n/* harmony import */ var _queue__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./queue */ \"./src/queue.ts\");\n/* harmony import */ var _utility__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./utility */ \"./src/utility.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7SUFLSTtBQUU0QjtBQUNJO0FBQ0Y7QUFDYztBQUNSO0FBQ0k7QUFDTTtBQUNKO0FBQ1I7QUFDVjtBQUNZO0FBQ0Y7QUFDTjtBQUNRO0FBQ1Y7QUFDYztBQUNBO0FBQ0o7QUFDTTtBQUNFO0FBQ3dCO0FBT25EO0FBUVM7QUFDTjtBQUVLO0FBQ0giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvaW5kZXgudHM/ZmZiNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuZXhwb3J0IHsgYmF0Y2ggfSBmcm9tICcuL2JhdGNoJztcbmV4cG9ydCB7IGNvbWJpbmUgfSBmcm9tICcuL2NvbWJpbmUnO1xuZXhwb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuZXhwb3J0IHsgU2lnbmFsTW9uaXRvciB9IGZyb20gJy4vc2lnbmFsTW9uaXRvcic7XG5leHBvcnQgeyB2YWxpZGF0ZWQgfSBmcm9tICcuL3ZhbGlkYXRlZCc7XG5leHBvcnQgeyBDb21wdXRhdGlvbiB9IGZyb20gJy4vY29tcHV0YXRpb24nO1xuZXhwb3J0IHsgQ29tcHV0ZWRTaWduYWwgfSBmcm9tICcuL2NvbXB1dGVkU2lnbmFsJztcbmV4cG9ydCB7IGNyZWF0ZVNpZ25hbCB9IGZyb20gJy4vY3JlYXRlU2lnbmFsJztcbmV4cG9ydCB7IGNvbXB1dGVkIH0gZnJvbSAnLi9jb21wdXRlZCc7XG5leHBvcnQgeyBtYXAgfSBmcm9tICcuL21hcCc7XG5leHBvcnQgeyBkZWJvdW5jZWQgfSBmcm9tICcuL2RlYm91bmNlZCc7XG5leHBvcnQgeyBmaWx0ZXJlZCB9IGZyb20gJy4vZmlsdGVyZWQnO1xuZXhwb3J0IHsgZGVidWcgfSBmcm9tICcuL2RlYnVnJztcbmV4cG9ydCB7IHRocmVzaG9sZCB9IGZyb20gJy4vdGhyZXNob2xkJztcbmV4cG9ydCB7IHBlZWsgfSBmcm9tICcuL3BlZWsnO1xuZXhwb3J0IHsgd2l0aEhpc3RvcnkgfSBmcm9tICcuL3dpdGhIaXN0b3J5JztcbmV4cG9ydCB7IFVwZGF0ZVF1ZXVlIH0gZnJvbSAnLi91cGRhdGVRdWV1ZSc7XG5leHBvcnQgeyB0aHJvdHRsZWQgfSBmcm9tICcuL3Rocm90dGxlZCc7XG5leHBvcnQgeyBlZmZlY3QsIEVmZmVjdEltcGwgfSBmcm9tICcuL2VmZmVjdCc7XG5leHBvcnQgeyBTaWduYWxDb250ZXh0IH0gZnJvbSAnLi9zaWduYWxDb250ZXh0JztcbmV4cG9ydCB7IFNpZ25hbERpc3Bvc2VkRXJyb3IsIENpcmN1bGFyRGVwZW5kZW5jeUVycm9yIH0gZnJvbSAnLi9lcnJvcnMnO1xuZXhwb3J0IHtcbiAgICBwZXJzaXN0ZWQsXG4gICAgTG9jYWxTdG9yYWdlUHJvdmlkZXIsXG4gICAgU2Vzc2lvblN0b3JhZ2VQcm92aWRlcixcbiAgICBNZW1vcnlTdG9yYWdlUHJvdmlkZXIsXG5cbn0gZnJvbSAnLi9wZXJzaXN0ZWQnO1xuXG5leHBvcnQgdHlwZSB7XG4gICAgU3RvcmFnZVByb3ZpZGVyLFxuICAgIFBlcnNpc3RlZFNpZ25hbFN0b3JhZ2UsXG4gICAgUGVyc2lzdGVkU2lnbmFsU2lnbmFsT3B0aW9ucyxcbn0gZnJvbSAnLi9wZXJzaXN0ZWQnO1xuXG5leHBvcnQgKiBmcm9tICcuL2FzeW5jU2lnbmFsJztcbmV4cG9ydCAqIGZyb20gJy4vcXVldWUnO1xuXG5leHBvcnQgKiBmcm9tICcuL2ludGVyZmFjZXMnO1xuZXhwb3J0ICogZnJvbSAnLi91dGlsaXR5JztcblxuXG5cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/map.ts":
/*!********************!*\
  !*** ./src/map.ts ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   map: () => (/* binding */ map)\n/* harmony export */ });\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Creates a new Signal that transforms the value of a source Signal using a mapping function.\n * The resulting Signal updates automatically when the source Signal changes.\n *\n * @param source The input Signal to transform\n * @param transform Function that converts source value type T to output type U\n * @param options Optional configuration for the resulting Signal\n * @returns A new Signal containing the transformed value\n *\n *\n * @example\n * // Basic transformation of primitive values\n * const count = new Signal(5);\n * const doubled = map(count, n => n * 2);\n * console.log(doubled.value); // 10\n * count.value = 10;\n * console.log(doubled.value); // 20\n *\n * @example\n * // Transforming arrays\n * const numbers = new Signal([1, 2, 3]);\n * const doubled = map(numbers, nums => nums.map(n => n * 2));\n * console.log(doubled.value); // [2, 4, 6]\n *\n * @example\n * // Transforming objects with custom options\n * const user = new Signal({ name: 'John', age: 30 });\n * const userSummary = map(\n *   user,\n *   u => `${u.name} is ${u.age} years old`,\n *   { name: 'userSummary' }\n * );\n * console.log(userSummary.value); // \"John is 30 years old\"\n */\nfunction map(source, transform, options) {\n    return (0,_computed__WEBPACK_IMPORTED_MODULE_0__.computed)(() => transform(source.value), options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWFwLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0lBS0k7QUFHa0M7QUFHdEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWlDRztBQUNJLFNBQVMsR0FBRyxDQUNmLE1BQWlCLEVBQ2pCLFNBQTBCLEVBQzFCLE9BQTBCO0lBRTFCLE9BQU8sbURBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQzVELENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvbWFwLnRzPzI4YTQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgY29tcHV0ZWQgfSBmcm9tICcuL2NvbXB1dGVkJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcblxuLyoqXG4gKiBDcmVhdGVzIGEgbmV3IFNpZ25hbCB0aGF0IHRyYW5zZm9ybXMgdGhlIHZhbHVlIG9mIGEgc291cmNlIFNpZ25hbCB1c2luZyBhIG1hcHBpbmcgZnVuY3Rpb24uXG4gKiBUaGUgcmVzdWx0aW5nIFNpZ25hbCB1cGRhdGVzIGF1dG9tYXRpY2FsbHkgd2hlbiB0aGUgc291cmNlIFNpZ25hbCBjaGFuZ2VzLlxuICpcbiAqIEBwYXJhbSBzb3VyY2UgVGhlIGlucHV0IFNpZ25hbCB0byB0cmFuc2Zvcm1cbiAqIEBwYXJhbSB0cmFuc2Zvcm0gRnVuY3Rpb24gdGhhdCBjb252ZXJ0cyBzb3VyY2UgdmFsdWUgdHlwZSBUIHRvIG91dHB1dCB0eXBlIFVcbiAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gZm9yIHRoZSByZXN1bHRpbmcgU2lnbmFsXG4gKiBAcmV0dXJucyBBIG5ldyBTaWduYWwgY29udGFpbmluZyB0aGUgdHJhbnNmb3JtZWQgdmFsdWVcbiAqXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIEJhc2ljIHRyYW5zZm9ybWF0aW9uIG9mIHByaW1pdGl2ZSB2YWx1ZXNcbiAqIGNvbnN0IGNvdW50ID0gbmV3IFNpZ25hbCg1KTtcbiAqIGNvbnN0IGRvdWJsZWQgPSBtYXAoY291bnQsIG4gPT4gbiAqIDIpO1xuICogY29uc29sZS5sb2coZG91YmxlZC52YWx1ZSk7IC8vIDEwXG4gKiBjb3VudC52YWx1ZSA9IDEwO1xuICogY29uc29sZS5sb2coZG91YmxlZC52YWx1ZSk7IC8vIDIwXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRyYW5zZm9ybWluZyBhcnJheXNcbiAqIGNvbnN0IG51bWJlcnMgPSBuZXcgU2lnbmFsKFsxLCAyLCAzXSk7XG4gKiBjb25zdCBkb3VibGVkID0gbWFwKG51bWJlcnMsIG51bXMgPT4gbnVtcy5tYXAobiA9PiBuICogMikpO1xuICogY29uc29sZS5sb2coZG91YmxlZC52YWx1ZSk7IC8vIFsyLCA0LCA2XVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBUcmFuc2Zvcm1pbmcgb2JqZWN0cyB3aXRoIGN1c3RvbSBvcHRpb25zXG4gKiBjb25zdCB1c2VyID0gbmV3IFNpZ25hbCh7IG5hbWU6ICdKb2huJywgYWdlOiAzMCB9KTtcbiAqIGNvbnN0IHVzZXJTdW1tYXJ5ID0gbWFwKFxuICogICB1c2VyLFxuICogICB1ID0+IGAke3UubmFtZX0gaXMgJHt1LmFnZX0geWVhcnMgb2xkYCxcbiAqICAgeyBuYW1lOiAndXNlclN1bW1hcnknIH1cbiAqICk7XG4gKiBjb25zb2xlLmxvZyh1c2VyU3VtbWFyeS52YWx1ZSk7IC8vIFwiSm9obiBpcyAzMCB5ZWFycyBvbGRcIlxuICovXG5leHBvcnQgZnVuY3Rpb24gbWFwPFQsIFU+KFxuICAgIHNvdXJjZTogU2lnbmFsPFQ+LFxuICAgIHRyYW5zZm9ybTogKHZhbHVlOiBUKSA9PiBVLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFU+LFxuKTogU2lnbmFsPFU+IHtcbiAgICByZXR1cm4gY29tcHV0ZWQoKCkgPT4gdHJhbnNmb3JtKHNvdXJjZS52YWx1ZSksIG9wdGlvbnMpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/map.ts\n");

/***/ }),

/***/ "./src/peek.ts":
/*!*********************!*\
  !*** ./src/peek.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   peek: () => (/* binding */ peek)\n/* harmony export */ });\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n/**\n * Retrieves the current value of a signal without establishing a dependency relationship.\n * This is useful when you want to read a signal's value without having the current computation\n * track it as a dependency, effectively \"peeking\" at the value without subscribing to changes.\n *\n * @template T The type of value held by the signal\n * @param signal The signal whose value you want to peek at\n * @returns The current value of the signal\n *\n * @description\n * The function works by temporarily manipulating the computation stack:\n * 1. Stores the current computation (if any) from the context\n * 2. Pushes undefined as a temporary computation to prevent dependency tracking\n * 3. Reads the signal's value\n * 4. Restores the previous computation state\n *\n * This approach ensures that when we read the signal's value, it won't be tracked\n * as a dependency in any active computation scope.\n *\n * @example\n * const counter = new Signal(0);\n * // Reading value normally would create a dependency\n * const normalRead = counter.value;\n * // Peeking at value doesn't create a dependency\n * const peekedValue = peek(counter);\n *\n * @example\n * // Useful in computed signals when you need a value for calculation\n * // but don't want to track changes to that specific signal\n * const total = computed(() => {\n *   const current = counter.value;  // Creates dependency\n *   const threshold = peek(maxValue);  // Reads value without dependency\n *   return current > threshold ? current : threshold;\n * });\n */\nfunction peek(signal) {\n    const context = _signalContext__WEBPACK_IMPORTED_MODULE_0__.SignalContext.getInstance();\n    const prevComputation = context.getCurrentComputation();\n    // @ts-ignore\n    context.setCurrentComputation(undefined);\n    try {\n        return signal.get_value_bypass_tracking(); // Directly access value to bypass dependency tracking\n    }\n    finally {\n        if (prevComputation) {\n            context.setCurrentComputation(prevComputation);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGVlay50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBOzs7OztJQUtJO0FBRzRDO0FBR2hEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBa0NHO0FBQ0ksU0FBUyxJQUFJLENBQUksTUFBaUI7SUFDckMsTUFBTSxPQUFPLEdBQUcseURBQWEsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUM1QyxNQUFNLGVBQWUsR0FBRyxPQUFPLENBQUMscUJBQXFCLEVBQUUsQ0FBQztJQUN4RCxhQUFhO0lBQ2IsT0FBTyxDQUFDLHFCQUFxQixDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3pDLElBQUksQ0FBQztRQUNELE9BQU8sTUFBTSxDQUFDLHlCQUF5QixFQUFFLENBQUMsQ0FBQyxzREFBc0Q7SUFDckcsQ0FBQztZQUFTLENBQUM7UUFDUCxJQUFJLGVBQWUsRUFBRSxDQUFDO1lBQ2xCLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUNuRCxDQUFDO0lBQ0wsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvcGVlay50cz9jN2IzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBTaWduYWxDb250ZXh0IH0gZnJvbSAnLi9zaWduYWxDb250ZXh0JztcblxuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgY3VycmVudCB2YWx1ZSBvZiBhIHNpZ25hbCB3aXRob3V0IGVzdGFibGlzaGluZyBhIGRlcGVuZGVuY3kgcmVsYXRpb25zaGlwLlxuICogVGhpcyBpcyB1c2VmdWwgd2hlbiB5b3Ugd2FudCB0byByZWFkIGEgc2lnbmFsJ3MgdmFsdWUgd2l0aG91dCBoYXZpbmcgdGhlIGN1cnJlbnQgY29tcHV0YXRpb25cbiAqIHRyYWNrIGl0IGFzIGEgZGVwZW5kZW5jeSwgZWZmZWN0aXZlbHkgXCJwZWVraW5nXCIgYXQgdGhlIHZhbHVlIHdpdGhvdXQgc3Vic2NyaWJpbmcgdG8gY2hhbmdlcy5cbiAqXG4gKiBAdGVtcGxhdGUgVCBUaGUgdHlwZSBvZiB2YWx1ZSBoZWxkIGJ5IHRoZSBzaWduYWxcbiAqIEBwYXJhbSBzaWduYWwgVGhlIHNpZ25hbCB3aG9zZSB2YWx1ZSB5b3Ugd2FudCB0byBwZWVrIGF0XG4gKiBAcmV0dXJucyBUaGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgc2lnbmFsXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBUaGUgZnVuY3Rpb24gd29ya3MgYnkgdGVtcG9yYXJpbHkgbWFuaXB1bGF0aW5nIHRoZSBjb21wdXRhdGlvbiBzdGFjazpcbiAqIDEuIFN0b3JlcyB0aGUgY3VycmVudCBjb21wdXRhdGlvbiAoaWYgYW55KSBmcm9tIHRoZSBjb250ZXh0XG4gKiAyLiBQdXNoZXMgdW5kZWZpbmVkIGFzIGEgdGVtcG9yYXJ5IGNvbXB1dGF0aW9uIHRvIHByZXZlbnQgZGVwZW5kZW5jeSB0cmFja2luZ1xuICogMy4gUmVhZHMgdGhlIHNpZ25hbCdzIHZhbHVlXG4gKiA0LiBSZXN0b3JlcyB0aGUgcHJldmlvdXMgY29tcHV0YXRpb24gc3RhdGVcbiAqXG4gKiBUaGlzIGFwcHJvYWNoIGVuc3VyZXMgdGhhdCB3aGVuIHdlIHJlYWQgdGhlIHNpZ25hbCdzIHZhbHVlLCBpdCB3b24ndCBiZSB0cmFja2VkXG4gKiBhcyBhIGRlcGVuZGVuY3kgaW4gYW55IGFjdGl2ZSBjb21wdXRhdGlvbiBzY29wZS5cbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3QgY291bnRlciA9IG5ldyBTaWduYWwoMCk7XG4gKiAvLyBSZWFkaW5nIHZhbHVlIG5vcm1hbGx5IHdvdWxkIGNyZWF0ZSBhIGRlcGVuZGVuY3lcbiAqIGNvbnN0IG5vcm1hbFJlYWQgPSBjb3VudGVyLnZhbHVlO1xuICogLy8gUGVla2luZyBhdCB2YWx1ZSBkb2Vzbid0IGNyZWF0ZSBhIGRlcGVuZGVuY3lcbiAqIGNvbnN0IHBlZWtlZFZhbHVlID0gcGVlayhjb3VudGVyKTtcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gVXNlZnVsIGluIGNvbXB1dGVkIHNpZ25hbHMgd2hlbiB5b3UgbmVlZCBhIHZhbHVlIGZvciBjYWxjdWxhdGlvblxuICogLy8gYnV0IGRvbid0IHdhbnQgdG8gdHJhY2sgY2hhbmdlcyB0byB0aGF0IHNwZWNpZmljIHNpZ25hbFxuICogY29uc3QgdG90YWwgPSBjb21wdXRlZCgoKSA9PiB7XG4gKiAgIGNvbnN0IGN1cnJlbnQgPSBjb3VudGVyLnZhbHVlOyAgLy8gQ3JlYXRlcyBkZXBlbmRlbmN5XG4gKiAgIGNvbnN0IHRocmVzaG9sZCA9IHBlZWsobWF4VmFsdWUpOyAgLy8gUmVhZHMgdmFsdWUgd2l0aG91dCBkZXBlbmRlbmN5XG4gKiAgIHJldHVybiBjdXJyZW50ID4gdGhyZXNob2xkID8gY3VycmVudCA6IHRocmVzaG9sZDtcbiAqIH0pO1xuICovXG5leHBvcnQgZnVuY3Rpb24gcGVlazxUPihzaWduYWw6IFNpZ25hbDxUPik6IFQge1xuICAgIGNvbnN0IGNvbnRleHQgPSBTaWduYWxDb250ZXh0LmdldEluc3RhbmNlKCk7XG4gICAgY29uc3QgcHJldkNvbXB1dGF0aW9uID0gY29udGV4dC5nZXRDdXJyZW50Q29tcHV0YXRpb24oKTtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgY29udGV4dC5zZXRDdXJyZW50Q29tcHV0YXRpb24odW5kZWZpbmVkKTtcbiAgICB0cnkge1xuICAgICAgICByZXR1cm4gc2lnbmFsLmdldF92YWx1ZV9ieXBhc3NfdHJhY2tpbmcoKTsgLy8gRGlyZWN0bHkgYWNjZXNzIHZhbHVlIHRvIGJ5cGFzcyBkZXBlbmRlbmN5IHRyYWNraW5nXG4gICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKHByZXZDb21wdXRhdGlvbikge1xuICAgICAgICAgICAgY29udGV4dC5zZXRDdXJyZW50Q29tcHV0YXRpb24ocHJldkNvbXB1dGF0aW9uKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/peek.ts\n");

/***/ }),

/***/ "./src/persisted.ts":
/*!**************************!*\
  !*** ./src/persisted.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LocalStorageProvider: () => (/* binding */ LocalStorageProvider),\n/* harmony export */   MemoryStorageProvider: () => (/* binding */ MemoryStorageProvider),\n/* harmony export */   Persisted: () => (/* binding */ Persisted),\n/* harmony export */   SessionStorageProvider: () => (/* binding */ SessionStorageProvider),\n/* harmony export */   persisted: () => (/* binding */ persisted)\n/* harmony export */ });\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer\n *\n * Defines storage provider interfaces and implementations for persisting signal values\n * across browser sessions and environments.\n */\n\n\n\n/**\n * Uses browser localStorage for persistent storage across sessions\n * Falls back gracefully when not in browser environment\n */\nclass LocalStorageProvider {\n    /**\n     * Gets item from localStorage\n     * @param key - Key to retrieve\n     * @returns Stored value or null if not found/not in browser\n     */\n    getItem(key) {\n        if (typeof window === 'undefined')\n            return null;\n        const presented = window.localStorage.getItem(key);\n        if (presented) {\n            return JSON.parse(presented);\n        }\n        return null;\n    }\n    /**\n     * Sets item in localStorage\n     * @param key - Key to store under\n     * @param value - Value to store\n     */\n    setItem(key, value) {\n        if (typeof window === 'undefined')\n            return;\n        window.localStorage.setItem(key, JSON.stringify(value));\n    }\n    /**\n     * Removes item from localStorage\n     * @param key - Key to remove\n     */\n    removeItem(key) {\n        if (typeof window === 'undefined')\n            return;\n        window.localStorage.removeItem(key);\n    }\n}\n/**\n * Uses browser sessionStorage for temporary storage during session\n * Falls back gracefully when not in browser environment\n */\nclass SessionStorageProvider {\n    /**\n     * Gets item from sessionStorage\n     * @param key - Key to retrieve\n     * @returns Stored value or null if not found/not in browser\n     */\n    getItem(key) {\n        if (typeof window === 'undefined')\n            return null;\n        const presented = window.sessionStorage.getItem(key);\n        if (presented) {\n            return JSON.parse(presented);\n        }\n        return null;\n    }\n    /**\n     * Sets item in sessionStorage\n     * @param key - Key to store under\n     * @param value - Value to store\n     */\n    setItem(key, value) {\n        if (typeof window === 'undefined')\n            return;\n        window.sessionStorage.setItem(key, JSON.stringify(value));\n    }\n    /**\n     * Removes item from sessionStorage\n     * @param key - Key to remove\n     */\n    removeItem(key) {\n        if (typeof window === 'undefined')\n            return;\n        window.sessionStorage.removeItem(key);\n    }\n}\n/**\n * In-memory storage provider for testing and SSR environments\n * Data persists only during runtime\n */\nclass MemoryStorageProvider {\n    constructor() {\n        /** Map to store key-value pairs in memory */\n        this.store = new Map();\n    }\n    /**\n     * Gets item from memory store\n     * @param key - Key to retrieve\n     * @returns Stored value or null if not found\n     */\n    getItem(key) {\n        var _a;\n        return (_a = this.store.get(key)) !== null && _a !== void 0 ? _a : null;\n    }\n    /**\n     * Sets item in memory store\n     * @param key - Key to store under\n     * @param value - Value to store\n     */\n    setItem(key, value) {\n        this.store.set(key, value);\n    }\n    /**\n     * Removes item from memory store\n     * @param key - Key to remove\n     */\n    removeItem(key) {\n        this.store.delete(key);\n    }\n}\nclass Persisted extends _signal__WEBPACK_IMPORTED_MODULE_0__.Signal {\n    constructor(key, initialValue, storage, options) {\n        const storedValue = storage.getItem(key);\n        super(storedValue !== null && storedValue !== void 0 ? storedValue : initialValue, options);\n        this.disposed = false;\n        this.key = key;\n        this.storage = storage;\n        (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n            if (this.disposed)\n                return;\n            this.storage.setItem(this.key, this.value);\n        }, `persist-${key}`);\n    }\n    get value() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot read from disposed signal');\n        }\n        return super.value;\n    }\n    set value(newValue) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot write to disposed signal');\n        }\n        super.value = newValue;\n    }\n    update(fn) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot update disposed signal');\n        }\n        this.value = fn(this.value);\n    }\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        this.storage.removeItem(this.key);\n        super.dispose();\n    }\n    reload() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot reload disposed signal');\n        }\n        const value = this.storage.getItem(this.key);\n        if (value !== null) {\n            this.value = value;\n        }\n    }\n    clear() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_2__.SignalDisposedError('Cannot clear disposed signal');\n        }\n        this.storage.removeItem(this.key);\n    }\n    isDisposed() {\n        return this.disposed;\n    }\n}\nfunction persisted(key, initialValue, storage, options) {\n    return new Persisted(key, initialValue, storage, options);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/persisted.ts\n");

/***/ }),

/***/ "./src/queue.ts":
/*!**********************!*\
  !*** ./src/queue.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueueSignal: () => (/* binding */ QueueSignal),\n/* harmony export */   createQueueSignal: () => (/* binding */ createQueueSignal)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n\n/**\n * A priority queue implementation using signals for reactive state management.\n * Items are ordered by priority (highest first) and timestamp (FIFO for same priority).\n *\n * @example\n * // Basic queue operations\n * const taskQueue = createQueueSignal<string>();\n *\n * // Add tasks with different priorities\n * taskQueue.enqueue(\"Low priority task\", 1);\n * taskQueue.enqueue(\"High priority task\", 3);\n * taskQueue.enqueue(\"Medium priority task\", 2);\n *\n * console.log(taskQueue.peek()); // \"High priority task\"\n * console.log(taskQueue.dequeue()); // \"High priority task\"\n * console.log(taskQueue.size()); // 2\n *\n * @example\n * // Task processing with priorities\n * const processingQueue = createQueueSignal<{task: string, urgency: string}>();\n *\n * // Emergency task (priority 3)\n * const emergencyId = processingQueue.enqueue(\n *   {task: \"Server down\", urgency: \"high\"},\n *   3\n * );\n *\n * // Regular tasks (priority 1)\n * processingQueue.enqueue({task: \"Update docs\", urgency: \"low\"}, 1);\n * processingQueue.enqueue({task: \"Code review\", urgency: \"low\"}, 1);\n *\n * // Process emergency first\n * while (!processingQueue.isEmpty()) {\n *   const task = processingQueue.dequeue();\n *   console.log(`Processing: ${task.task}`);\n * }\n *\n * @example\n * // Reactive queue monitoring\n * const downloadQueue = createQueueSignal<string>();\n * const queueSignal = downloadQueue.getQueue();\n *\n * effect(() => {\n *   const items = queueSignal.value;\n *   console.log(`Queue size changed: ${items.length} items`);\n * });\n *\n * downloadQueue.enqueue(\"file1.txt\");\n * downloadQueue.enqueue(\"file2.txt\");\n */\nclass QueueSignal {\n    constructor() {\n        this.queue = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)([]);\n    }\n    /**\n     * Adds an item to the queue with optional priority.\n     * @param data The item to add\n     * @param priority Priority level (higher = more priority)\n     * @returns Unique ID for the queued item\n     */\n    enqueue(data, priority = 0) {\n        const id = Math.random().toString(36).substring(2);\n        const item = {\n            id,\n            data,\n            priority,\n            timestamp: Date.now(),\n        };\n        this.queue.value = [...this.queue.value, item].sort((a, b) => b.priority - a.priority || a.timestamp - b.timestamp);\n        return id;\n    }\n    /**\n     * Removes and returns the highest priority item.\n     * @returns The data of the dequeued item, or undefined if queue is empty\n     */\n    dequeue() {\n        if (this.isEmpty())\n            return undefined;\n        const [item, ...rest] = this.queue.value;\n        this.queue.value = rest;\n        return item === null || item === void 0 ? void 0 : item.data;\n    }\n    /**\n     * Views the next item without removing it.\n     * @returns The data of the next item, or undefined if queue is empty\n     */\n    peek() {\n        var _a;\n        return (_a = this.queue.value[0]) === null || _a === void 0 ? void 0 : _a.data;\n    }\n    /**\n     * Removes a specific item by its ID.\n     * @param id ID of the item to remove\n     * @returns true if an item was removed, false otherwise\n     */\n    remove(id) {\n        const initialLength = this.queue.value.length;\n        this.queue.value = this.queue.value.filter(item => item.id !== id);\n        return initialLength !== this.queue.value.length;\n    }\n    /**\n     * Removes all items from the queue.\n     */\n    clear() {\n        this.queue.value = [];\n    }\n    /**\n     * Checks if the queue is empty.\n     */\n    isEmpty() {\n        return this.queue.value.length === 0;\n    }\n    /**\n     * Returns the number of items in the queue.\n     */\n    size() {\n        return this.queue.value.length;\n    }\n    /**\n     * Gets the underlying signal for reactive queue monitoring.\n     * @returns Signal containing the queue items\n     */\n    getQueue() {\n        return this.queue;\n    }\n}\n/**\n * Creates a new queue signal instance.\n * @example\n * // Basic queue operations\n * const taskQueue = createQueueSignal<string>();\n *\n * // Add tasks with different priorities\n * taskQueue.enqueue(\"Low priority task\", 1);\n * taskQueue.enqueue(\"High priority task\", 3);\n * taskQueue.enqueue(\"Medium priority task\", 2);\n *\n * console.log(taskQueue.peek()); // \"High priority task\"\n * console.log(taskQueue.dequeue()); // \"High priority task\"\n * console.log(taskQueue.size()); // 2\n *\n * @example\n * // Task processing with priorities\n * const processingQueue = createQueueSignal<{task: string, urgency: string}>();\n *\n * // Emergency task (priority 3)\n * const emergencyId = processingQueue.enqueue(\n *   {task: \"Server down\", urgency: \"high\"},\n *   3\n * );\n *\n * // Regular tasks (priority 1)\n * processingQueue.enqueue({task: \"Update docs\", urgency: \"low\"}, 1);\n * processingQueue.enqueue({task: \"Code review\", urgency: \"low\"}, 1);\n *\n * // Process emergency first\n * while (!processingQueue.isEmpty()) {\n *   const task = processingQueue.dequeue();\n *   console.log(`Processing: ${task.task}`);\n * }\n *\n * @example\n * // Reactive queue monitoring\n * const downloadQueue = createQueueSignal<string>();\n * const queueSignal = downloadQueue.getQueue();\n *\n * effect(() => {\n *   const items = queueSignal.value;\n *   console.log(`Queue size changed: ${items.length} items`);\n * });\n *\n * @returns A new QueueSignal instance\n */\nfunction createQueueSignal() {\n    return new QueueSignal();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/queue.ts\n");

/***/ }),

/***/ "./src/signal.ts":
/*!***********************!*\
  !*** ./src/signal.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Signal: () => (/* binding */ Signal)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./errors */ \"./src/errors.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n/**\n * Signal class implements a reactive primitive that holds a value and notifies dependents of changes.\n * It follows the WritableSignal interface contract for value updates and subscriptions.\n *\n * @template T The type of value held by the signal\n\n *\n * @example\n * // Basic usage with primitive values\n * const counter = new Signal(0);\n * console.log(counter.value); // 0\n * counter.value = 1;\n * console.log(counter.value); // 1\n *\n * @example\n * // Using update function\n * const counter = new Signal(0);\n * counter.update(current => current + 1); // Increments by 1\n *\n * @example\n * // Subscribing to changes\n * const name = new Signal('John');\n * const unsubscribe = name.subscribe(newValue => {\n *   console.log(`Name changed to: ${newValue}`);\n * });\n * name.value = 'Jane'; // Logs: \"Name changed to: Jane\"\n * unsubscribe(); // Removes the subscription\n *\n * @example\n * // Using custom equality function for objects\n * const user = new Signal(\n *   { id: 1, name: 'John' },\n *   {\n *     equals: (prev, next) => prev.id === next.id && prev.name === next.name\n *   }\n * );\n *\n * @example\n * // Proper cleanup\n * const signal = new Signal('test');\n * // ... use signal\n * signal.dispose(); // Clean up when done\n *\n * @example\n * // Using with arrays\n * const list = new Signal<number[]>([]);\n * list.update(current => [...current, 1]); // Adds element\n * list.update(current => current.filter(x => x > 0)); // Filters elements\n *\n * @example\n * // Error handling\n * try {\n *   const signal = new Signal('test');\n *   signal.dispose();\n *   signal.value; // Throws SignalDisposedError\n * } catch (error) {\n *   if (error instanceof SignalDisposedError) {\n *     console.log('Signal was disposed');\n *   }\n * }\n *\n * @example\n * // Using with complex objects and custom name\n * interface Todo {\n *   id: number;\n *   text: string;\n *   completed: boolean;\n * }\n *\n * const todos = new Signal<Todo[]>(\n *   [],\n *   {\n *     name: 'todosList',\n *     equals: (prev, next) =>\n *       prev.length === next.length &&\n *       prev.every((todo, index) =>\n *         todo.id === next[index].id &&\n *         todo.text === next[index].text &&\n *         todo.completed === next[index].completed\n *       )\n *   }\n * );\n *\n * @example\n * // Batching updates using SignalContext\n * const firstName = new Signal('John');\n * const lastName = new Signal('Doe');\n *\n */\nclass Signal {\n    /**\n     * Creates a new Signal instance\n     *\n     * @param initialValue - The initial value of the signal\n     * @param options - Configuration options for the signal\n     */\n    constructor(initialValue, options = {}) {\n        var _a;\n        /**\n         * Set of computations that depend on this signal's value\n         */\n        this.dependents = new Set();\n        /**\n         * Flag indicating whether this signal has been disposed\n         */\n        this.disposed = false;\n        this._value = initialValue;\n        // Use provided equals function or default to Object.is\n        this.equals = (_a = options.equals) !== null && _a !== void 0 ? _a : Object.is;\n        this.name = options.name || 'anonymous';\n    }\n    /**\n     * Gets the current value of the signal.\n     * Tracks dependencies and throws if the signal is disposed.\n     */\n    get value() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('read from');\n        }\n        this.trackDependency();\n        return this._value;\n    }\n    /**\n     * Sets a new value for the signal.\n     * Only updates and notifies dependents if the new value is different from the current value.\n     *\n     * @param newValue - The new value to set\n     */\n    set value(newValue) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('write to');\n        }\n        if (!this.equals(this._value, newValue)) {\n            this._value = newValue;\n            this.notifyDependents();\n        }\n    }\n    /**\n     * Gets the current value of the signal without tracking dependencies.\n     */\n    get_value_bypass_tracking() {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('read from');\n        }\n        return this._value;\n    }\n    /**\n     * Updates the signal's value using a transformation function\n     *\n     * @param fn - Function that takes the current value and returns a new value\n     */\n    update(fn) {\n        this.value = fn(this._value);\n    }\n    /**\n     * Creates a subscription to the signal's value changes\n     *\n     * @param callback - Function to call when the value changes\n     * @returns Function to unsubscribe from changes\n     */\n    subscribe(callback) {\n        if (this.disposed) {\n            throw new _errors__WEBPACK_IMPORTED_MODULE_0__.SignalDisposedError('subscribe to');\n        }\n        const computed = new _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal(() => {\n            return callback(this.value);\n        });\n        return () => computed.dispose();\n    }\n    /**\n     * Adds a computation as dependent on this signal\n     *\n     * @param computation - The computation to add as a dependent\n     */\n    addDependent(computation) {\n        this.dependents.add(computation);\n    }\n    /**\n     * Removes a computation from this signal's dependents\n     *\n     * @param computation - The computation to remove\n     */\n    removeDependent(computation) {\n        this.dependents.delete(computation);\n    }\n    /**\n     * Notifies all dependent computations of a value change\n     * Handles batching through SignalContext if active\n     */\n    notifyDependents() {\n        const context = _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext.getInstance();\n        if (context.isBatching()) {\n            context.addToBatchQueue(this);\n            return;\n        }\n        for (const dependent of this.dependents) {\n            dependent.markDirty();\n        }\n    }\n    /**\n     * Disposes of the signal and its dependent computations\n     * Prevents memory leaks by cleaning up all references\n     */\n    dispose() {\n        if (this.disposed)\n            return;\n        this.disposed = true;\n        // Create a copy of dependents before iterating to avoid modification during iteration\n        const dependentsToDispose = new Set(this.dependents);\n        // First, clear own dependents\n        this.dependents.clear();\n        // Then dispose all dependent computations\n        for (const dependent of dependentsToDispose) {\n            // @ts-ignore\n            if (dependent instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal || dependent['signal'] instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal) {\n                // If the dependent is or belongs to a ComputedSignal, dispose it\n                // @ts-ignore\n                const signal = dependent instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal ? dependent : dependent['signal'];\n                signal.dispose();\n            }\n            else {\n                // For other types of computations, just dispose the computation\n                dependent.dispose();\n            }\n        }\n    }\n    /**\n     * Returns whether the signal has been disposed\n     */\n    isDisposed() {\n        return this.disposed;\n    }\n    /**\n     * Returns the name of the signal for debugging purposes\n     */\n    getDependents() {\n        return this.dependents || new Set();\n    }\n    /**\n     * Returns the name of the signal for debugging purposes\n     */\n    hasDependents() {\n        return this.dependents.size > 0;\n    }\n    toString() {\n        return `Signal(${this.name})`;\n    }\n    /**\n     * Tracks the current computation as dependent on this signal\n     */\n    trackDependency() {\n        const computation = _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext.getInstance().getCurrentComputation();\n        if (computation) {\n            computation.addDependency(this);\n            this.addDependent(computation);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/signal.ts\n");

/***/ }),

/***/ "./src/signalContext.ts":
/*!******************************!*\
  !*** ./src/signalContext.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignalContext: () => (/* binding */ SignalContext)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Manages the global state and context of signal computations\n */\nclass SignalContext {\n    constructor() {\n        this.computationStack = [];\n        this.batchDepth = 0;\n        this.batchQueue = new Set();\n        this.activeEffects = new Set();\n    }\n    static getInstance() {\n        if (!this.instance) {\n            this.instance = new SignalContext();\n        }\n        return this.instance;\n    }\n    getCurrentComputation() {\n        return this.computationStack[this.computationStack.length - 1];\n    }\n    pushComputation(computation) {\n        // Check for circular dependencies\n        if (computation && this.computationStack.includes(computation)) {\n            // throw new CircularDependencyError();\n            return;\n        }\n        // we can push undefined to the stack\n        this.computationStack.push(computation);\n    }\n    popComputation() {\n        this.computationStack.pop();\n    }\n    isBatching() {\n        return this.batchDepth > 0;\n    }\n    beginBatch() {\n        this.batchDepth++;\n    }\n    endBatch() {\n        this.batchDepth--;\n        if (this.batchDepth === 0) {\n            this.flushBatchQueue();\n        }\n    }\n    addToBatchQueue(signal) {\n        this.batchQueue.add(signal);\n    }\n    flushBatchQueue() {\n        // Create a new Set for unique signals\n        const uniqueSignals = new Set(this.batchQueue);\n        this.batchQueue.clear();\n        // Get all dependent computations\n        const computations = new Set();\n        for (const signal of uniqueSignals) {\n            for (const dependent of signal.getDependents()) {\n                computations.add(dependent);\n            }\n        }\n        // Mark all computations as dirty\n        for (const computation of computations) {\n            computation.markDirty();\n        }\n    }\n    setCurrentComputation(computation) {\n        this.computationStack[this.computationStack.length - 1] = computation;\n    }\n    registerEffect(effect) {\n        this.activeEffects.add(effect);\n    }\n    unregisterEffect(effect) {\n        this.activeEffects.delete(effect);\n    }\n    // Add this method to check if we're currently in an effect\n    isInEffect() {\n        return this.activeEffects.size > 0;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFDLGFBQWEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDdEMsQ0FBQztJQUVELDJEQUEyRDtJQUMzRCxVQUFVO1FBQ04sT0FBTyxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksR0FBRyxDQUFDLENBQUM7SUFDdkMsQ0FBQztDQUNKIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGF2YXRpanMvc2lnbmFsLy4vc3JjL3NpZ25hbENvbnRleHQudHM/N2VkMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgQ29tcHV0YXRpb24gfSBmcm9tICcuL2NvbXB1dGF0aW9uJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IEVmZmVjdEltcGwgfSBmcm9tICcuL2VmZmVjdCc7XG5cbi8qKlxuICogTWFuYWdlcyB0aGUgZ2xvYmFsIHN0YXRlIGFuZCBjb250ZXh0IG9mIHNpZ25hbCBjb21wdXRhdGlvbnNcbiAqL1xuZXhwb3J0IGNsYXNzIFNpZ25hbENvbnRleHQge1xuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBTaWduYWxDb250ZXh0O1xuICAgIHByaXZhdGUgY29tcHV0YXRpb25TdGFjazogQ29tcHV0YXRpb25bXSA9IFtdO1xuICAgIHByaXZhdGUgYmF0Y2hEZXB0aCA9IDA7XG4gICAgcHJpdmF0ZSBiYXRjaFF1ZXVlID0gbmV3IFNldDxTaWduYWw8YW55Pj4oKTtcbiAgICBwcml2YXRlIGFjdGl2ZUVmZmVjdHMgPSBuZXcgU2V0PEVmZmVjdEltcGw+KCk7XG5cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogU2lnbmFsQ29udGV4dCB7XG4gICAgICAgIGlmICghdGhpcy5pbnN0YW5jZSkge1xuICAgICAgICAgICAgdGhpcy5pbnN0YW5jZSA9IG5ldyBTaWduYWxDb250ZXh0KCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMuaW5zdGFuY2U7XG4gICAgfVxuXG4gICAgZ2V0Q3VycmVudENvbXB1dGF0aW9uKCk6IENvbXB1dGF0aW9uIHwgdW5kZWZpbmVkIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuY29tcHV0YXRpb25TdGFja1t0aGlzLmNvbXB1dGF0aW9uU3RhY2subGVuZ3RoIC0gMV07XG4gICAgfVxuXG4gICAgcHVzaENvbXB1dGF0aW9uKGNvbXB1dGF0aW9uOiBDb21wdXRhdGlvbik6IHZvaWQge1xuICAgICAgICAvLyBDaGVjayBmb3IgY2lyY3VsYXIgZGVwZW5kZW5jaWVzXG4gICAgICAgIGlmIChjb21wdXRhdGlvbiAmJiB0aGlzLmNvbXB1dGF0aW9uU3RhY2suaW5jbHVkZXMoY29tcHV0YXRpb24pKSB7XG4gICAgICAgICAgICAvLyB0aHJvdyBuZXcgQ2lyY3VsYXJEZXBlbmRlbmN5RXJyb3IoKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICAvLyB3ZSBjYW4gcHVzaCB1bmRlZmluZWQgdG8gdGhlIHN0YWNrXG4gICAgICAgIHRoaXMuY29tcHV0YXRpb25TdGFjay5wdXNoKGNvbXB1dGF0aW9uKTtcbiAgICB9XG5cbiAgICBwb3BDb21wdXRhdGlvbigpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jb21wdXRhdGlvblN0YWNrLnBvcCgpO1xuICAgIH1cblxuICAgIGlzQmF0Y2hpbmcoKTogYm9vbGVhbiB7XG4gICAgICAgIHJldHVybiB0aGlzLmJhdGNoRGVwdGggPiAwO1xuICAgIH1cblxuICAgIGJlZ2luQmF0Y2goKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYmF0Y2hEZXB0aCsrO1xuICAgIH1cblxuICAgIGVuZEJhdGNoKCk6IHZvaWQge1xuICAgICAgICB0aGlzLmJhdGNoRGVwdGgtLTtcbiAgICAgICAgaWYgKHRoaXMuYmF0Y2hEZXB0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhpcy5mbHVzaEJhdGNoUXVldWUoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZFRvQmF0Y2hRdWV1ZShzaWduYWw6IFNpZ25hbDxhbnk+KTogdm9pZCB7XG4gICAgICAgIHRoaXMuYmF0Y2hRdWV1ZS5hZGQoc2lnbmFsKTtcbiAgICB9XG5cbiAgICBmbHVzaEJhdGNoUXVldWUoKTogdm9pZCB7XG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBTZXQgZm9yIHVuaXF1ZSBzaWduYWxzXG4gICAgICAgIGNvbnN0IHVuaXF1ZVNpZ25hbHMgPSBuZXcgU2V0KHRoaXMuYmF0Y2hRdWV1ZSk7XG4gICAgICAgIHRoaXMuYmF0Y2hRdWV1ZS5jbGVhcigpO1xuXG4gICAgICAgIC8vIEdldCBhbGwgZGVwZW5kZW50IGNvbXB1dGF0aW9uc1xuICAgICAgICBjb25zdCBjb21wdXRhdGlvbnMgPSBuZXcgU2V0PENvbXB1dGF0aW9uPigpO1xuXG4gICAgICAgIGZvciAoY29uc3Qgc2lnbmFsIG9mIHVuaXF1ZVNpZ25hbHMpIHtcbiAgICAgICAgICAgIGZvciAoY29uc3QgZGVwZW5kZW50IG9mIHNpZ25hbC5nZXREZXBlbmRlbnRzKCkpIHtcbiAgICAgICAgICAgICAgICBjb21wdXRhdGlvbnMuYWRkKGRlcGVuZGVudCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgLy8gTWFyayBhbGwgY29tcHV0YXRpb25zIGFzIGRpcnR5XG4gICAgICAgIGZvciAoY29uc3QgY29tcHV0YXRpb24gb2YgY29tcHV0YXRpb25zKSB7XG4gICAgICAgICAgICBjb21wdXRhdGlvbi5tYXJrRGlydHkoKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHNldEN1cnJlbnRDb21wdXRhdGlvbihjb21wdXRhdGlvbjogQ29tcHV0YXRpb24pOiB2b2lkIHtcbiAgICAgICAgdGhpcy5jb21wdXRhdGlvblN0YWNrW3RoaXMuY29tcHV0YXRpb25TdGFjay5sZW5ndGggLSAxXSA9IGNvbXB1dGF0aW9uO1xuICAgIH1cblxuXG4gICAgcmVnaXN0ZXJFZmZlY3QoZWZmZWN0OiBFZmZlY3RJbXBsKTogdm9pZCB7XG4gICAgICAgIHRoaXMuYWN0aXZlRWZmZWN0cy5hZGQoZWZmZWN0KTtcbiAgICB9XG5cbiAgICB1bnJlZ2lzdGVyRWZmZWN0KGVmZmVjdDogRWZmZWN0SW1wbCk6IHZvaWQge1xuICAgICAgICB0aGlzLmFjdGl2ZUVmZmVjdHMuZGVsZXRlKGVmZmVjdCk7XG4gICAgfVxuXG4gICAgLy8gQWRkIHRoaXMgbWV0aG9kIHRvIGNoZWNrIGlmIHdlJ3JlIGN1cnJlbnRseSBpbiBhbiBlZmZlY3RcbiAgICBpc0luRWZmZWN0KCk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gdGhpcy5hY3RpdmVFZmZlY3RzLnNpemUgPiAwO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/signalContext.ts\n");

/***/ }),

/***/ "./src/signalMonitor.ts":
/*!******************************!*\
  !*** ./src/signalMonitor.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SignalMonitor: () => (/* binding */ SignalMonitor)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Monitor signal performance metrics\n */\nclass SignalMonitor {\n    static trackUpdate(duration) {\n        this.metrics.updates++;\n        this.updateTimes.push(duration);\n        if (this.updateTimes.length > 100) {\n            this.updateTimes.shift();\n        }\n        this.metrics.averageUpdateTime =\n            this.updateTimes.reduce((a, b) => a + b, 0) / this.updateTimes.length;\n    }\n    static trackComputation(depth) {\n        this.metrics.computations++;\n        this.metrics.maxChainDepth = Math.max(this.metrics.maxChainDepth, depth);\n    }\n    static getMetrics() {\n        return { ...this.metrics };\n    }\n    static reset() {\n        this.metrics = {\n            updates: 0,\n            computations: 0,\n            maxChainDepth: 0,\n            averageUpdateTime: 0,\n        };\n        this.updateTimes = [];\n    }\n}\nSignalMonitor.metrics = {\n    updates: 0,\n    computations: 0,\n    maxChainDepth: 0,\n    averageUpdateTime: 0,\n};\nSignalMonitor.updateTimes = [];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc2lnbmFsTW9uaXRvci50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7Ozs7O0lBS0k7QUFLSjs7R0FFRztBQUNJLE1BQU0sYUFBYTtJQVV0QixNQUFNLENBQUMsV0FBVyxDQUFDLFFBQWdCO1FBQy9CLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDdkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7UUFFaEMsSUFBSSxJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sR0FBRyxHQUFHLEVBQUUsQ0FBQztZQUNoQyxJQUFJLENBQUMsV0FBVyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQzdCLENBQUM7UUFFRCxJQUFJLENBQUMsT0FBTyxDQUFDLGlCQUFpQjtZQUMxQixJQUFJLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUM7SUFDOUUsQ0FBQztJQUVELE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFhO1FBQ2pDLElBQUksQ0FBQyxPQUFPLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLGFBQWEsRUFBRSxLQUFLLENBQUMsQ0FBQztJQUM3RSxDQUFDO0lBRUQsTUFBTSxDQUFDLFVBQVU7UUFDYixPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDL0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFLO1FBQ1IsSUFBSSxDQUFDLE9BQU8sR0FBRztZQUNYLE9BQU8sRUFBRSxDQUFDO1lBQ1YsWUFBWSxFQUFFLENBQUM7WUFDZixhQUFhLEVBQUUsQ0FBQztZQUNoQixpQkFBaUIsRUFBRSxDQUFDO1NBQ3ZCLENBQUM7UUFDRixJQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQztJQUMxQixDQUFDOztBQXRDYyxxQkFBTyxHQUFrQjtJQUNwQyxPQUFPLEVBQUUsQ0FBQztJQUNWLFlBQVksRUFBRSxDQUFDO0lBQ2YsYUFBYSxFQUFFLENBQUM7SUFDaEIsaUJBQWlCLEVBQUUsQ0FBQztDQUN2QixDQUFDO0FBRWEseUJBQVcsR0FBYSxFQUFFLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvc2lnbmFsTW9uaXRvci50cz82NmQ4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5cbmltcG9ydCB7IFNpZ25hbE1ldHJpY3MgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuXG4vKipcbiAqIE1vbml0b3Igc2lnbmFsIHBlcmZvcm1hbmNlIG1ldHJpY3NcbiAqL1xuZXhwb3J0IGNsYXNzIFNpZ25hbE1vbml0b3Ige1xuICAgIHByaXZhdGUgc3RhdGljIG1ldHJpY3M6IFNpZ25hbE1ldHJpY3MgPSB7XG4gICAgICAgIHVwZGF0ZXM6IDAsXG4gICAgICAgIGNvbXB1dGF0aW9uczogMCxcbiAgICAgICAgbWF4Q2hhaW5EZXB0aDogMCxcbiAgICAgICAgYXZlcmFnZVVwZGF0ZVRpbWU6IDAsXG4gICAgfTtcblxuICAgIHByaXZhdGUgc3RhdGljIHVwZGF0ZVRpbWVzOiBudW1iZXJbXSA9IFtdO1xuXG4gICAgc3RhdGljIHRyYWNrVXBkYXRlKGR1cmF0aW9uOiBudW1iZXIpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5tZXRyaWNzLnVwZGF0ZXMrKztcbiAgICAgICAgdGhpcy51cGRhdGVUaW1lcy5wdXNoKGR1cmF0aW9uKTtcblxuICAgICAgICBpZiAodGhpcy51cGRhdGVUaW1lcy5sZW5ndGggPiAxMDApIHtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlVGltZXMuc2hpZnQoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMubWV0cmljcy5hdmVyYWdlVXBkYXRlVGltZSA9XG4gICAgICAgICAgICB0aGlzLnVwZGF0ZVRpbWVzLnJlZHVjZSgoYSwgYikgPT4gYSArIGIsIDApIC8gdGhpcy51cGRhdGVUaW1lcy5sZW5ndGg7XG4gICAgfVxuXG4gICAgc3RhdGljIHRyYWNrQ29tcHV0YXRpb24oZGVwdGg6IG51bWJlcik6IHZvaWQge1xuICAgICAgICB0aGlzLm1ldHJpY3MuY29tcHV0YXRpb25zKys7XG4gICAgICAgIHRoaXMubWV0cmljcy5tYXhDaGFpbkRlcHRoID0gTWF0aC5tYXgodGhpcy5tZXRyaWNzLm1heENoYWluRGVwdGgsIGRlcHRoKTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZ2V0TWV0cmljcygpOiBTaWduYWxNZXRyaWNzIHtcbiAgICAgICAgcmV0dXJuIHsgLi4udGhpcy5tZXRyaWNzIH07XG4gICAgfVxuXG4gICAgc3RhdGljIHJlc2V0KCk6IHZvaWQge1xuICAgICAgICB0aGlzLm1ldHJpY3MgPSB7XG4gICAgICAgICAgICB1cGRhdGVzOiAwLFxuICAgICAgICAgICAgY29tcHV0YXRpb25zOiAwLFxuICAgICAgICAgICAgbWF4Q2hhaW5EZXB0aDogMCxcbiAgICAgICAgICAgIGF2ZXJhZ2VVcGRhdGVUaW1lOiAwLFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLnVwZGF0ZVRpbWVzID0gW107XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/signalMonitor.ts\n");

/***/ }),

/***/ "./src/threshold.ts":
/*!**************************!*\
  !*** ./src/threshold.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   threshold: () => (/* binding */ threshold)\n/* harmony export */ });\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/* harmony import */ var _peek__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./peek */ \"./src/peek.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a Signal that only updates when the source value changes by at least the specified delta.\n * Useful for filtering out small fluctuations in numeric values.\n *\n * @param source - Input Signal containing numeric values\n * @param delta - Minimum change required to trigger an update\n * @param options - Optional Signal configuration\n * @returns A new Signal that updates only on significant changes\n *\n * @example\n * const rawTemp = new Signal(20.0);\n * const filteredTemp = threshold(rawTemp, 0.5);\n * rawTemp.value = 20.2; // filteredTemp stays at 20.0\n * rawTemp.value = 20.6; // filteredTemp updates to 20.6\n */\nfunction threshold(source, delta, options) {\n    return (0,_computed__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {\n        const value = source.value;\n        const prevValue = (0,_peek__WEBPACK_IMPORTED_MODULE_1__.peek)(source);\n        return Math.abs(value - prevValue) >= delta ? value : prevValue;\n    }, {\n        ...options,\n        equals: (a, b) => Math.abs(a - b) < delta,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGhyZXNob2xkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBR2tDO0FBRVI7QUFFOUI7Ozs7Ozs7Ozs7Ozs7O0dBY0c7QUFDSSxTQUFTLFNBQVMsQ0FDckIsTUFBaUIsRUFDakIsS0FBYSxFQUNiLE9BQTBCO0lBRTFCLE9BQU8sbURBQVEsQ0FBQyxHQUFHLEVBQUU7UUFDakIsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQztRQUMzQixNQUFNLFNBQVMsR0FBRywyQ0FBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9CLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztJQUNwRSxDQUFDLEVBQUU7UUFDQyxHQUFHLE9BQU87UUFDVixNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxLQUFLO0tBQzVDLENBQUMsQ0FBQztBQUNQLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvdGhyZXNob2xkLnRzPzBkYTMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgY29tcHV0ZWQgfSBmcm9tICcuL2NvbXB1dGVkJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IHBlZWsgfSBmcm9tICcuL3BlZWsnO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBTaWduYWwgdGhhdCBvbmx5IHVwZGF0ZXMgd2hlbiB0aGUgc291cmNlIHZhbHVlIGNoYW5nZXMgYnkgYXQgbGVhc3QgdGhlIHNwZWNpZmllZCBkZWx0YS5cbiAqIFVzZWZ1bCBmb3IgZmlsdGVyaW5nIG91dCBzbWFsbCBmbHVjdHVhdGlvbnMgaW4gbnVtZXJpYyB2YWx1ZXMuXG4gKlxuICogQHBhcmFtIHNvdXJjZSAtIElucHV0IFNpZ25hbCBjb250YWluaW5nIG51bWVyaWMgdmFsdWVzXG4gKiBAcGFyYW0gZGVsdGEgLSBNaW5pbXVtIGNoYW5nZSByZXF1aXJlZCB0byB0cmlnZ2VyIGFuIHVwZGF0ZVxuICogQHBhcmFtIG9wdGlvbnMgLSBPcHRpb25hbCBTaWduYWwgY29uZmlndXJhdGlvblxuICogQHJldHVybnMgQSBuZXcgU2lnbmFsIHRoYXQgdXBkYXRlcyBvbmx5IG9uIHNpZ25pZmljYW50IGNoYW5nZXNcbiAqXG4gKiBAZXhhbXBsZVxuICogY29uc3QgcmF3VGVtcCA9IG5ldyBTaWduYWwoMjAuMCk7XG4gKiBjb25zdCBmaWx0ZXJlZFRlbXAgPSB0aHJlc2hvbGQocmF3VGVtcCwgMC41KTtcbiAqIHJhd1RlbXAudmFsdWUgPSAyMC4yOyAvLyBmaWx0ZXJlZFRlbXAgc3RheXMgYXQgMjAuMFxuICogcmF3VGVtcC52YWx1ZSA9IDIwLjY7IC8vIGZpbHRlcmVkVGVtcCB1cGRhdGVzIHRvIDIwLjZcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRocmVzaG9sZDxUIGV4dGVuZHMgbnVtYmVyPihcbiAgICBzb3VyY2U6IFNpZ25hbDxUPixcbiAgICBkZWx0YTogbnVtYmVyLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFQ+LFxuKTogU2lnbmFsPFQ+IHtcbiAgICByZXR1cm4gY29tcHV0ZWQoKCkgPT4ge1xuICAgICAgICBjb25zdCB2YWx1ZSA9IHNvdXJjZS52YWx1ZTtcbiAgICAgICAgY29uc3QgcHJldlZhbHVlID0gcGVlayhzb3VyY2UpO1xuICAgICAgICByZXR1cm4gTWF0aC5hYnModmFsdWUgLSBwcmV2VmFsdWUpID49IGRlbHRhID8gdmFsdWUgOiBwcmV2VmFsdWU7XG4gICAgfSwge1xuICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICBlcXVhbHM6IChhLCBiKSA9PiBNYXRoLmFicyhhIC0gYikgPCBkZWx0YSxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/threshold.ts\n");

/***/ }),

/***/ "./src/throttled.ts":
/*!**************************!*\
  !*** ./src/throttled.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   throttled: () => (/* binding */ throttled)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./effect */ \"./src/effect.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Create a signal that throttles updates\n */\nfunction throttled(source, interval, options) {\n    const output = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(source.value, options);\n    let lastUpdate = 0;\n    let timeoutId;\n    (0,_effect__WEBPACK_IMPORTED_MODULE_1__.effect)(() => {\n        const value = source.value;\n        const now = Date.now();\n        if (now - lastUpdate >= interval) {\n            output.value = value;\n            lastUpdate = now;\n        }\n        else if (!timeoutId) {\n            timeoutId = setTimeout(() => {\n                output.value = value;\n                lastUpdate = Date.now();\n                timeoutId = undefined;\n            }, interval - (now - lastUpdate));\n        }\n        return () => {\n            if (timeoutId)\n                clearTimeout(timeoutId);\n        };\n    });\n    return output;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdGhyb3R0bGVkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzBDO0FBQ1o7QUFHbEM7O0dBRUc7QUFDSSxTQUFTLFNBQVMsQ0FDckIsTUFBaUIsRUFDakIsUUFBZ0IsRUFDaEIsT0FBMEI7SUFFMUIsTUFBTSxNQUFNLEdBQUcsMkRBQVksQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ25ELElBQUksVUFBVSxHQUFHLENBQUMsQ0FBQztJQUNuQixJQUFJLFNBQXFDLENBQUM7SUFFMUMsK0NBQU0sQ0FBQyxHQUFHLEVBQUU7UUFDUixNQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzNCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUV2QixJQUFJLEdBQUcsR0FBRyxVQUFVLElBQUksUUFBUSxFQUFFLENBQUM7WUFDL0IsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDckIsVUFBVSxHQUFHLEdBQUcsQ0FBQztRQUNyQixDQUFDO2FBQU0sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1lBQ3BCLFNBQVMsR0FBRyxVQUFVLENBQUMsR0FBRyxFQUFFO2dCQUN4QixNQUFNLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztnQkFDckIsVUFBVSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztnQkFDeEIsU0FBUyxHQUFHLFNBQVMsQ0FBQztZQUMxQixDQUFDLEVBQUUsUUFBUSxHQUFHLENBQUMsR0FBRyxHQUFHLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDdEMsQ0FBQztRQUVELE9BQU8sR0FBRyxFQUFFO1lBQ1IsSUFBSSxTQUFTO2dCQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUMzQyxDQUFDLENBQUM7SUFDTixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sTUFBTSxDQUFDO0FBQ2xCLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvdGhyb3R0bGVkLnRzPzczYmQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cbmltcG9ydCB7IFNpZ25hbE9wdGlvbnMgfSBmcm9tICcuL2ludGVyZmFjZXMnO1xuaW1wb3J0IHsgY3JlYXRlU2lnbmFsIH0gZnJvbSAnLi9jcmVhdGVTaWduYWwnO1xuaW1wb3J0IHsgZWZmZWN0IH0gZnJvbSAnLi9lZmZlY3QnO1xuaW1wb3J0IHsgU2lnbmFsIH0gZnJvbSAnLi9zaWduYWwnO1xuXG4vKipcbiAqIENyZWF0ZSBhIHNpZ25hbCB0aGF0IHRocm90dGxlcyB1cGRhdGVzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsZWQ8VD4oXG4gICAgc291cmNlOiBTaWduYWw8VD4sXG4gICAgaW50ZXJ2YWw6IG51bWJlcixcbiAgICBvcHRpb25zPzogU2lnbmFsT3B0aW9uczxUPixcbik6IFNpZ25hbDxUPiB7XG4gICAgY29uc3Qgb3V0cHV0ID0gY3JlYXRlU2lnbmFsKHNvdXJjZS52YWx1ZSwgb3B0aW9ucyk7XG4gICAgbGV0IGxhc3RVcGRhdGUgPSAwO1xuICAgIGxldCB0aW1lb3V0SWQ6IE5vZGVKUy5UaW1lb3V0IHwgdW5kZWZpbmVkO1xuXG4gICAgZWZmZWN0KCgpID0+IHtcbiAgICAgICAgY29uc3QgdmFsdWUgPSBzb3VyY2UudmFsdWU7XG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG5cbiAgICAgICAgaWYgKG5vdyAtIGxhc3RVcGRhdGUgPj0gaW50ZXJ2YWwpIHtcbiAgICAgICAgICAgIG91dHB1dC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgbGFzdFVwZGF0ZSA9IG5vdztcbiAgICAgICAgfSBlbHNlIGlmICghdGltZW91dElkKSB7XG4gICAgICAgICAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBvdXRwdXQudmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICBsYXN0VXBkYXRlID0gRGF0ZS5ub3coKTtcbiAgICAgICAgICAgICAgICB0aW1lb3V0SWQgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB9LCBpbnRlcnZhbCAtIChub3cgLSBsYXN0VXBkYXRlKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKHRpbWVvdXRJZCkgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICAgIH07XG4gICAgfSk7XG5cbiAgICByZXR1cm4gb3V0cHV0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/throttled.ts\n");

/***/ }),

/***/ "./src/updateQueue.ts":
/*!****************************!*\
  !*** ./src/updateQueue.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UpdateQueue: () => (/* binding */ UpdateQueue)\n/* harmony export */ });\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n/**\n * Manages the scheduling and processing of signal updates\n * Uses a topological sort to handle updates in the correct order\n */\nclass UpdateQueue {\n    constructor() {\n        this.queue = new Set();\n        this.processing = false;\n        this.updateDepth = 0;\n        this.maxUpdateDepth = 1000; // Configurable maximum update depth\n    }\n    static getInstance() {\n        if (!this.instance) {\n            this.instance = new UpdateQueue();\n        }\n        return this.instance;\n    }\n    /**\n     * Schedule a computation for update\n     */\n    schedule(computation) {\n        if (this.updateDepth >= this.maxUpdateDepth) {\n            throw new Error('Maximum update depth exceeded - possible circular dependency');\n        }\n        this.queue.add(computation);\n        if (!this.processing) {\n            this.processQueue();\n        }\n    }\n    /**\n     * Process all scheduled updates in dependency order\n     */\n    processQueue() {\n        this.processing = true;\n        this.updateDepth++;\n        try {\n            while (this.queue.size > 0) {\n                const computations = Array.from(this.queue);\n                this.queue.clear();\n                // Sort by dependency depth to ensure correct update order\n                computations.sort((a, b) => a.getDepth() - b.getDepth());\n                for (const computation of computations) {\n                    if (computation.isDirty() && !computation.isDisposed()) {\n                        computation.recompute();\n                    }\n                }\n            }\n        }\n        finally {\n            this.processing = false;\n            this.updateDepth--;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXBkYXRlUXVldWUudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBOzs7OztJQUtJO0FBSUo7OztHQUdHO0FBQ0ksTUFBTSxXQUFXO0lBQXhCO1FBRVksVUFBSyxHQUFHLElBQUksR0FBRyxFQUFlLENBQUM7UUFDL0IsZUFBVSxHQUFHLEtBQUssQ0FBQztRQUNuQixnQkFBVyxHQUFHLENBQUMsQ0FBQztRQUNoQixtQkFBYyxHQUFHLElBQUksQ0FBQyxDQUFDLG9DQUFvQztJQWlEdkUsQ0FBQztJQS9DRyxNQUFNLENBQUMsV0FBVztRQUNkLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7WUFDakIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO1FBQ3RDLENBQUM7UUFDRCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7SUFDekIsQ0FBQztJQUVEOztPQUVHO0lBQ0gsUUFBUSxDQUFDLFdBQXdCO1FBQzdCLElBQUksSUFBSSxDQUFDLFdBQVcsSUFBSSxJQUFJLENBQUMsY0FBYyxFQUFFLENBQUM7WUFDMUMsTUFBTSxJQUFJLEtBQUssQ0FBQyw4REFBOEQsQ0FBQyxDQUFDO1FBQ3BGLENBQUM7UUFFRCxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUM1QixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO1lBQ25CLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUN4QixDQUFDO0lBQ0wsQ0FBQztJQUVEOztPQUVHO0lBQ0ssWUFBWTtRQUNoQixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFFbkIsSUFBSSxDQUFDO1lBQ0QsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxDQUFDLEVBQUUsQ0FBQztnQkFDekIsTUFBTSxZQUFZLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7Z0JBQzVDLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBRW5CLDBEQUEwRDtnQkFDMUQsWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLEVBQUUsR0FBRyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztnQkFFekQsS0FBSyxNQUFNLFdBQVcsSUFBSSxZQUFZLEVBQUUsQ0FBQztvQkFDckMsSUFBSSxXQUFXLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxFQUFFLEVBQUUsQ0FBQzt3QkFDckQsV0FBVyxDQUFDLFNBQVMsRUFBRSxDQUFDO29CQUM1QixDQUFDO2dCQUNMLENBQUM7WUFDTCxDQUFDO1FBQ0wsQ0FBQztnQkFBUyxDQUFDO1lBQ1AsSUFBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7WUFDeEIsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3ZCLENBQUM7SUFDTCxDQUFDO0NBQ0oiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AYXZhdGlqcy9zaWduYWwvLi9zcmMvdXBkYXRlUXVldWUudHM/MzljYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgMjAyNCBLaGFsZWQgU2FtZWVyIDxraGFsZWQuc21xQGhvdG1haWwuY29tPi5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqKi9cblxuaW1wb3J0IHsgQ29tcHV0YXRpb24gfSBmcm9tICcuL2NvbXB1dGF0aW9uJztcblxuLyoqXG4gKiBNYW5hZ2VzIHRoZSBzY2hlZHVsaW5nIGFuZCBwcm9jZXNzaW5nIG9mIHNpZ25hbCB1cGRhdGVzXG4gKiBVc2VzIGEgdG9wb2xvZ2ljYWwgc29ydCB0byBoYW5kbGUgdXBkYXRlcyBpbiB0aGUgY29ycmVjdCBvcmRlclxuICovXG5leHBvcnQgY2xhc3MgVXBkYXRlUXVldWUge1xuICAgIHByaXZhdGUgc3RhdGljIGluc3RhbmNlOiBVcGRhdGVRdWV1ZTtcbiAgICBwcml2YXRlIHF1ZXVlID0gbmV3IFNldDxDb21wdXRhdGlvbj4oKTtcbiAgICBwcml2YXRlIHByb2Nlc3NpbmcgPSBmYWxzZTtcbiAgICBwcml2YXRlIHVwZGF0ZURlcHRoID0gMDtcbiAgICBwcml2YXRlIG1heFVwZGF0ZURlcHRoID0gMTAwMDsgLy8gQ29uZmlndXJhYmxlIG1heGltdW0gdXBkYXRlIGRlcHRoXG5cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKTogVXBkYXRlUXVldWUge1xuICAgICAgICBpZiAoIXRoaXMuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIHRoaXMuaW5zdGFuY2UgPSBuZXcgVXBkYXRlUXVldWUoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5pbnN0YW5jZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTY2hlZHVsZSBhIGNvbXB1dGF0aW9uIGZvciB1cGRhdGVcbiAgICAgKi9cbiAgICBzY2hlZHVsZShjb21wdXRhdGlvbjogQ29tcHV0YXRpb24pOiB2b2lkIHtcbiAgICAgICAgaWYgKHRoaXMudXBkYXRlRGVwdGggPj0gdGhpcy5tYXhVcGRhdGVEZXB0aCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdNYXhpbXVtIHVwZGF0ZSBkZXB0aCBleGNlZWRlZCAtIHBvc3NpYmxlIGNpcmN1bGFyIGRlcGVuZGVuY3knKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRoaXMucXVldWUuYWRkKGNvbXB1dGF0aW9uKTtcbiAgICAgICAgaWYgKCF0aGlzLnByb2Nlc3NpbmcpIHtcbiAgICAgICAgICAgIHRoaXMucHJvY2Vzc1F1ZXVlKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQcm9jZXNzIGFsbCBzY2hlZHVsZWQgdXBkYXRlcyBpbiBkZXBlbmRlbmN5IG9yZGVyXG4gICAgICovXG4gICAgcHJpdmF0ZSBwcm9jZXNzUXVldWUoKTogdm9pZCB7XG4gICAgICAgIHRoaXMucHJvY2Vzc2luZyA9IHRydWU7XG4gICAgICAgIHRoaXMudXBkYXRlRGVwdGgrKztcblxuICAgICAgICB0cnkge1xuICAgICAgICAgICAgd2hpbGUgKHRoaXMucXVldWUuc2l6ZSA+IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjb21wdXRhdGlvbnMgPSBBcnJheS5mcm9tKHRoaXMucXVldWUpO1xuICAgICAgICAgICAgICAgIHRoaXMucXVldWUuY2xlYXIoKTtcblxuICAgICAgICAgICAgICAgIC8vIFNvcnQgYnkgZGVwZW5kZW5jeSBkZXB0aCB0byBlbnN1cmUgY29ycmVjdCB1cGRhdGUgb3JkZXJcbiAgICAgICAgICAgICAgICBjb21wdXRhdGlvbnMuc29ydCgoYSwgYikgPT4gYS5nZXREZXB0aCgpIC0gYi5nZXREZXB0aCgpKTtcblxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgY29tcHV0YXRpb24gb2YgY29tcHV0YXRpb25zKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjb21wdXRhdGlvbi5pc0RpcnR5KCkgJiYgIWNvbXB1dGF0aW9uLmlzRGlzcG9zZWQoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29tcHV0YXRpb24ucmVjb21wdXRlKCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLnByb2Nlc3NpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMudXBkYXRlRGVwdGgtLTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/updateQueue.ts\n");

/***/ }),

/***/ "./src/utility.ts":
/*!************************!*\
  !*** ./src/utility.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultEquals: () => (/* binding */ defaultEquals),\n/* harmony export */   getSignalDepth: () => (/* binding */ getSignalDepth),\n/* harmony export */   hasCircularDependency: () => (/* binding */ hasCircularDependency),\n/* harmony export */   isSignal: () => (/* binding */ isSignal),\n/* harmony export */   resetSignalSystem: () => (/* binding */ resetSignalSystem),\n/* harmony export */   serializeSignal: () => (/* binding */ serializeSignal)\n/* harmony export */ });\n/* harmony import */ var _computedSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computedSignal */ \"./src/computedSignal.ts\");\n/* harmony import */ var _updateQueue__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./updateQueue */ \"./src/updateQueue.ts\");\n/* harmony import */ var _signalMonitor__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./signalMonitor */ \"./src/signalMonitor.ts\");\n/* harmony import */ var _signal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./signal */ \"./src/signal.ts\");\n/* harmony import */ var _signalContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./signalContext */ \"./src/signalContext.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n\n/**\n * Default equality function for comparing signal values\n * Uses Object.is for strict equality comparison\n */\nconst defaultEquals = (a, b) => Object.is(a, b);\n/**\n * Custom JSON serializer for signals\n * Useful for debugging and persistence\n */\nconst serializeSignal = (signal) => {\n    return JSON.stringify({\n        value: signal.value,\n        // @ts-ignore - accessing protected property for serialization\n        name: signal['name'],\n        // @ts-ignore - accessing protected property for serialization\n        disposed: signal['disposed'],\n    });\n};\n/**\n * Type guard to check if a value is a Signal\n */\nfunction isSignal(value) {\n    return value instanceof _signal__WEBPACK_IMPORTED_MODULE_0__.Signal;\n}\n/**\n * Get the current computation depth of a signal chain\n */\nfunction getSignalDepth(signal) {\n    if (signal instanceof _computedSignal__WEBPACK_IMPORTED_MODULE_1__.ComputedSignal) {\n        return signal.getDepth();\n    }\n    return 0;\n}\n/**\n * Check if a signal is part of a circular dependency chain\n */\nfunction hasCircularDependency(signal) {\n    const visited = new Set();\n    const recursionStack = new Set();\n    function dfs(current) {\n        var _a;\n        if (recursionStack.has(current)) {\n            return true;\n        }\n        if (visited.has(current)) {\n            return false;\n        }\n        visited.add(current);\n        recursionStack.add(current);\n        // @ts-ignore - accessing protected property for cycle detection\n        const dependents = current['dependents'] || new Set();\n        for (const dependent of dependents) {\n            // @ts-ignore - accessing protected property for cycle detection\n            if (((_a = dependent['computation']) === null || _a === void 0 ? void 0 : _a.signal) && dfs(dependent['computation'].signal)) {\n                return true;\n            }\n        }\n        recursionStack.delete(current);\n        return false;\n    }\n    return dfs(signal);\n}\n/**\n * Reset the entire signal system state\n * Useful for testing and debugging\n */\nfunction resetSignalSystem() {\n    // @ts-ignore\n    _signalContext__WEBPACK_IMPORTED_MODULE_2__.SignalContext['instance'] = undefined;\n    // @ts-ignore\n    _updateQueue__WEBPACK_IMPORTED_MODULE_3__.UpdateQueue['instance'] = undefined;\n    _signalMonitor__WEBPACK_IMPORTED_MODULE_4__.SignalMonitor.reset();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbGl0eS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzhDO0FBQ047QUFDSTtBQUNkO0FBQ2M7QUFFaEQ7OztHQUdHO0FBQ0ksTUFBTSxhQUFhLEdBQUcsQ0FBSSxDQUFJLEVBQUUsQ0FBSSxFQUFXLEVBQUUsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUV6RTs7O0dBR0c7QUFDSSxNQUFNLGVBQWUsR0FBRyxDQUFJLE1BQWlCLEVBQVUsRUFBRTtJQUM1RCxPQUFPLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDbEIsS0FBSyxFQUFFLE1BQU0sQ0FBQyxLQUFLO1FBQ25CLDhEQUE4RDtRQUM5RCxJQUFJLEVBQUUsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNwQiw4REFBOEQ7UUFDOUQsUUFBUSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUM7S0FDL0IsQ0FBQyxDQUFDO0FBQ1AsQ0FBQyxDQUFDO0FBRUY7O0dBRUc7QUFDSSxTQUFTLFFBQVEsQ0FBSSxLQUFVO0lBQ2xDLE9BQU8sS0FBSyxZQUFZLDJDQUFNLENBQUM7QUFDbkMsQ0FBQztBQUVEOztHQUVHO0FBQ0ksU0FBUyxjQUFjLENBQUMsTUFBbUI7SUFDOUMsSUFBSSxNQUFNLFlBQVksMkRBQWMsRUFBRSxDQUFDO1FBQ25DLE9BQU8sTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFDRCxPQUFPLENBQUMsQ0FBQztBQUNiLENBQUM7QUFFRDs7R0FFRztBQUNJLFNBQVMscUJBQXFCLENBQUMsTUFBbUI7SUFDckQsTUFBTSxPQUFPLEdBQUcsSUFBSSxHQUFHLEVBQWUsQ0FBQztJQUN2QyxNQUFNLGNBQWMsR0FBRyxJQUFJLEdBQUcsRUFBZSxDQUFDO0lBRTlDLFNBQVMsR0FBRyxDQUFDLE9BQW9COztRQUM3QixJQUFJLGNBQWMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQztZQUM5QixPQUFPLElBQUksQ0FBQztRQUNoQixDQUFDO1FBQ0QsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxFQUFFLENBQUM7WUFDdkIsT0FBTyxLQUFLLENBQUM7UUFDakIsQ0FBQztRQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDckIsY0FBYyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUU1QixnRUFBZ0U7UUFDaEUsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLFlBQVksQ0FBQyxJQUFJLElBQUksR0FBRyxFQUFFLENBQUM7UUFDdEQsS0FBSyxNQUFNLFNBQVMsSUFBSSxVQUFVLEVBQUUsQ0FBQztZQUNqQyxnRUFBZ0U7WUFDaEUsSUFBSSxnQkFBUyxDQUFDLGFBQWEsQ0FBQywwQ0FBRSxNQUFNLEtBQUksR0FBRyxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO2dCQUMzRSxPQUFPLElBQUksQ0FBQztZQUNoQixDQUFDO1FBQ0wsQ0FBQztRQUVELGNBQWMsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDL0IsT0FBTyxLQUFLLENBQUM7SUFDakIsQ0FBQztJQUVELE9BQU8sR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ3ZCLENBQUM7QUFFRDs7O0dBR0c7QUFDSSxTQUFTLGlCQUFpQjtJQUM3QixhQUFhO0lBQ2IseURBQWEsQ0FBQyxVQUFVLENBQUMsR0FBRyxTQUFTLENBQUM7SUFDdEMsYUFBYTtJQUNiLHFEQUFXLENBQUMsVUFBVSxDQUFDLEdBQUcsU0FBUyxDQUFDO0lBQ3BDLHlEQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7QUFDMUIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhdmF0aWpzL3NpZ25hbC8uL3NyYy91dGlsaXR5LnRzPzUzNjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMjQgS2hhbGVkIFNhbWVlciA8a2hhbGVkLnNtcUBob3RtYWlsLmNvbT4uXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKiovXG5cblxuaW1wb3J0IHsgQ29tcHV0ZWRTaWduYWwgfSBmcm9tICcuL2NvbXB1dGVkU2lnbmFsJztcbmltcG9ydCB7IFVwZGF0ZVF1ZXVlIH0gZnJvbSAnLi91cGRhdGVRdWV1ZSc7XG5pbXBvcnQgeyBTaWduYWxNb25pdG9yIH0gZnJvbSAnLi9zaWduYWxNb25pdG9yJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IFNpZ25hbENvbnRleHQgfSBmcm9tICcuL3NpZ25hbENvbnRleHQnO1xuXG4vKipcbiAqIERlZmF1bHQgZXF1YWxpdHkgZnVuY3Rpb24gZm9yIGNvbXBhcmluZyBzaWduYWwgdmFsdWVzXG4gKiBVc2VzIE9iamVjdC5pcyBmb3Igc3RyaWN0IGVxdWFsaXR5IGNvbXBhcmlzb25cbiAqL1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRFcXVhbHMgPSA8VD4oYTogVCwgYjogVCk6IGJvb2xlYW4gPT4gT2JqZWN0LmlzKGEsIGIpO1xuXG4vKipcbiAqIEN1c3RvbSBKU09OIHNlcmlhbGl6ZXIgZm9yIHNpZ25hbHNcbiAqIFVzZWZ1bCBmb3IgZGVidWdnaW5nIGFuZCBwZXJzaXN0ZW5jZVxuICovXG5leHBvcnQgY29uc3Qgc2VyaWFsaXplU2lnbmFsID0gPFQ+KHNpZ25hbDogU2lnbmFsPFQ+KTogc3RyaW5nID0+IHtcbiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICB2YWx1ZTogc2lnbmFsLnZhbHVlLFxuICAgICAgICAvLyBAdHMtaWdub3JlIC0gYWNjZXNzaW5nIHByb3RlY3RlZCBwcm9wZXJ0eSBmb3Igc2VyaWFsaXphdGlvblxuICAgICAgICBuYW1lOiBzaWduYWxbJ25hbWUnXSxcbiAgICAgICAgLy8gQHRzLWlnbm9yZSAtIGFjY2Vzc2luZyBwcm90ZWN0ZWQgcHJvcGVydHkgZm9yIHNlcmlhbGl6YXRpb25cbiAgICAgICAgZGlzcG9zZWQ6IHNpZ25hbFsnZGlzcG9zZWQnXSxcbiAgICB9KTtcbn07XG5cbi8qKlxuICogVHlwZSBndWFyZCB0byBjaGVjayBpZiBhIHZhbHVlIGlzIGEgU2lnbmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc1NpZ25hbDxUPih2YWx1ZTogYW55KTogdmFsdWUgaXMgU2lnbmFsPFQ+IHtcbiAgICByZXR1cm4gdmFsdWUgaW5zdGFuY2VvZiBTaWduYWw7XG59XG5cbi8qKlxuICogR2V0IHRoZSBjdXJyZW50IGNvbXB1dGF0aW9uIGRlcHRoIG9mIGEgc2lnbmFsIGNoYWluXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTaWduYWxEZXB0aChzaWduYWw6IFNpZ25hbDxhbnk+KTogbnVtYmVyIHtcbiAgICBpZiAoc2lnbmFsIGluc3RhbmNlb2YgQ29tcHV0ZWRTaWduYWwpIHtcbiAgICAgICAgcmV0dXJuIHNpZ25hbC5nZXREZXB0aCgpO1xuICAgIH1cbiAgICByZXR1cm4gMDtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiBhIHNpZ25hbCBpcyBwYXJ0IG9mIGEgY2lyY3VsYXIgZGVwZW5kZW5jeSBjaGFpblxuICovXG5leHBvcnQgZnVuY3Rpb24gaGFzQ2lyY3VsYXJEZXBlbmRlbmN5KHNpZ25hbDogU2lnbmFsPGFueT4pOiBib29sZWFuIHtcbiAgICBjb25zdCB2aXNpdGVkID0gbmV3IFNldDxTaWduYWw8YW55Pj4oKTtcbiAgICBjb25zdCByZWN1cnNpb25TdGFjayA9IG5ldyBTZXQ8U2lnbmFsPGFueT4+KCk7XG5cbiAgICBmdW5jdGlvbiBkZnMoY3VycmVudDogU2lnbmFsPGFueT4pOiBib29sZWFuIHtcbiAgICAgICAgaWYgKHJlY3Vyc2lvblN0YWNrLmhhcyhjdXJyZW50KSkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZpc2l0ZWQuaGFzKGN1cnJlbnQpKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cblxuICAgICAgICB2aXNpdGVkLmFkZChjdXJyZW50KTtcbiAgICAgICAgcmVjdXJzaW9uU3RhY2suYWRkKGN1cnJlbnQpO1xuXG4gICAgICAgIC8vIEB0cy1pZ25vcmUgLSBhY2Nlc3NpbmcgcHJvdGVjdGVkIHByb3BlcnR5IGZvciBjeWNsZSBkZXRlY3Rpb25cbiAgICAgICAgY29uc3QgZGVwZW5kZW50cyA9IGN1cnJlbnRbJ2RlcGVuZGVudHMnXSB8fCBuZXcgU2V0KCk7XG4gICAgICAgIGZvciAoY29uc3QgZGVwZW5kZW50IG9mIGRlcGVuZGVudHMpIHtcbiAgICAgICAgICAgIC8vIEB0cy1pZ25vcmUgLSBhY2Nlc3NpbmcgcHJvdGVjdGVkIHByb3BlcnR5IGZvciBjeWNsZSBkZXRlY3Rpb25cbiAgICAgICAgICAgIGlmIChkZXBlbmRlbnRbJ2NvbXB1dGF0aW9uJ10/LnNpZ25hbCAmJiBkZnMoZGVwZW5kZW50Wydjb21wdXRhdGlvbiddLnNpZ25hbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJlY3Vyc2lvblN0YWNrLmRlbGV0ZShjdXJyZW50KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIHJldHVybiBkZnMoc2lnbmFsKTtcbn1cblxuLyoqXG4gKiBSZXNldCB0aGUgZW50aXJlIHNpZ25hbCBzeXN0ZW0gc3RhdGVcbiAqIFVzZWZ1bCBmb3IgdGVzdGluZyBhbmQgZGVidWdnaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiByZXNldFNpZ25hbFN5c3RlbSgpOiB2b2lkIHtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgU2lnbmFsQ29udGV4dFsnaW5zdGFuY2UnXSA9IHVuZGVmaW5lZDtcbiAgICAvLyBAdHMtaWdub3JlXG4gICAgVXBkYXRlUXVldWVbJ2luc3RhbmNlJ10gPSB1bmRlZmluZWQ7XG4gICAgU2lnbmFsTW9uaXRvci5yZXNldCgpO1xufVxuXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utility.ts\n");

/***/ }),

/***/ "./src/validated.ts":
/*!**************************!*\
  !*** ./src/validated.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validated: () => (/* binding */ validated)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n/**\n * Creates a Signal with validation capabilities.\n *\n * @template T - Type of value stored in the signal\n * @param initialValue - Starting value of the signal\n * @param validator - Function that validates new values before they're set\n * @param options - Standard SignalOptions configuration\n * @returns A Signal with validation logic applied to value updates\n *\n * @example\n * // Create a signal that only accepts positive numbers\n * const positiveNum = validated(1,\n *   (value) => value > 0 || \"Value must be positive\"\n * );\n *\n * @example\n * // Create a signal with complex validation and custom equality\n * const user = validated(\n *   { id: 1, name: \"John\" },\n *   (value) => {\n *     if (!value.name) return \"Name is required\";\n *     if (value.id < 0) return \"ID must be positive\";\n *     return true;\n *   },\n *   { equals: (a, b) => a.id === b.id }\n * );\n */\nfunction validated(initialValue, validator, options) {\n    const innerSignal = (0,_createSignal__WEBPACK_IMPORTED_MODULE_0__.createSignal)(initialValue, options);\n    const validationError = (0,_computed__WEBPACK_IMPORTED_MODULE_1__.computed)(() => {\n        const result = validator(innerSignal.value);\n        if (typeof result === 'string')\n            return result;\n        if (!result)\n            return 'Validation failed';\n        return null;\n    });\n    return new Proxy(innerSignal, {\n        get(target, prop) {\n            if (prop === 'value') {\n                const error = validationError.value;\n                if (error)\n                    throw new Error(error);\n                return target.value;\n            }\n            return target[prop];\n        },\n        set(target, prop, value) {\n            if (prop === 'value') {\n                const result = validator(value);\n                if (typeof result === 'string')\n                    throw new Error(result);\n                if (!result)\n                    throw new Error('Validation failed');\n                target.value = value;\n            }\n            return true;\n        },\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmFsaWRhdGVkLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7OztJQUtJO0FBRzBDO0FBRVI7QUFFdEM7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBMEJHO0FBQ0ksU0FBUyxTQUFTLENBQ3JCLFlBQWUsRUFDZixTQUF5QyxFQUN6QyxPQUEwQjtJQUUxQixNQUFNLFdBQVcsR0FBRywyREFBWSxDQUFDLFlBQVksRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN4RCxNQUFNLGVBQWUsR0FBRyxtREFBUSxDQUFDLEdBQUcsRUFBRTtRQUNsQyxNQUFNLE1BQU0sR0FBRyxTQUFTLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVDLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUTtZQUFFLE9BQU8sTUFBTSxDQUFDO1FBQzlDLElBQUksQ0FBQyxNQUFNO1lBQUUsT0FBTyxtQkFBbUIsQ0FBQztRQUN4QyxPQUFPLElBQUksQ0FBQztJQUNoQixDQUFDLENBQUMsQ0FBQztJQUVILE9BQU8sSUFBSSxLQUFLLENBQUMsV0FBVyxFQUFFO1FBQzFCLEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSTtZQUNaLElBQUksSUFBSSxLQUFLLE9BQU8sRUFBRSxDQUFDO2dCQUNuQixNQUFNLEtBQUssR0FBRyxlQUFlLENBQUMsS0FBSyxDQUFDO2dCQUNwQyxJQUFJLEtBQUs7b0JBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDbEMsT0FBTyxNQUFNLENBQUMsS0FBSyxDQUFDO1lBQ3hCLENBQUM7WUFDRCxPQUFPLE1BQU0sQ0FBQyxJQUEyQixDQUFDLENBQUM7UUFDL0MsQ0FBQztRQUNELEdBQUcsQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLEtBQUs7WUFDbkIsSUFBSSxJQUFJLEtBQUssT0FBTyxFQUFFLENBQUM7Z0JBQ25CLE1BQU0sTUFBTSxHQUFHLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQztnQkFDaEMsSUFBSSxPQUFPLE1BQU0sS0FBSyxRQUFRO29CQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUM7Z0JBQ3hELElBQUksQ0FBQyxNQUFNO29CQUFFLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztnQkFDbEQsTUFBTSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7WUFDekIsQ0FBQztZQUNELE9BQU8sSUFBSSxDQUFDO1FBQ2hCLENBQUM7S0FDSixDQUFDLENBQUM7QUFDUCxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vQGF2YXRpanMvc2lnbmFsLy4vc3JjL3ZhbGlkYXRlZC50cz8yMzhkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWwgfSBmcm9tICcuL3NpZ25hbCc7XG5pbXBvcnQgeyBjcmVhdGVTaWduYWwgfSBmcm9tICcuL2NyZWF0ZVNpZ25hbCc7XG5pbXBvcnQgeyBTaWduYWxPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IGNvbXB1dGVkIH0gZnJvbSAnLi9jb21wdXRlZCc7XG5cbi8qKlxuICogQ3JlYXRlcyBhIFNpZ25hbCB3aXRoIHZhbGlkYXRpb24gY2FwYWJpbGl0aWVzLlxuICpcbiAqIEB0ZW1wbGF0ZSBUIC0gVHlwZSBvZiB2YWx1ZSBzdG9yZWQgaW4gdGhlIHNpZ25hbFxuICogQHBhcmFtIGluaXRpYWxWYWx1ZSAtIFN0YXJ0aW5nIHZhbHVlIG9mIHRoZSBzaWduYWxcbiAqIEBwYXJhbSB2YWxpZGF0b3IgLSBGdW5jdGlvbiB0aGF0IHZhbGlkYXRlcyBuZXcgdmFsdWVzIGJlZm9yZSB0aGV5J3JlIHNldFxuICogQHBhcmFtIG9wdGlvbnMgLSBTdGFuZGFyZCBTaWduYWxPcHRpb25zIGNvbmZpZ3VyYXRpb25cbiAqIEByZXR1cm5zIEEgU2lnbmFsIHdpdGggdmFsaWRhdGlvbiBsb2dpYyBhcHBsaWVkIHRvIHZhbHVlIHVwZGF0ZXNcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ3JlYXRlIGEgc2lnbmFsIHRoYXQgb25seSBhY2NlcHRzIHBvc2l0aXZlIG51bWJlcnNcbiAqIGNvbnN0IHBvc2l0aXZlTnVtID0gdmFsaWRhdGVkKDEsXG4gKiAgICh2YWx1ZSkgPT4gdmFsdWUgPiAwIHx8IFwiVmFsdWUgbXVzdCBiZSBwb3NpdGl2ZVwiXG4gKiApO1xuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBDcmVhdGUgYSBzaWduYWwgd2l0aCBjb21wbGV4IHZhbGlkYXRpb24gYW5kIGN1c3RvbSBlcXVhbGl0eVxuICogY29uc3QgdXNlciA9IHZhbGlkYXRlZChcbiAqICAgeyBpZDogMSwgbmFtZTogXCJKb2huXCIgfSxcbiAqICAgKHZhbHVlKSA9PiB7XG4gKiAgICAgaWYgKCF2YWx1ZS5uYW1lKSByZXR1cm4gXCJOYW1lIGlzIHJlcXVpcmVkXCI7XG4gKiAgICAgaWYgKHZhbHVlLmlkIDwgMCkgcmV0dXJuIFwiSUQgbXVzdCBiZSBwb3NpdGl2ZVwiO1xuICogICAgIHJldHVybiB0cnVlO1xuICogICB9LFxuICogICB7IGVxdWFsczogKGEsIGIpID0+IGEuaWQgPT09IGIuaWQgfVxuICogKTtcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlZDxUPihcbiAgICBpbml0aWFsVmFsdWU6IFQsXG4gICAgdmFsaWRhdG9yOiAodmFsdWU6IFQpID0+IGJvb2xlYW4gfCBzdHJpbmcsXG4gICAgb3B0aW9ucz86IFNpZ25hbE9wdGlvbnM8VD4sXG4pOiBTaWduYWw8VD4ge1xuICAgIGNvbnN0IGlubmVyU2lnbmFsID0gY3JlYXRlU2lnbmFsKGluaXRpYWxWYWx1ZSwgb3B0aW9ucyk7XG4gICAgY29uc3QgdmFsaWRhdGlvbkVycm9yID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgICAgICBjb25zdCByZXN1bHQgPSB2YWxpZGF0b3IoaW5uZXJTaWduYWwudmFsdWUpO1xuICAgICAgICBpZiAodHlwZW9mIHJlc3VsdCA9PT0gJ3N0cmluZycpIHJldHVybiByZXN1bHQ7XG4gICAgICAgIGlmICghcmVzdWx0KSByZXR1cm4gJ1ZhbGlkYXRpb24gZmFpbGVkJztcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbmV3IFByb3h5KGlubmVyU2lnbmFsLCB7XG4gICAgICAgIGdldCh0YXJnZXQsIHByb3ApIHtcbiAgICAgICAgICAgIGlmIChwcm9wID09PSAndmFsdWUnKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgZXJyb3IgPSB2YWxpZGF0aW9uRXJyb3IudmFsdWU7XG4gICAgICAgICAgICAgICAgaWYgKGVycm9yKSB0aHJvdyBuZXcgRXJyb3IoZXJyb3IpO1xuICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdGFyZ2V0W3Byb3AgYXMga2V5b2YgdHlwZW9mIHRhcmdldF07XG4gICAgICAgIH0sXG4gICAgICAgIHNldCh0YXJnZXQsIHByb3AsIHZhbHVlKSB7XG4gICAgICAgICAgICBpZiAocHJvcCA9PT0gJ3ZhbHVlJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHZhbGlkYXRvcih2YWx1ZSk7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdzdHJpbmcnKSB0aHJvdyBuZXcgRXJyb3IocmVzdWx0KTtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdCkgdGhyb3cgbmV3IEVycm9yKCdWYWxpZGF0aW9uIGZhaWxlZCcpO1xuICAgICAgICAgICAgICAgIHRhcmdldC52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH0sXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/validated.ts\n");

/***/ }),

/***/ "./src/withHistory.ts":
/*!****************************!*\
  !*** ./src/withHistory.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   withHistory: () => (/* binding */ withHistory)\n/* harmony export */ });\n/* harmony import */ var _createSignal__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./createSignal */ \"./src/createSignal.ts\");\n/* harmony import */ var _utility__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utility */ \"./src/utility.ts\");\n/* harmony import */ var _batch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./batch */ \"./src/batch.ts\");\n/* harmony import */ var _computed__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./computed */ \"./src/computed.ts\");\n/**\n * Copyright (c) 2024 Khaled Sameer <khaled.smq@hotmail.com>.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n **/\n\n\n\n\n/**\n * Adds undo/redo functionality to a Signal by wrapping it with history tracking\n *\n * @param initialValue Initial value for the signal\n * @param maxHistory Maximum number of history states to maintain\n * @param options Signal configuration options\n * @returns Enhanced signal with undo/redo capabilities and history access\n */\nfunction withHistory(initialValue, maxHistory = 10, options) {\n    var _a;\n    // Use provided equals function or default\n    const equalsFn = (_a = options === null || options === void 0 ? void 0 : options.equals) !== null && _a !== void 0 ? _a : _utility__WEBPACK_IMPORTED_MODULE_0__.defaultEquals;\n    const signal = (0,_createSignal__WEBPACK_IMPORTED_MODULE_1__.createSignal)(initialValue, {\n        ...options,\n        equals: equalsFn, // Ensure equals function is properly passed\n    });\n    const history = (0,_createSignal__WEBPACK_IMPORTED_MODULE_1__.createSignal)([initialValue]);\n    const currentIndex = (0,_createSignal__WEBPACK_IMPORTED_MODULE_1__.createSignal)(0);\n    const canUndo = (0,_computed__WEBPACK_IMPORTED_MODULE_2__.computed)(() => currentIndex.value > 0);\n    const canRedo = (0,_computed__WEBPACK_IMPORTED_MODULE_2__.computed)(() => currentIndex.value < history.value.length - 1);\n    const wrapper = Object.create(signal);\n    wrapper.history = history;\n    wrapper.canUndo = canUndo;\n    wrapper.canRedo = canRedo;\n    // Use batch for atomic updates\n    Object.defineProperty(wrapper, 'value', {\n        get: () => signal.value,\n        set: (newValue) => {\n            if (!equalsFn(signal.value, newValue)) {\n                (0,_batch__WEBPACK_IMPORTED_MODULE_3__.batch)(() => {\n                    const newIndex = currentIndex.value + 1;\n                    const newHistory = history.value\n                        .slice(0, newIndex)\n                        .concat([newValue]);\n                    if (newHistory.length > maxHistory) {\n                        newHistory.shift();\n                        currentIndex.value = newIndex - 1;\n                    }\n                    else {\n                        currentIndex.value = newIndex;\n                    }\n                    history.value = newHistory;\n                    signal.value = newValue;\n                });\n            }\n        },\n    });\n    wrapper.undo = () => {\n        if (canUndo.value) {\n            (0,_batch__WEBPACK_IMPORTED_MODULE_3__.batch)(() => {\n                currentIndex.value--;\n                signal.value = history.value[currentIndex.value];\n            });\n        }\n    };\n    wrapper.redo = () => {\n        if (canRedo.value) {\n            (0,_batch__WEBPACK_IMPORTED_MODULE_3__.batch)(() => {\n                currentIndex.value++;\n                signal.value = history.value[currentIndex.value];\n            });\n        }\n    };\n    return wrapper;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFFRixPQUFPLENBQUMsSUFBSSxHQUFHLEdBQUcsRUFBRTtRQUNoQixJQUFJLE9BQU8sQ0FBQyxLQUFLLEVBQUUsQ0FBQztZQUNoQiw2Q0FBSyxDQUFDLEdBQUcsRUFBRTtnQkFDUCxZQUFZLENBQUMsS0FBSyxFQUFFLENBQUM7Z0JBQ3JCLE1BQU0sQ0FBQyxLQUFLLEdBQUcsT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsS0FBSyxDQUFNLENBQUM7WUFDMUQsQ0FBQyxDQUFDLENBQUM7UUFDUCxDQUFDO0lBQ0wsQ0FBQyxDQUFDO0lBRUYsT0FBTyxPQUFPLENBQUM7QUFDbkIsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL0BhdmF0aWpzL3NpZ25hbC8uL3NyYy93aXRoSGlzdG9yeS50cz8yMjEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDI0IEtoYWxlZCBTYW1lZXIgPGtoYWxlZC5zbXFAaG90bWFpbC5jb20+LlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICoqL1xuXG5pbXBvcnQgeyBTaWduYWxPcHRpb25zIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcbmltcG9ydCB7IGNyZWF0ZVNpZ25hbCB9IGZyb20gJy4vY3JlYXRlU2lnbmFsJztcbmltcG9ydCB7IFNpZ25hbCB9IGZyb20gJy4vc2lnbmFsJztcbmltcG9ydCB7IGRlZmF1bHRFcXVhbHMgfSBmcm9tICcuL3V0aWxpdHknO1xuaW1wb3J0IHsgYmF0Y2ggfSBmcm9tICcuL2JhdGNoJztcbmltcG9ydCB7IGNvbXB1dGVkIH0gZnJvbSAnLi9jb21wdXRlZCc7XG5cbi8qKlxuICogQWRkcyB1bmRvL3JlZG8gZnVuY3Rpb25hbGl0eSB0byBhIFNpZ25hbCBieSB3cmFwcGluZyBpdCB3aXRoIGhpc3RvcnkgdHJhY2tpbmdcbiAqXG4gKiBAcGFyYW0gaW5pdGlhbFZhbHVlIEluaXRpYWwgdmFsdWUgZm9yIHRoZSBzaWduYWxcbiAqIEBwYXJhbSBtYXhIaXN0b3J5IE1heGltdW0gbnVtYmVyIG9mIGhpc3Rvcnkgc3RhdGVzIHRvIG1haW50YWluXG4gKiBAcGFyYW0gb3B0aW9ucyBTaWduYWwgY29uZmlndXJhdGlvbiBvcHRpb25zXG4gKiBAcmV0dXJucyBFbmhhbmNlZCBzaWduYWwgd2l0aCB1bmRvL3JlZG8gY2FwYWJpbGl0aWVzIGFuZCBoaXN0b3J5IGFjY2Vzc1xuICovXG5leHBvcnQgZnVuY3Rpb24gd2l0aEhpc3Rvcnk8VD4oXG4gICAgaW5pdGlhbFZhbHVlOiBULFxuICAgIG1heEhpc3Rvcnk6IG51bWJlciA9IDEwLFxuICAgIG9wdGlvbnM/OiBTaWduYWxPcHRpb25zPFQ+LFxuKTogU2lnbmFsPFQ+ICYge1xuICAgIHVuZG8oKTogdm9pZDtcbiAgICByZWRvKCk6IHZvaWQ7XG4gICAgaGlzdG9yeTogU2lnbmFsPFRbXT47XG4gICAgY2FuVW5kbzogU2lnbmFsPGJvb2xlYW4+O1xuICAgIGNhblJlZG86IFNpZ25hbDxib29sZWFuPjtcbn0ge1xuICAgIC8vIFVzZSBwcm92aWRlZCBlcXVhbHMgZnVuY3Rpb24gb3IgZGVmYXVsdFxuICAgIGNvbnN0IGVxdWFsc0ZuID0gb3B0aW9ucz8uZXF1YWxzID8/IGRlZmF1bHRFcXVhbHM7XG5cbiAgICBjb25zdCBzaWduYWwgPSBjcmVhdGVTaWduYWwoaW5pdGlhbFZhbHVlLCB7XG4gICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIGVxdWFsczogZXF1YWxzRm4sIC8vIEVuc3VyZSBlcXVhbHMgZnVuY3Rpb24gaXMgcHJvcGVybHkgcGFzc2VkXG4gICAgfSk7XG4gICAgY29uc3QgaGlzdG9yeSA9IGNyZWF0ZVNpZ25hbDxUW10+KFtpbml0aWFsVmFsdWVdKTtcbiAgICBjb25zdCBjdXJyZW50SW5kZXggPSBjcmVhdGVTaWduYWwoMCk7XG5cbiAgICBjb25zdCBjYW5VbmRvID0gY29tcHV0ZWQoKCkgPT4gY3VycmVudEluZGV4LnZhbHVlID4gMCk7XG4gICAgY29uc3QgY2FuUmVkbyA9IGNvbXB1dGVkKCgpID0+IGN1cnJlbnRJbmRleC52YWx1ZSA8IGhpc3RvcnkudmFsdWUubGVuZ3RoIC0gMSk7XG5cbiAgICBjb25zdCB3cmFwcGVyID0gT2JqZWN0LmNyZWF0ZShzaWduYWwpIGFzIFNpZ25hbDxUPiAmIHtcbiAgICAgICAgdW5kbygpOiB2b2lkO1xuICAgICAgICByZWRvKCk6IHZvaWQ7XG4gICAgICAgIGhpc3Rvcnk6IFNpZ25hbDxUW10+O1xuICAgICAgICBjYW5VbmRvOiBTaWduYWw8Ym9vbGVhbj47XG4gICAgICAgIGNhblJlZG86IFNpZ25hbDxib29sZWFuPjtcbiAgICB9O1xuXG4gICAgd3JhcHBlci5oaXN0b3J5ID0gaGlzdG9yeTtcbiAgICB3cmFwcGVyLmNhblVuZG8gPSBjYW5VbmRvO1xuICAgIHdyYXBwZXIuY2FuUmVkbyA9IGNhblJlZG87XG5cbiAgICAvLyBVc2UgYmF0Y2ggZm9yIGF0b21pYyB1cGRhdGVzXG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHdyYXBwZXIsICd2YWx1ZScsIHtcbiAgICAgICAgZ2V0OiAoKSA9PiBzaWduYWwudmFsdWUsXG4gICAgICAgIHNldDogKG5ld1ZhbHVlOiBUKSA9PiB7XG4gICAgICAgICAgICBpZiAoIWVxdWFsc0ZuKHNpZ25hbC52YWx1ZSwgbmV3VmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgYmF0Y2goKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBuZXdJbmRleCA9IGN1cnJlbnRJbmRleC52YWx1ZSArIDE7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IG5ld0hpc3RvcnkgPSBoaXN0b3J5LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAuc2xpY2UoMCwgbmV3SW5kZXgpXG4gICAgICAgICAgICAgICAgICAgICAgICAuY29uY2F0KFtuZXdWYWx1ZV0pO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdIaXN0b3J5Lmxlbmd0aCA+IG1heEhpc3RvcnkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG5ld0hpc3Rvcnkuc2hpZnQoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleC52YWx1ZSA9IG5ld0luZGV4IC0gMTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleC52YWx1ZSA9IG5ld0luZGV4O1xuICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgaGlzdG9yeS52YWx1ZSA9IG5ld0hpc3Rvcnk7XG4gICAgICAgICAgICAgICAgICAgIHNpZ25hbC52YWx1ZSA9IG5ld1ZhbHVlO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9LFxuICAgIH0pO1xuXG4gICAgd3JhcHBlci51bmRvID0gKCkgPT4ge1xuICAgICAgICBpZiAoY2FuVW5kby52YWx1ZSkge1xuICAgICAgICAgICAgYmF0Y2goKCkgPT4ge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleC52YWx1ZS0tO1xuICAgICAgICAgICAgICAgIHNpZ25hbC52YWx1ZSA9IGhpc3RvcnkudmFsdWVbY3VycmVudEluZGV4LnZhbHVlXSBhcyBUO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgd3JhcHBlci5yZWRvID0gKCkgPT4ge1xuICAgICAgICBpZiAoY2FuUmVkby52YWx1ZSkge1xuICAgICAgICAgICAgYmF0Y2goKCkgPT4ge1xuICAgICAgICAgICAgICAgIGN1cnJlbnRJbmRleC52YWx1ZSsrO1xuICAgICAgICAgICAgICAgIHNpZ25hbC52YWx1ZSA9IGhpc3RvcnkudmFsdWVbY3VycmVudEluZGV4LnZhbHVlXSBhcyBUO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgcmV0dXJuIHdyYXBwZXI7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/withHistory.ts\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;